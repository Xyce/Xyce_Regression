# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_203.cir ${CMAKE_CURRENT_BINARY_DIR}/bug_203.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_203.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug_203.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_250.cir ${CMAKE_CURRENT_BINARY_DIR}/bug_250.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/scalingFactors.cir ${CMAKE_CURRENT_BINARY_DIR}/scalingFactors.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/aAsAtto.cir ${CMAKE_CURRENT_BINARY_DIR}/aAsAtto.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/aAsAtto.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/aAsAtto.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/aAsAtto.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/aAsAtto.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/aAsAtto.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/aAsAmp.cir ${CMAKE_CURRENT_BINARY_DIR}/aAsAmp.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/hspiceMath.cir ${CMAKE_CURRENT_BINARY_DIR}/hspiceMath.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/hspiceMath.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/hspiceMath.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/hspiceMath.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/hspiceMath.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/hspiceMath.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/random.cir ${CMAKE_CURRENT_BINARY_DIR}/random.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/random.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/random.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/random.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/random.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/random.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad-hspice-ext.cir ${CMAKE_CURRENT_BINARY_DIR}/bad-hspice-ext.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad-hspice-ext.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad-hspice-ext.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad-hspice-ext.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad-hspice-ext.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad-hspice-ext.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad-hspice-ext.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad-hspice-ext.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/meterUnit.cir ${CMAKE_CURRENT_BINARY_DIR}/meterUnit.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/meterUnit.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/meterUnit.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedAlgebra.cir ${CMAKE_CURRENT_BINARY_DIR}/nakedAlgebra.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedAlgebra.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/nakedAlgebra.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/nakedAlgebra.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedAlgebra.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/nakedAlgebra.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedAlgebraBaseline.cir ${CMAKE_CURRENT_BINARY_DIR}/nakedAlgebraBaseline.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedAlgebraGlobal.cir ${CMAKE_CURRENT_BINARY_DIR}/nakedAlgebraGlobal.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedRandom.cir ${CMAKE_CURRENT_BINARY_DIR}/nakedRandom.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedRandom.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/nakedRandom.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedRandomGlobal.cir ${CMAKE_CURRENT_BINARY_DIR}/nakedRandomGlobal.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedRandomGlobal.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/nakedRandomGlobal.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedTernary.cir ${CMAKE_CURRENT_BINARY_DIR}/nakedTernary.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedTernary.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/nakedTernary.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedIf.cir ${CMAKE_CURRENT_BINARY_DIR}/nakedIf.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nakedIf.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/nakedIf.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator1.cir ${CMAKE_CURRENT_BINARY_DIR}/separator1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/separator1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/separator1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/separator1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator1Ref.cir ${CMAKE_CURRENT_BINARY_DIR}/separator1Ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator2.cir ${CMAKE_CURRENT_BINARY_DIR}/separator2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/separator2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/separator2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/separator2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator2Ref.cir ${CMAKE_CURRENT_BINARY_DIR}/separator2Ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator3.cir ${CMAKE_CURRENT_BINARY_DIR}/separator3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/separator3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/separator3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator3.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/separator3.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator3Ref.cir ${CMAKE_CURRENT_BINARY_DIR}/separator3Ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator4.cir ${CMAKE_CURRENT_BINARY_DIR}/separator4.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator4.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/separator4.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/separator4.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator4.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/separator4.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator4Ref.cir ${CMAKE_CURRENT_BINARY_DIR}/separator4Ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator5.cir ${CMAKE_CURRENT_BINARY_DIR}/separator5.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator5.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/separator5.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/separator5.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator5.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/separator5.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator5Ref.cir ${CMAKE_CURRENT_BINARY_DIR}/separator5Ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator6.cir ${CMAKE_CURRENT_BINARY_DIR}/separator6.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator6.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/separator6.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/separator6.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator6.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/separator6.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/separator6Ref.cir ${CMAKE_CURRENT_BINARY_DIR}/separator6Ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc1.cir ${CMAKE_CURRENT_BINARY_DIR}/paramFunc1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramFunc1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc2.cir ${CMAKE_CURRENT_BINARY_DIR}/paramFunc2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramFunc2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc3.cir ${CMAKE_CURRENT_BINARY_DIR}/paramFunc3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc3.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramFunc3.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc4.cir ${CMAKE_CURRENT_BINARY_DIR}/paramFunc4.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc4.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramFunc4.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc5.cir ${CMAKE_CURRENT_BINARY_DIR}/paramFunc5.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc5.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramFunc5.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc6.cir ${CMAKE_CURRENT_BINARY_DIR}/paramFunc6.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramFunc6.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramFunc6.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/aAsAtto.cir.sh COMMAND perl -I${XyceRegressionTestScripts} aAsAtto.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} aAsAtto.cir ${OutputDataDir}/PARSER/aAsAtto.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/aAsAtto.cir.sh PROPERTY LABELS "serial;nightly;parallel;hspice;issue223")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/aAsAtto.cir.sh COMMAND perl -I${XyceRegressionTestScripts} aAsAtto.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} aAsAtto.cir ${OutputDataDir}/PARSER/aAsAtto.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/aAsAtto.cir.sh PROPERTY LABELS "serial;nightly;parallel;hspice;issue223")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/bad-hspice-ext.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad-hspice-ext.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad-hspice-ext.cir ${OutputDataDir}/PARSER/bad-hspice-ext.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/bad-hspice-ext.cir.sh PROPERTY LABELS "serial;nightly;parallel;hspice;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/bad-hspice-ext.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad-hspice-ext.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad-hspice-ext.cir ${OutputDataDir}/PARSER/bad-hspice-ext.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/bad-hspice-ext.cir.sh PROPERTY LABELS "serial;nightly;parallel;hspice;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/bug_203.cir COMMAND $<TARGET_FILE:Xyce> bug_203.cir )
  set_property(TEST ${TestNamePrefix}PARSER/bug_203.cir PROPERTY LABELS "serial;nightly;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/bug_203.cir PROPERTIES FIXTURES_SETUP bug_203.cir)
  add_test(NAME ${TestNamePrefix}PARSER/bug_203.cir.verify COMMAND ${XYCE_VERIFY} bug_203.cir ${OutputDataDir}/PARSER/bug_203.cir.prn bug_203.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/bug_203.cir.verify PROPERTIES FIXTURES_REQUIRED bug_203.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/bug_250.cir COMMAND $<TARGET_FILE:Xyce> bug_250.cir )
  set_property(TEST ${TestNamePrefix}PARSER/bug_250.cir PROPERTY LABELS "serial;nightly;parallel;mos1;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/bug_250.cir PROPERTIES FIXTURES_SETUP bug_250.cir)
  add_test(NAME ${TestNamePrefix}PARSER/bug_250.cir.verify COMMAND ${XYCE_VERIFY} bug_250.cir ${OutputDataDir}/PARSER/bug_250.cir.prn bug_250.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/bug_250.cir.verify PROPERTIES FIXTURES_REQUIRED bug_250.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/bug_250.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> bug_250.cir )
  set_property(TEST ${TestNamePrefix}PARSER/bug_250.cir PROPERTY LABELS "serial;nightly;parallel;mos1;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/bug_250.cir PROPERTIES FIXTURES_SETUP bug_250.cir)
  add_test(NAME ${TestNamePrefix}PARSER/bug_250.cir.verify COMMAND ${XYCE_VERIFY} bug_250.cir ${OutputDataDir}/PARSER/bug_250.cir.prn bug_250.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/bug_250.cir.verify PROPERTIES FIXTURES_REQUIRED bug_250.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/hspiceMath.cir.sh COMMAND perl -I${XyceRegressionTestScripts} hspiceMath.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} hspiceMath.cir ${OutputDataDir}/PARSER/hspiceMath.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/hspiceMath.cir.sh PROPERTY LABELS "serial;nightly;parallel;hspice")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/hspiceMath.cir.sh COMMAND perl -I${XyceRegressionTestScripts} hspiceMath.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} hspiceMath.cir ${OutputDataDir}/PARSER/hspiceMath.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/hspiceMath.cir.sh PROPERTY LABELS "serial;nightly;parallel;hspice")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/meterUnit.cir COMMAND $<TARGET_FILE:Xyce> meterUnit.cir )
  set_property(TEST ${TestNamePrefix}PARSER/meterUnit.cir PROPERTY LABELS "serial;nightly;parallel;issue195;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/meterUnit.cir PROPERTIES FIXTURES_SETUP meterUnit.cir)
  add_test(NAME ${TestNamePrefix}PARSER/meterUnit.cir.verify COMMAND ${XYCE_VERIFY} meterUnit.cir ${OutputDataDir}/PARSER/meterUnit.cir.prn meterUnit.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/meterUnit.cir.verify PROPERTIES FIXTURES_REQUIRED meterUnit.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/meterUnit.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> meterUnit.cir )
  set_property(TEST ${TestNamePrefix}PARSER/meterUnit.cir PROPERTY LABELS "serial;nightly;parallel;issue195;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/meterUnit.cir PROPERTIES FIXTURES_SETUP meterUnit.cir)
  add_test(NAME ${TestNamePrefix}PARSER/meterUnit.cir.verify COMMAND ${XYCE_VERIFY} meterUnit.cir ${OutputDataDir}/PARSER/meterUnit.cir.prn meterUnit.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/meterUnit.cir.verify PROPERTIES FIXTURES_REQUIRED meterUnit.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/nakedAlgebra.cir.sh COMMAND bash nakedAlgebra.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} nakedAlgebra.cir ${OutputDataDir}/PARSER/nakedAlgebra.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/nakedAlgebra.cir.sh PROPERTY LABELS "serial;nightly;parallel;issue195;hspice")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/nakedAlgebra.cir.sh COMMAND bash nakedAlgebra.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} nakedAlgebra.cir ${OutputDataDir}/PARSER/nakedAlgebra.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/nakedAlgebra.cir.sh PROPERTY LABELS "serial;nightly;parallel;issue195;hspice")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/nakedIf.cir COMMAND $<TARGET_FILE:Xyce> nakedIf.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedIf.cir PROPERTY LABELS "serial;nightly;parallel;issue195;hspice;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedIf.cir PROPERTIES FIXTURES_SETUP nakedIf.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedIf.cir.verify COMMAND ${XYCE_VERIFY} nakedIf.cir ${OutputDataDir}/PARSER/nakedIf.cir.prn nakedIf.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedIf.cir.verify PROPERTIES FIXTURES_REQUIRED nakedIf.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/nakedIf.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> nakedIf.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedIf.cir PROPERTY LABELS "serial;nightly;parallel;issue195;hspice;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedIf.cir PROPERTIES FIXTURES_SETUP nakedIf.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedIf.cir.verify COMMAND ${XYCE_VERIFY} nakedIf.cir ${OutputDataDir}/PARSER/nakedIf.cir.prn nakedIf.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedIf.cir.verify PROPERTIES FIXTURES_REQUIRED nakedIf.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandom.cir COMMAND $<TARGET_FILE:Xyce> nakedRandom.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedRandom.cir PROPERTY LABELS "serial;nightly;parallel;issue195;hspice;random;issue24;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandom.cir PROPERTIES FIXTURES_SETUP nakedRandom.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandom.cir.verify COMMAND ${XYCE_VERIFY} nakedRandom.cir ${OutputDataDir}/PARSER/nakedRandom.cir.prn nakedRandom.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandom.cir.verify PROPERTIES FIXTURES_REQUIRED nakedRandom.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandom.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> nakedRandom.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedRandom.cir PROPERTY LABELS "serial;nightly;parallel;issue195;hspice;random;issue24;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandom.cir PROPERTIES FIXTURES_SETUP nakedRandom.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandom.cir.verify COMMAND ${XYCE_VERIFY} nakedRandom.cir ${OutputDataDir}/PARSER/nakedRandom.cir.prn nakedRandom.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandom.cir.verify PROPERTIES FIXTURES_REQUIRED nakedRandom.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandomGlobal.cir COMMAND $<TARGET_FILE:Xyce> nakedRandomGlobal.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedRandomGlobal.cir PROPERTY LABELS "serial;nightly;parallel;issue195;random;issue24;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandomGlobal.cir PROPERTIES FIXTURES_SETUP nakedRandomGlobal.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandomGlobal.cir.verify COMMAND ${XYCE_VERIFY} nakedRandomGlobal.cir ${OutputDataDir}/PARSER/nakedRandomGlobal.cir.prn nakedRandomGlobal.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandomGlobal.cir.verify PROPERTIES FIXTURES_REQUIRED nakedRandomGlobal.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandomGlobal.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> nakedRandomGlobal.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedRandomGlobal.cir PROPERTY LABELS "serial;nightly;parallel;issue195;random;issue24;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandomGlobal.cir PROPERTIES FIXTURES_SETUP nakedRandomGlobal.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedRandomGlobal.cir.verify COMMAND ${XYCE_VERIFY} nakedRandomGlobal.cir ${OutputDataDir}/PARSER/nakedRandomGlobal.cir.prn nakedRandomGlobal.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedRandomGlobal.cir.verify PROPERTIES FIXTURES_REQUIRED nakedRandomGlobal.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/nakedTernary.cir COMMAND $<TARGET_FILE:Xyce> nakedTernary.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedTernary.cir PROPERTY LABELS "serial;nightly;parallel;issue195;hspice;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedTernary.cir PROPERTIES FIXTURES_SETUP nakedTernary.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedTernary.cir.verify COMMAND ${XYCE_VERIFY} nakedTernary.cir ${OutputDataDir}/PARSER/nakedTernary.cir.prn nakedTernary.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedTernary.cir.verify PROPERTIES FIXTURES_REQUIRED nakedTernary.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/nakedTernary.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> nakedTernary.cir )
  set_property(TEST ${TestNamePrefix}PARSER/nakedTernary.cir PROPERTY LABELS "serial;nightly;parallel;issue195;hspice;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/nakedTernary.cir PROPERTIES FIXTURES_SETUP nakedTernary.cir)
  add_test(NAME ${TestNamePrefix}PARSER/nakedTernary.cir.verify COMMAND ${XYCE_VERIFY} nakedTernary.cir ${OutputDataDir}/PARSER/nakedTernary.cir.prn nakedTernary.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/nakedTernary.cir.verify PROPERTIES FIXTURES_REQUIRED nakedTernary.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc1.cir COMMAND $<TARGET_FILE:Xyce> paramFunc1.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc1.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc1.cir PROPERTIES FIXTURES_SETUP paramFunc1.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc1.cir.verify COMMAND ${XYCE_VERIFY} paramFunc1.cir ${OutputDataDir}/PARSER/paramFunc1.cir.prn paramFunc1.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc1.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc1.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc1.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> paramFunc1.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc1.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc1.cir PROPERTIES FIXTURES_SETUP paramFunc1.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc1.cir.verify COMMAND ${XYCE_VERIFY} paramFunc1.cir ${OutputDataDir}/PARSER/paramFunc1.cir.prn paramFunc1.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc1.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc1.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc2.cir COMMAND $<TARGET_FILE:Xyce> paramFunc2.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc2.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc2.cir PROPERTIES FIXTURES_SETUP paramFunc2.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc2.cir.verify COMMAND ${XYCE_VERIFY} paramFunc2.cir ${OutputDataDir}/PARSER/paramFunc2.cir.prn paramFunc2.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc2.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc2.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc2.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> paramFunc2.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc2.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc2.cir PROPERTIES FIXTURES_SETUP paramFunc2.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc2.cir.verify COMMAND ${XYCE_VERIFY} paramFunc2.cir ${OutputDataDir}/PARSER/paramFunc2.cir.prn paramFunc2.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc2.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc2.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc3.cir COMMAND $<TARGET_FILE:Xyce> paramFunc3.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc3.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc3.cir PROPERTIES FIXTURES_SETUP paramFunc3.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc3.cir.verify COMMAND ${XYCE_VERIFY} paramFunc3.cir ${OutputDataDir}/PARSER/paramFunc3.cir.prn paramFunc3.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc3.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc3.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc3.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> paramFunc3.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc3.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc3.cir PROPERTIES FIXTURES_SETUP paramFunc3.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc3.cir.verify COMMAND ${XYCE_VERIFY} paramFunc3.cir ${OutputDataDir}/PARSER/paramFunc3.cir.prn paramFunc3.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc3.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc3.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc4.cir COMMAND $<TARGET_FILE:Xyce> paramFunc4.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc4.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc4.cir PROPERTIES FIXTURES_SETUP paramFunc4.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc4.cir.verify COMMAND ${XYCE_VERIFY} paramFunc4.cir ${OutputDataDir}/PARSER/paramFunc4.cir.prn paramFunc4.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc4.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc4.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc4.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> paramFunc4.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc4.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc4.cir PROPERTIES FIXTURES_SETUP paramFunc4.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc4.cir.verify COMMAND ${XYCE_VERIFY} paramFunc4.cir ${OutputDataDir}/PARSER/paramFunc4.cir.prn paramFunc4.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc4.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc4.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc5.cir COMMAND $<TARGET_FILE:Xyce> paramFunc5.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc5.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc5.cir PROPERTIES FIXTURES_SETUP paramFunc5.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc5.cir.verify COMMAND ${XYCE_VERIFY} paramFunc5.cir ${OutputDataDir}/PARSER/paramFunc5.cir.prn paramFunc5.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc5.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc5.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc5.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> paramFunc5.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc5.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc5.cir PROPERTIES FIXTURES_SETUP paramFunc5.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc5.cir.verify COMMAND ${XYCE_VERIFY} paramFunc5.cir ${OutputDataDir}/PARSER/paramFunc5.cir.prn paramFunc5.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc5.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc5.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc6.cir COMMAND $<TARGET_FILE:Xyce> paramFunc6.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc6.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc6.cir PROPERTIES FIXTURES_SETUP paramFunc6.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc6.cir.verify COMMAND ${XYCE_VERIFY} paramFunc6.cir ${OutputDataDir}/PARSER/paramFunc6.cir.prn paramFunc6.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc6.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc6.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc6.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> paramFunc6.cir )
  set_property(TEST ${TestNamePrefix}PARSER/paramFunc6.cir PROPERTY LABELS "serial;nightly;parallel;hspice;issue488;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc6.cir PROPERTIES FIXTURES_SETUP paramFunc6.cir)
  add_test(NAME ${TestNamePrefix}PARSER/paramFunc6.cir.verify COMMAND ${XYCE_VERIFY} paramFunc6.cir ${OutputDataDir}/PARSER/paramFunc6.cir.prn paramFunc6.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/paramFunc6.cir.verify PROPERTIES FIXTURES_REQUIRED paramFunc6.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/random.cir.sh COMMAND perl -I${XyceRegressionTestScripts} random.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} random.cir ${OutputDataDir}/PARSER/random.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/random.cir.sh PROPERTY LABELS "serial;nightly;parallel;random;hspice")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/random.cir.sh COMMAND perl -I${XyceRegressionTestScripts} random.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} random.cir ${OutputDataDir}/PARSER/random.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/random.cir.sh PROPERTY LABELS "serial;nightly;parallel;random;hspice")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PARSER/scalingFactors.cir COMMAND $<TARGET_FILE:Xyce> scalingFactors.cir )
  set_property(TEST ${TestNamePrefix}PARSER/scalingFactors.cir PROPERTY LABELS "serial;nightly;parallel;mos1;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/scalingFactors.cir PROPERTIES FIXTURES_SETUP scalingFactors.cir)
  add_test(NAME ${TestNamePrefix}PARSER/scalingFactors.cir.verify COMMAND ${XYCE_VERIFY} scalingFactors.cir ${OutputDataDir}/PARSER/scalingFactors.cir.prn scalingFactors.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/scalingFactors.cir.verify PROPERTIES FIXTURES_REQUIRED scalingFactors.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PARSER/scalingFactors.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> scalingFactors.cir )
  set_property(TEST ${TestNamePrefix}PARSER/scalingFactors.cir PROPERTY LABELS "serial;nightly;parallel;mos1;valgrind")
  set_tests_properties(${TestNamePrefix}PARSER/scalingFactors.cir PROPERTIES FIXTURES_SETUP scalingFactors.cir)
  add_test(NAME ${TestNamePrefix}PARSER/scalingFactors.cir.verify COMMAND ${XYCE_VERIFY} scalingFactors.cir ${OutputDataDir}/PARSER/scalingFactors.cir.prn scalingFactors.cir.prn )
  set_tests_properties(${TestNamePrefix}PARSER/scalingFactors.cir.verify PROPERTIES FIXTURES_REQUIRED scalingFactors.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} separator1.cir ${OutputDataDir}/PARSER/separator1.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator1.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} separator1.cir ${OutputDataDir}/PARSER/separator1.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator1.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} separator2.cir ${OutputDataDir}/PARSER/separator2.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator2.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;diode;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} separator2.cir ${OutputDataDir}/PARSER/separator2.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator2.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;diode;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} separator3.cir ${OutputDataDir}/PARSER/separator3.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator3.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} separator3.cir ${OutputDataDir}/PARSER/separator3.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator3.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator4.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator4.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} separator4.cir ${OutputDataDir}/PARSER/separator4.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator4.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;sens;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator4.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator4.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} separator4.cir ${OutputDataDir}/PARSER/separator4.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator4.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;sens;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator5.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator5.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} separator5.cir ${OutputDataDir}/PARSER/separator5.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator5.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;diode;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator5.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator5.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} separator5.cir ${OutputDataDir}/PARSER/separator5.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator5.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;diode;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator6.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator6.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} separator6.cir ${OutputDataDir}/PARSER/separator6.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator6.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;diode;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PARSER/separator6.cir.sh COMMAND perl -I${XyceRegressionTestScripts} separator6.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} separator6.cir ${OutputDataDir}/PARSER/separator6.cir.prn )
  set_property(TEST ${TestNamePrefix}PARSER/separator6.cir.sh PROPERTY LABELS "serial;nightly;parallel;separator;hspice;issue223;diode;valgrind")
endif()
