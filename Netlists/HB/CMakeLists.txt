# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

add_subdirectory(RC)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/circuit3.cir ${CMAKE_CURRENT_BINARY_DIR}/circuit3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/circuit3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/circuit3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/circuit3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt1.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hb.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hb.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hb.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hb.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hb1.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hb1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTdsamples.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTdsamples.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTran.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTran_copy1.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTran_copy1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTran_copy2.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTran_copy2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTran_copy3.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTran_copy3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTran_tahb.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTran_tahb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt_tahb.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt_tahb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbt_tahb.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt_tahb.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbt_tahb.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_mpde.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_mpde.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbtbox.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtbox.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbtbox.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtbox.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtbox.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbtbox.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtbox.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbtdia.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtdia.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbtdia.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtdia.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtdia.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbtdia.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbtdia.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb.cir ${CMAKE_CURRENT_BINARY_DIR}/invert_hb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/invert_hb.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/invert_hb.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/invert_hb.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb1.cir ${CMAKE_CURRENT_BINARY_DIR}/invert_hb1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_accurate.cir ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_accurate.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_accurate.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_accurate.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_accurate.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_accurate_nostartup.cir ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_accurate_nostartup.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_accurate_nostartup.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_accurate_nostartup.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_accurate_nostartup.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_lapack.cir ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_lapack.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_lapack.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_lapack.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_lapack.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_corrected.cir ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_corrected.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invert_hb_corrected.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_corrected.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/invert_hb_corrected.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTdsamples.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTdsamples.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTdsamples.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gilbert_cell_hbTran2.cir ${CMAKE_CURRENT_BINARY_DIR}/gilbert_cell_hbTran2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb.cir ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb_basker.cir ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_basker.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb_basker.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_basker.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_basker.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb_basker.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_basker.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb_blockbasker.cir ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_blockbasker.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb_blockbasker.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_blockbasker.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_blockbasker.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/common_emitter_hb_blockbasker.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/common_emitter_hb_blockbasker.cir.tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/circuit3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} circuit3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} circuit3.cir ${OutputDataDir}/HB/circuit3.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/circuit3.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/circuit3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} circuit3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} circuit3.cir ${OutputDataDir}/HB/circuit3.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/circuit3.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/common_emitter_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} common_emitter_hb.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} common_emitter_hb.cir ${OutputDataDir}/HB/common_emitter_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/common_emitter_hb.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/common_emitter_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} common_emitter_hb.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} common_emitter_hb.cir ${OutputDataDir}/HB/common_emitter_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/common_emitter_hb.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND  Xyce_AMESOS2 AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/common_emitter_hb_basker.cir.sh COMMAND perl -I${XyceRegressionTestScripts} common_emitter_hb_basker.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} common_emitter_hb_basker.cir ${OutputDataDir}/HB/common_emitter_hb_basker.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/common_emitter_hb_basker.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;required:amesos2basker;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND Xyce_AMESOS2 AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/common_emitter_hb_basker.cir.sh COMMAND perl -I${XyceRegressionTestScripts} common_emitter_hb_basker.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} common_emitter_hb_basker.cir ${OutputDataDir}/HB/common_emitter_hb_basker.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/common_emitter_hb_basker.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;required:amesos2basker;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gilbert_cell_hb.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hb.cir ${OutputDataDir}/HB/gilbert_cell_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hb.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gilbert_cell_hb.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hb.cir ${OutputDataDir}/HB/gilbert_cell_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hb.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbTdsamples.cir.sh COMMAND bash gilbert_cell_hbTdsamples.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbTdsamples.cir ${OutputDataDir}/HB/gilbert_cell_hbTdsamples.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbTdsamples.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbTdsamples.cir.sh COMMAND bash gilbert_cell_hbTdsamples.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbTdsamples.cir ${OutputDataDir}/HB/gilbert_cell_hbTdsamples.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbTdsamples.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbt.cir.sh COMMAND bash gilbert_cell_hbt.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbt.cir ${OutputDataDir}/HB/gilbert_cell_hbt.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbt.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbt.cir.sh COMMAND bash gilbert_cell_hbt.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbt.cir ${OutputDataDir}/HB/gilbert_cell_hbt.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbt.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbt1.cir.sh COMMAND bash gilbert_cell_hbt1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbt1.cir ${OutputDataDir}/HB/gilbert_cell_hbt1.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbt1.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbt1.cir.sh COMMAND bash gilbert_cell_hbt1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbt1.cir ${OutputDataDir}/HB/gilbert_cell_hbt1.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbt1.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbt_tahb.cir.sh COMMAND bash gilbert_cell_hbt_tahb.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbt_tahb.cir ${OutputDataDir}/HB/gilbert_cell_hbt_tahb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbt_tahb.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbt_tahb.cir.sh COMMAND bash gilbert_cell_hbt_tahb.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbt_tahb.cir ${OutputDataDir}/HB/gilbert_cell_hbt_tahb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbt_tahb.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbtbox.cir.sh COMMAND bash gilbert_cell_hbtbox.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbtbox.cir ${OutputDataDir}/HB/gilbert_cell_hbtbox.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbtbox.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbtbox.cir.sh COMMAND bash gilbert_cell_hbtbox.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbtbox.cir ${OutputDataDir}/HB/gilbert_cell_hbtbox.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbtbox.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbtdia.cir.sh COMMAND bash gilbert_cell_hbtdia.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbtdia.cir ${OutputDataDir}/HB/gilbert_cell_hbtdia.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbtdia.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}HB/gilbert_cell_hbtdia.cir.sh COMMAND bash gilbert_cell_hbtdia.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gilbert_cell_hbtdia.cir ${OutputDataDir}/HB/gilbert_cell_hbtdia.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/gilbert_cell_hbtdia.cir.sh PROPERTY LABELS "serial;nightly;parallel;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb.cir ${OutputDataDir}/HB/invert_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb.cir.sh PROPERTY LABELS "parallel;serial;nightly;mos2;hb;required:fft;valgrind;capacitor;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb.cir ${OutputDataDir}/HB/invert_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb.cir.sh PROPERTY LABELS "parallel;serial;nightly;mos2;hb;required:fft;valgrind;capacitor;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_accurate.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_accurate.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_accurate.cir ${OutputDataDir}/HB/invert_hb_accurate.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_accurate.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_accurate.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_accurate.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_accurate.cir ${OutputDataDir}/HB/invert_hb_accurate.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_accurate.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_accurate_nostartup.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_accurate_nostartup.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_accurate_nostartup.cir ${OutputDataDir}/HB/invert_hb_accurate_nostartup.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_accurate_nostartup.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_accurate_nostartup.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_accurate_nostartup.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_accurate_nostartup.cir ${OutputDataDir}/HB/invert_hb_accurate_nostartup.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_accurate_nostartup.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_corrected.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_corrected.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_corrected.cir ${OutputDataDir}/HB/invert_hb_corrected.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_corrected.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_corrected.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_corrected.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_corrected.cir ${OutputDataDir}/HB/invert_hb_corrected.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_corrected.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_lapack.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_lapack.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_lapack.cir ${OutputDataDir}/HB/invert_hb_lapack.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_lapack.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}HB/invert_hb_lapack.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invert_hb_lapack.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} invert_hb_lapack.cir ${OutputDataDir}/HB/invert_hb_lapack.cir.prn )
  set_property(TEST ${TestNamePrefix}HB/invert_hb_lapack.cir.sh PROPERTY LABELS "parallel;serial;nightly;hb;required:fft;valgrind")
endif()
