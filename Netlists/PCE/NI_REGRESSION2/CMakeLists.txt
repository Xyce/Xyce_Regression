# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cmosInverter_regr.cir ${CMAKE_CURRENT_BINARY_DIR}/cmosInverter_regr.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cmosInverter_regr.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/cmosInverter_regr.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/cmosInverter_regr.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cmosInverter_regr.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/cmosInverter_regr.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/goldprn_cmosInverter_regr.cir.ES.dat ${CMAKE_CURRENT_BINARY_DIR}/goldprn_cmosInverter_regr.cir.ES.dat ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printLine_for_cmosInverter_regr.cir ${CMAKE_CURRENT_BINARY_DIR}/printLine_for_cmosInverter_regr.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/embeddedNormalPCE.cir ${CMAKE_CURRENT_BINARY_DIR}/embeddedNormalPCE.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/embeddedNormalPCE.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/embeddedNormalPCE.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/embeddedNormalPCE.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/embeddedNormalPCE.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/embeddedNormalPCE.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramNormalPCE.cir ${CMAKE_CURRENT_BINARY_DIR}/paramNormalPCE.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramNormalPCE.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/paramNormalPCE.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/paramNormalPCE.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramNormalPCE.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramNormalPCE.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramUniformPCE.cir ${CMAKE_CURRENT_BINARY_DIR}/paramUniformPCE.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramUniformPCE.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/paramUniformPCE.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/paramUniformPCE.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/paramUniformPCE.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/paramUniformPCE.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/simpleNormalPCE.cir ${CMAKE_CURRENT_BINARY_DIR}/simpleNormalPCE.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/simpleNormalPCE.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/simpleNormalPCE.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/simpleNormalPCE.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/simpleNormalPCE.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/simpleNormalPCE.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/simpleUniformPCE.cir ${CMAKE_CURRENT_BINARY_DIR}/simpleUniformPCE.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/simpleUniformPCE.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/simpleUniformPCE.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/simpleUniformPCE.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/simpleUniformPCE.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/simpleUniformPCE.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/paramNormalPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} paramNormalPCE.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} paramNormalPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/paramNormalPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/paramNormalPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;expression;issue200;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/paramNormalPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} paramNormalPCE.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} paramNormalPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/paramNormalPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/paramNormalPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;expression;issue200;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/simpleNormalPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} simpleNormalPCE.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} simpleNormalPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/simpleNormalPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/simpleNormalPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;expression;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/simpleNormalPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} simpleNormalPCE.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} simpleNormalPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/simpleNormalPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/simpleNormalPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;expression;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/paramUniformPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} paramUniformPCE.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} paramUniformPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/paramUniformPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/paramUniformPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;uniform;expression;issue200;capacitor;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/paramUniformPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} paramUniformPCE.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} paramUniformPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/paramUniformPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/paramUniformPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;uniform;expression;issue200;capacitor;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/simpleUniformPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} simpleUniformPCE.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} simpleUniformPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/simpleUniformPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/simpleUniformPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;uniform;expression;capacitor;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/simpleUniformPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} simpleUniformPCE.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} simpleUniformPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/simpleUniformPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/simpleUniformPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;uniform;expression;capacitor;sampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/cmosInverter_regr.cir.sh COMMAND perl -I${XyceRegressionTestScripts} cmosInverter_regr.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} cmosInverter_regr.cir ${OutputDataDir}/PCE/NI_REGRESSION2/cmosInverter_regr.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/cmosInverter_regr.cir.sh PROPERTY LABELS "nightly;serial;pce;tran;expression;embeddedsampling;regression_pce;required:stokhos;issue84")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/embeddedNormalPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} embeddedNormalPCE.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} embeddedNormalPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/embeddedNormalPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/embeddedNormalPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;expression;embeddedsampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}PCE/NI_REGRESSION2/embeddedNormalPCE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} embeddedNormalPCE.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} embeddedNormalPCE.cir ${OutputDataDir}/PCE/NI_REGRESSION2/embeddedNormalPCE.cir.prn )
  set_property(TEST ${TestNamePrefix}PCE/NI_REGRESSION2/embeddedNormalPCE.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;expression;embeddedsampling;pce;regression_pce;required:stokhos;valgrind;issue84")
endif()
