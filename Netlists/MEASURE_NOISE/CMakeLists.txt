# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY  AvgTestNoise.cir AvgTestNoise.cir.sh AvgTestNoiseGSfile DerivTestNoise.cir DerivTestNoise.cir.sh DerivTestNoiseGSfile EquationEvalTestNoise.cir EquationEvalTestNoise.cir.sh EquationEvalTestNoiseGSfile ErrorFuncTestNoise.cir ErrorFuncTestNoise.cir.sh ErrorFuncTestNoiseGSfile ErrorTestNoise.cir ErrorTestNoise.cir.sh ErrorTestNoiseGSfile ErrorTestNoiseRawData.NOISE.prn FindWhenTestNoise.cir FindWhenTestNoise.cir.sh FindWhenTestNoiseGSfile IntegTestNoise.cir IntegTestNoise.cir.sh IntegTestNoiseGSfile MaxMinPPTestNoise.cir MaxMinPPTestNoise.cir.sh MaxMinPPTestNoiseGSfile InputNoiseOps.cir InputNoiseOps.cir.sh InputNoiseOpsGSfile InputNoiseOpsRawData.NOISE.prn OutputNoiseOps.cir OutputNoiseOps.cir.sh OutputNoiseOpsGSfile OutputNoiseOpsRawData.NOISE.prn RMSTestNoise.cir RMSTestNoise.cir.sh RMSTestNoiseGSfile TrigTargTestNoise.cir TrigTargTestNoise.cir.sh TrigTargTestNoiseGSfile DotOpNoNoise.cir DotOpNoNoise.cir.sh DotOpNoNoise.cir.tags DotOpNoNoise.cir.options oneSweepValue.cir oneSweepValue.cir.sh oneSweepValueGSfile measure_noise_analysis_mismatch.cir measure_noise_analysis_mismatch.cir.sh measure_noise_analysis_mismatch.cir.tags measure_noise_analysis_mismatch.cir.options unsupported_noise_measure_types.cir unsupported_noise_measure_types.cir.sh unsupported_noise_measure_types.cir.tags unsupported_noise_measure_types.cir.options DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/AvgTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DerivTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/EquationEvalTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ErrorFuncTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ErrorTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/IntegTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/InputNoiseOps.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/OutputNoiseOps.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/RMSTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DotOpNoNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/oneSweepValue.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/measure_noise_analysis_mismatch.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupported_noise_measure_types.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
if( (NOT Xyce_PARALLEL_MPI) AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/AvgTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AvgTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} AvgTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/AvgTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/AvgTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;required:fft;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/AvgTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AvgTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} AvgTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/AvgTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/AvgTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;required:fft;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/DerivTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/DerivTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/DerivTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/DerivTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/DerivTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/DerivTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/DotOpNoNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotOpNoNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DotOpNoNoise.cir ${OutputDataDir}/MEASURE_NOISE/DotOpNoNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/DotOpNoNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;noise;measure;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/DotOpNoNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotOpNoNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DotOpNoNoise.cir ${OutputDataDir}/MEASURE_NOISE/DotOpNoNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/DotOpNoNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;noise;measure;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/EquationEvalTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} EquationEvalTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} EquationEvalTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/EquationEvalTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/EquationEvalTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/EquationEvalTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} EquationEvalTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} EquationEvalTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/EquationEvalTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/EquationEvalTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/ErrorFuncTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorFuncTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorFuncTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/ErrorFuncTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/ErrorFuncTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/ErrorFuncTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorFuncTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorFuncTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/ErrorFuncTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/ErrorFuncTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/ErrorTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/ErrorTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/ErrorTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/ErrorTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/ErrorTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/ErrorTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/FindWhenTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/FindWhenTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/FindWhenTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/FindWhenTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/FindWhenTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/FindWhenTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/InputNoiseOps.cir.sh COMMAND perl -I${XyceRegressionTestScripts} InputNoiseOps.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} InputNoiseOps.cir ${OutputDataDir}/MEASURE_NOISE/InputNoiseOps.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/InputNoiseOps.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/InputNoiseOps.cir.sh COMMAND perl -I${XyceRegressionTestScripts} InputNoiseOps.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} InputNoiseOps.cir ${OutputDataDir}/MEASURE_NOISE/InputNoiseOps.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/InputNoiseOps.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/IntegTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} IntegTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} IntegTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/IntegTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/IntegTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/IntegTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} IntegTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} IntegTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/IntegTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/IntegTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/MaxMinPPTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MaxMinPPTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} MaxMinPPTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/MaxMinPPTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/MaxMinPPTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/MaxMinPPTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MaxMinPPTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} MaxMinPPTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/MaxMinPPTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/MaxMinPPTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/OutputNoiseOps.cir.sh COMMAND perl -I${XyceRegressionTestScripts} OutputNoiseOps.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} OutputNoiseOps.cir ${OutputDataDir}/MEASURE_NOISE/OutputNoiseOps.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/OutputNoiseOps.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/OutputNoiseOps.cir.sh COMMAND perl -I${XyceRegressionTestScripts} OutputNoiseOps.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} OutputNoiseOps.cir ${OutputDataDir}/MEASURE_NOISE/OutputNoiseOps.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/OutputNoiseOps.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
add_subdirectory(REMEASURE)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/RMSTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} RMSTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} RMSTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/RMSTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/RMSTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/RMSTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} RMSTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} RMSTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/RMSTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/RMSTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
add_subdirectory(STEP)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/TrigTargTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/TrigTargTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/TrigTargTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/TrigTargTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestNoise.cir ${OutputDataDir}/MEASURE_NOISE/TrigTargTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/TrigTargTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/measure_noise_analysis_mismatch.cir.sh COMMAND perl -I${XyceRegressionTestScripts} measure_noise_analysis_mismatch.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} measure_noise_analysis_mismatch.cir ${OutputDataDir}/MEASURE_NOISE/measure_noise_analysis_mismatch.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/measure_noise_analysis_mismatch.cir.sh PROPERTY LABELS "nightly;serial;parallel;noise;measure;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/measure_noise_analysis_mismatch.cir.sh COMMAND perl -I${XyceRegressionTestScripts} measure_noise_analysis_mismatch.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} measure_noise_analysis_mismatch.cir ${OutputDataDir}/MEASURE_NOISE/measure_noise_analysis_mismatch.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/measure_noise_analysis_mismatch.cir.sh PROPERTY LABELS "nightly;serial;parallel;noise;measure;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/oneSweepValue.cir.sh COMMAND perl -I${XyceRegressionTestScripts} oneSweepValue.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} oneSweepValue.cir ${OutputDataDir}/MEASURE_NOISE/oneSweepValue.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/oneSweepValue.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/oneSweepValue.cir.sh COMMAND perl -I${XyceRegressionTestScripts} oneSweepValue.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} oneSweepValue.cir ${OutputDataDir}/MEASURE_NOISE/oneSweepValue.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/oneSweepValue.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;noise")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/unsupported_noise_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_noise_measure_types.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_noise_measure_types.cir ${OutputDataDir}/MEASURE_NOISE/unsupported_noise_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/unsupported_noise_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;noise;measure;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_NOISE/unsupported_noise_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_noise_measure_types.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_noise_measure_types.cir ${OutputDataDir}/MEASURE_NOISE/unsupported_noise_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_NOISE/unsupported_noise_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;noise;measure;errorexit")
endif()
