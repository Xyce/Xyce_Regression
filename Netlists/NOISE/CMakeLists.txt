# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cascodeBjtNOISE.cir ${CMAKE_CURRENT_BINARY_DIR}/cascodeBjtNOISE.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cascodeBjtNOISE.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/cascodeBjtNOISE.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/commonEmitterBjt.cir ${CMAKE_CURRENT_BINARY_DIR}/commonEmitterBjt.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/commonEmitterBjt.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/commonEmitterBjt.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/commonEmitterBjt_ngspice.cir ${CMAKE_CURRENT_BINARY_DIR}/commonEmitterBjt_ngspice.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage1.cir ${CMAKE_CURRENT_BINARY_DIR}/gain-stage1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gain-stage1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage2.cir ${CMAKE_CURRENT_BINARY_DIR}/gain-stage2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gain-stage2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage3.cir ${CMAKE_CURRENT_BINARY_DIR}/gain-stage3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage3.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gain-stage3.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage_b3.cir ${CMAKE_CURRENT_BINARY_DIR}/gain-stage_b3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage_b3.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gain-stage_b3.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/noiseBjt1.cir ${CMAKE_CURRENT_BINARY_DIR}/noiseBjt1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/noiseBjt1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/noiseBjt1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/noiseBjt2.cir ${CMAKE_CURRENT_BINARY_DIR}/noiseBjt2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/noiseBjt2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/noiseBjt2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res_noise.cir ${CMAKE_CURRENT_BINARY_DIR}/res_noise.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res_noise.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/res_noise.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res_noise_ngspice.cir ${CMAKE_CURRENT_BINARY_DIR}/res_noise_ngspice.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cascodeBjtNOISE.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/cascodeBjtNOISE.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/cascodeBjtNOISE.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/commonEmitterBjt.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/commonEmitterBjt.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/commonEmitterBjt.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gain-stage1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gain-stage1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gain-stage2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gain-stage2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gain-stage3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gain-stage3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gain-stage_b3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gain-stage_b3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gain-stage_b3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res_noise.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/res_noise.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/res_noise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invalid_device.cir ${CMAKE_CURRENT_BINARY_DIR}/invalid_device.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invalid_device.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/invalid_device.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/invalid_device.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invalid_device.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/invalid_device.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/invalid_device.cir.options ${CMAKE_CURRENT_BINARY_DIR}/invalid_device.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_device_source.cir ${CMAKE_CURRENT_BINARY_DIR}/unsupported_device_source.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_device_source.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/unsupported_device_source.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupported_device_source.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_device_source.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/unsupported_device_source.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_device_source.cir.options ${CMAKE_CURRENT_BINARY_DIR}/unsupported_device_source.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_analysis_mode.cir ${CMAKE_CURRENT_BINARY_DIR}/unsupported_analysis_mode.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_analysis_mode.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/unsupported_analysis_mode.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupported_analysis_mode.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_analysis_mode.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/unsupported_analysis_mode.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_analysis_mode.cir.options ${CMAKE_CURRENT_BINARY_DIR}/unsupported_analysis_mode.cir.options ONLY_IF_DIFFERENT)
add_test(NAME ${TestNamePrefix}NOISE/cascodeBjtNOISE.cir.sh COMMAND perl -I${XyceRegressionTestScripts} cascodeBjtNOISE.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} cascodeBjtNOISE.cir ${OutputDataDir}/NOISE/cascodeBjtNOISE.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/cascodeBjtNOISE.cir.sh PROPERTY LABELS "serial;nightly;noise;parallel")
add_test(NAME ${TestNamePrefix}NOISE/invalid_device.cir.sh COMMAND perl -I${XyceRegressionTestScripts} invalid_device.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} invalid_device.cir ${OutputDataDir}/NOISE/invalid_device.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/invalid_device.cir.sh PROPERTY LABELS "serial;nightly;parallel;noise;errorexit")
set_tests_properties(${TestNamePrefix}NOISE/invalid_device.cir.sh PROPERTIES TIMEOUT 30)
add_test(NAME ${TestNamePrefix}NOISE/res_noise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} res_noise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} res_noise.cir ${OutputDataDir}/NOISE/res_noise.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/res_noise.cir.sh PROPERTY LABELS "serial;nightly;noise;parallel")
add_test(NAME ${TestNamePrefix}NOISE/gain-stage3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gain-stage3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gain-stage3.cir ${OutputDataDir}/NOISE/gain-stage3.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/gain-stage3.cir.sh PROPERTY LABELS "serial;nightly;noise;parallel")
add_test(NAME ${TestNamePrefix}NOISE/unsupported_analysis_mode.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_analysis_mode.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_analysis_mode.cir ${OutputDataDir}/NOISE/unsupported_analysis_mode.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/unsupported_analysis_mode.cir.sh PROPERTY LABELS "serial;nightly;parallel;noise;errorexit")
set_tests_properties(${TestNamePrefix}NOISE/unsupported_analysis_mode.cir.sh PROPERTIES TIMEOUT 30)
add_test(NAME ${TestNamePrefix}NOISE/gain-stage2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gain-stage2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gain-stage2.cir ${OutputDataDir}/NOISE/gain-stage2.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/gain-stage2.cir.sh PROPERTY LABELS "serial;nightly;noise;parallel")
add_test(NAME ${TestNamePrefix}NOISE/commonEmitterBjt.cir.sh COMMAND perl -I${XyceRegressionTestScripts} commonEmitterBjt.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} commonEmitterBjt.cir ${OutputDataDir}/NOISE/commonEmitterBjt.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/commonEmitterBjt.cir.sh PROPERTY LABELS "serial;nightly;noise;parallel;bjtlev1")
add_test(NAME ${TestNamePrefix}NOISE/gain-stage1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gain-stage1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gain-stage1.cir ${OutputDataDir}/NOISE/gain-stage1.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/gain-stage1.cir.sh PROPERTY LABELS "serial;nightly;noise;parallel")
add_test(NAME ${TestNamePrefix}NOISE/unsupported_device_source.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_device_source.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_device_source.cir ${OutputDataDir}/NOISE/unsupported_device_source.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/unsupported_device_source.cir.sh PROPERTY LABELS "serial;nightly;parallel;noise;errorexit")
set_tests_properties(${TestNamePrefix}NOISE/unsupported_device_source.cir.sh PROPERTIES TIMEOUT 30)
add_test(NAME ${TestNamePrefix}NOISE/gain-stage_b3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gain-stage_b3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gain-stage_b3.cir ${OutputDataDir}/NOISE/gain-stage_b3.cir.prn )
set_property(TEST ${TestNamePrefix}NOISE/gain-stage_b3.cir.sh PROPERTY LABELS "serial;nightly;noise;parallel;bsim3")
