# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotData.cir ${CMAKE_CURRENT_BINARY_DIR}/DotData.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotData.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DotData.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DotData.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotDataGSfile ${CMAKE_CURRENT_BINARY_DIR}/DotDataGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotOpDotDC.cir ${CMAKE_CURRENT_BINARY_DIR}/DotOpDotDC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotOpDotDC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DotOpDotDC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DotOpDotDC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotOpDotDCGSfile ${CMAKE_CURRENT_BINARY_DIR}/DotOpDotDCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotOpDotDCRawData.prn ${CMAKE_CURRENT_BINARY_DIR}/DotOpDotDCRawData.prn ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotOpOnly.cir ${CMAKE_CURRENT_BINARY_DIR}/DotOpOnly.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotOpOnly.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DotOpOnly.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DotOpOnly.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DotOpOnlyGSfile ${CMAKE_CURRENT_BINARY_DIR}/DotOpOnlyGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DoubleDCOP.cir ${CMAKE_CURRENT_BINARY_DIR}/DoubleDCOP.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DoubleDCOP.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DoubleDCOP.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DoubleDCOP.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DoubleDCOPGSfile ${CMAKE_CURRENT_BINARY_DIR}/DoubleDCOPGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AvgTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/AvgTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AvgTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/AvgTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/AvgTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AvgTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/AvgTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AvgTest1DC.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/AvgTest1DC.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AvgTest2DC.cir ${CMAKE_CURRENT_BINARY_DIR}/AvgTest2DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AvgTest2DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/AvgTest2DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/AvgTest2DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AvgTest2DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/AvgTest2DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTest1DC.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DC.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest1DCRawData.prn ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DCRawData.prn ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest1DCRawData.csd ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DCRawData.csd ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest1DCRawData.csv ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DCRawData.csv ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest1DCCommaDelimRawData.prn ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest1DCCommaDelimRawData.prn ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest2DC.cir ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest2DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest2DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest2DCRawData.prn ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DCRawData.prn ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest2DCRawData.csd ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DCRawData.csd ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest2DCRawData.csv ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DCRawData.csv ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTest2DCCommaDelimRawData.prn ${CMAKE_CURRENT_BINARY_DIR}/ErrorTest2DCCommaDelimRawData.prn ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorFuncTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/ErrorFuncTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorFuncTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ErrorFuncTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ErrorFuncTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorFuncTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/ErrorFuncTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/EquationEvalTestDC.cir ${CMAKE_CURRENT_BINARY_DIR}/EquationEvalTestDC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/EquationEvalTestDC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/EquationEvalTestDC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/EquationEvalTestDC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/EquationEvalTestDCGSfile ${CMAKE_CURRENT_BINARY_DIR}/EquationEvalTestDCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest1DC.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DC.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest2DC.cir ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest2DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest2DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest2DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest2DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest2DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest2DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/IntegTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/IntegTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/IntegTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/IntegTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/IntegTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/IntegTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/IntegTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/IntegTest1DC.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/IntegTest1DC.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/LeadCurrentAndPowerTestDC.cir ${CMAKE_CURRENT_BINARY_DIR}/LeadCurrentAndPowerTestDC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/LeadCurrentAndPowerTestDC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/LeadCurrentAndPowerTestDC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/LeadCurrentAndPowerTestDC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/LeadCurrentAndPowerTestDCGSfile ${CMAKE_CURRENT_BINARY_DIR}/LeadCurrentAndPowerTestDCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MaxMinPPTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MaxMinPPTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MaxMinPPTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MaxMinPPTest2DC.cir ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest2DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MaxMinPPTest2DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest2DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest2DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MaxMinPPTest2DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/MaxMinPPTest2DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RMSTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/RMSTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RMSTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/RMSTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/RMSTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RMSTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/RMSTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RMSTest1DC.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/RMSTest1DC.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest2DC.cir ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest2DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest2DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest2DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest2DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest2DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest2DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/oneSweepValue.cir ${CMAKE_CURRENT_BINARY_DIR}/oneSweepValue.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/oneSweepValue.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/oneSweepValue.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/oneSweepValue.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/oneSweepValueGSfile ${CMAKE_CURRENT_BINARY_DIR}/oneSweepValueGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/measure_dc_analysis_mismatch.cir ${CMAKE_CURRENT_BINARY_DIR}/measure_dc_analysis_mismatch.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/measure_dc_analysis_mismatch.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/measure_dc_analysis_mismatch.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/measure_dc_analysis_mismatch.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/measure_dc_analysis_mismatch.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/measure_dc_analysis_mismatch.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/measure_dc_analysis_mismatch.cir.options ${CMAKE_CURRENT_BINARY_DIR}/measure_dc_analysis_mismatch.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorTestACRawData.FD.prn ${CMAKE_CURRENT_BINARY_DIR}/ErrorTestACRawData.FD.prn ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_dc_measure_types.cir ${CMAKE_CURRENT_BINARY_DIR}/unsupported_dc_measure_types.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_dc_measure_types.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/unsupported_dc_measure_types.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupported_dc_measure_types.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_dc_measure_types.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/unsupported_dc_measure_types.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_dc_measure_types.cir.options ${CMAKE_CURRENT_BINARY_DIR}/unsupported_dc_measure_types.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_error_measure_line1.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_error_measure_line1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_error_measure_line1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_error_measure_line1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_error_measure_line1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_error_measure_line1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad_error_measure_line1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_error_measure_line1.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_error_measure_line1.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MeasfailOption.cir ${CMAKE_CURRENT_BINARY_DIR}/MeasfailOption.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MeasfailOptionOne.cir ${CMAKE_CURRENT_BINARY_DIR}/MeasfailOptionOne.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MeasfailOptionZero.cir ${CMAKE_CURRENT_BINARY_DIR}/MeasfailOptionZero.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MeasfailOption.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/MeasfailOption.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/MeasfailOption.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MeasfailOptionGSfile ${CMAKE_CURRENT_BINARY_DIR}/MeasfailOptionGSfile ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/AvgTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AvgTest2DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} AvgTest2DC.cir ${OutputDataDir}/MEASURE_DC/AvgTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/AvgTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/AvgTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AvgTest2DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} AvgTest2DC.cir ${OutputDataDir}/MEASURE_DC/AvgTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/AvgTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/LeadCurrentAndPowerTestDC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} LeadCurrentAndPowerTestDC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} LeadCurrentAndPowerTestDC.cir ${OutputDataDir}/MEASURE_DC/LeadCurrentAndPowerTestDC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/LeadCurrentAndPowerTestDC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/LeadCurrentAndPowerTestDC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} LeadCurrentAndPowerTestDC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} LeadCurrentAndPowerTestDC.cir ${OutputDataDir}/MEASURE_DC/LeadCurrentAndPowerTestDC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/LeadCurrentAndPowerTestDC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/AvgTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AvgTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} AvgTest1DC.cir ${OutputDataDir}/MEASURE_DC/AvgTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/AvgTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;required:fft;valgrind;preprocess")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/AvgTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AvgTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} AvgTest1DC.cir ${OutputDataDir}/MEASURE_DC/AvgTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/AvgTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;required:fft;valgrind;preprocess")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/ErrorTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorTest1DC.cir ${OutputDataDir}/MEASURE_DC/ErrorTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/ErrorTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/ErrorTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorTest1DC.cir ${OutputDataDir}/MEASURE_DC/ErrorTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/ErrorTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/MaxMinPPTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MaxMinPPTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} MaxMinPPTest1DC.cir ${OutputDataDir}/MEASURE_DC/MaxMinPPTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/MaxMinPPTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind;preprocess")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/MaxMinPPTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MaxMinPPTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} MaxMinPPTest1DC.cir ${OutputDataDir}/MEASURE_DC/MaxMinPPTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/MaxMinPPTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind;preprocess")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/EquationEvalTestDC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} EquationEvalTestDC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} EquationEvalTestDC.cir ${OutputDataDir}/MEASURE_DC/EquationEvalTestDC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/EquationEvalTestDC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/EquationEvalTestDC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} EquationEvalTestDC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} EquationEvalTestDC.cir ${OutputDataDir}/MEASURE_DC/EquationEvalTestDC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/EquationEvalTestDC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/FindWhenTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTest2DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTest2DC.cir ${OutputDataDir}/MEASURE_DC/FindWhenTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/FindWhenTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/FindWhenTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTest2DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTest2DC.cir ${OutputDataDir}/MEASURE_DC/FindWhenTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/FindWhenTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/ErrorTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorTest2DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorTest2DC.cir ${OutputDataDir}/MEASURE_DC/ErrorTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/ErrorTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/ErrorTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorTest2DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorTest2DC.cir ${OutputDataDir}/MEASURE_DC/ErrorTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/ErrorTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/TrigTargTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTest2DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTest2DC.cir ${OutputDataDir}/MEASURE_DC/TrigTargTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/TrigTargTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/TrigTargTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTest2DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTest2DC.cir ${OutputDataDir}/MEASURE_DC/TrigTargTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/TrigTargTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/ErrorFuncTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorFuncTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorFuncTest1DC.cir ${OutputDataDir}/MEASURE_DC/ErrorFuncTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/ErrorFuncTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/ErrorFuncTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorFuncTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorFuncTest1DC.cir ${OutputDataDir}/MEASURE_DC/ErrorFuncTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/ErrorFuncTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/MaxMinPPTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MaxMinPPTest2DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} MaxMinPPTest2DC.cir ${OutputDataDir}/MEASURE_DC/MaxMinPPTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/MaxMinPPTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/MaxMinPPTest2DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MaxMinPPTest2DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} MaxMinPPTest2DC.cir ${OutputDataDir}/MEASURE_DC/MaxMinPPTest2DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/MaxMinPPTest2DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/RMSTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} RMSTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} RMSTest1DC.cir ${OutputDataDir}/MEASURE_DC/RMSTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/RMSTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/RMSTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} RMSTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} RMSTest1DC.cir ${OutputDataDir}/MEASURE_DC/RMSTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/RMSTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DerivTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTest1DC.cir ${OutputDataDir}/MEASURE_DC/DerivTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DerivTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DerivTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTest1DC.cir ${OutputDataDir}/MEASURE_DC/DerivTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DerivTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/measure_dc_analysis_mismatch.cir.sh COMMAND perl -I${XyceRegressionTestScripts} measure_dc_analysis_mismatch.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} measure_dc_analysis_mismatch.cir ${OutputDataDir}/MEASURE_DC/measure_dc_analysis_mismatch.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/measure_dc_analysis_mismatch.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;errorexit")
  set_tests_properties(${TestNamePrefix}MEASURE_DC/measure_dc_analysis_mismatch.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/measure_dc_analysis_mismatch.cir.sh COMMAND perl -I${XyceRegressionTestScripts} measure_dc_analysis_mismatch.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} measure_dc_analysis_mismatch.cir ${OutputDataDir}/MEASURE_DC/measure_dc_analysis_mismatch.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/measure_dc_analysis_mismatch.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;errorexit")
  set_tests_properties(${TestNamePrefix}MEASURE_DC/measure_dc_analysis_mismatch.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/bad_error_measure_line1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_error_measure_line1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_error_measure_line1.cir ${OutputDataDir}/MEASURE_DC/bad_error_measure_line1.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/bad_error_measure_line1.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;errorexit")
  set_tests_properties(${TestNamePrefix}MEASURE_DC/bad_error_measure_line1.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/bad_error_measure_line1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_error_measure_line1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_error_measure_line1.cir ${OutputDataDir}/MEASURE_DC/bad_error_measure_line1.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/bad_error_measure_line1.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;errorexit")
  set_tests_properties(${TestNamePrefix}MEASURE_DC/bad_error_measure_line1.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/IntegTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} IntegTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} IntegTest1DC.cir ${OutputDataDir}/MEASURE_DC/IntegTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/IntegTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/IntegTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} IntegTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} IntegTest1DC.cir ${OutputDataDir}/MEASURE_DC/IntegTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/IntegTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/MeasfailOption.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MeasfailOption.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} MeasfailOption.cir ${OutputDataDir}/MEASURE_DC/MeasfailOption.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/MeasfailOption.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/MeasfailOption.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MeasfailOption.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} MeasfailOption.cir ${OutputDataDir}/MEASURE_DC/MeasfailOption.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/MeasfailOption.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/oneSweepValue.cir.sh COMMAND perl -I${XyceRegressionTestScripts} oneSweepValue.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} oneSweepValue.cir ${OutputDataDir}/MEASURE_DC/oneSweepValue.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/oneSweepValue.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/oneSweepValue.cir.sh COMMAND perl -I${XyceRegressionTestScripts} oneSweepValue.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} oneSweepValue.cir ${OutputDataDir}/MEASURE_DC/oneSweepValue.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/oneSweepValue.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/unsupported_dc_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_dc_measure_types.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_dc_measure_types.cir ${OutputDataDir}/MEASURE_DC/unsupported_dc_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/unsupported_dc_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;errorexit")
  set_tests_properties(${TestNamePrefix}MEASURE_DC/unsupported_dc_measure_types.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/unsupported_dc_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_dc_measure_types.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_dc_measure_types.cir ${OutputDataDir}/MEASURE_DC/unsupported_dc_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/unsupported_dc_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;errorexit")
  set_tests_properties(${TestNamePrefix}MEASURE_DC/unsupported_dc_measure_types.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DotData.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotData.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DotData.cir ${OutputDataDir}/MEASURE_DC/DotData.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DotData.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DotData.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotData.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DotData.cir ${OutputDataDir}/MEASURE_DC/DotData.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DotData.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
add_subdirectory(REMEASURE)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DotOpOnly.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotOpOnly.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DotOpOnly.cir ${OutputDataDir}/MEASURE_DC/DotOpOnly.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DotOpOnly.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DotOpOnly.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotOpOnly.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DotOpOnly.cir ${OutputDataDir}/MEASURE_DC/DotOpOnly.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DotOpOnly.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/FindWhenTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTest1DC.cir ${OutputDataDir}/MEASURE_DC/FindWhenTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/FindWhenTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/FindWhenTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTest1DC.cir ${OutputDataDir}/MEASURE_DC/FindWhenTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/FindWhenTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/TrigTargTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTest1DC.cir ${OutputDataDir}/MEASURE_DC/TrigTargTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/TrigTargTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/TrigTargTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTest1DC.cir ${OutputDataDir}/MEASURE_DC/TrigTargTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/TrigTargTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DoubleDCOP.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DoubleDCOP.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DoubleDCOP.cir ${OutputDataDir}/MEASURE_DC/DoubleDCOP.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DoubleDCOP.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DoubleDCOP.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DoubleDCOP.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DoubleDCOP.cir ${OutputDataDir}/MEASURE_DC/DoubleDCOP.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DoubleDCOP.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DotOpDotDC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotOpDotDC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DotOpDotDC.cir ${OutputDataDir}/MEASURE_DC/DotOpDotDC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DotOpDotDC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_DC/DotOpDotDC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DotOpDotDC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DotOpDotDC.cir ${OutputDataDir}/MEASURE_DC/DotOpDotDC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_DC/DotOpDotDC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;dc")
endif()
add_subdirectory(STEP)
