# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diopde.cir ${CMAKE_CURRENT_BINARY_DIR}/diopde.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug978son.cir ${CMAKE_CURRENT_BINARY_DIR}/bug978son.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1155.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1155.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1155.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug1155.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug1155.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1155_1level.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1155_1level.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1155.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug1155.cir.tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/bug1155.cir.sh COMMAND bash bug1155.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug1155.cir ${OutputDataDir}/PDE_1D_DIODE/bug1155.cir.prn )
  set_property(TEST ${TestNamePrefix}PDE_1D_DIODE/bug1155.cir.sh PROPERTY LABELS "serial;nightly;pde;twolevel;bug1155son;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/diopde.cir COMMAND $<TARGET_FILE:Xyce> diopde.cir )
  set_property(TEST ${TestNamePrefix}PDE_1D_DIODE/diopde.cir PROPERTY LABELS "serial;parallel;nightly;pde;valgrind")
  set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/diopde.cir PROPERTIES FIXTURES_SETUP diopde.cir)
  add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/diopde.cir.verify COMMAND ${XYCE_VERIFY} diopde.cir ${OutputDataDir}/PDE_1D_DIODE/diopde.cir.prn diopde.cir.prn )
  set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/diopde.cir.verify PROPERTIES FIXTURES_REQUIRED diopde.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/diopde.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> diopde.cir )
  set_property(TEST ${TestNamePrefix}PDE_1D_DIODE/diopde.cir PROPERTY LABELS "serial;parallel;nightly;pde;valgrind")
set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/diopde.cir PROPERTIES FIXTURES_SETUP diopde.cir)
add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/diopde.cir.verify COMMAND ${XYCE_VERIFY} diopde.cir ${OutputDataDir}/PDE_1D_DIODE/diopde.cir.prn diopde.cir.prn )
set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/diopde.cir.verify PROPERTIES FIXTURES_REQUIRED diopde.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/bug978son.cir COMMAND $<TARGET_FILE:Xyce> bug978son.cir )
  set_property(TEST ${TestNamePrefix}PDE_1D_DIODE/bug978son.cir PROPERTY LABELS "serial;parallel;nightly;pde;bug978son;valgrind")
  set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/bug978son.cir PROPERTIES FIXTURES_SETUP bug978son.cir)
  add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/bug978son.cir.verify COMMAND ${XYCE_VERIFY} bug978son.cir ${OutputDataDir}/PDE_1D_DIODE/bug978son.cir.prn bug978son.cir.prn )
  set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/bug978son.cir.verify PROPERTIES FIXTURES_REQUIRED bug978son.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/bug978son.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> bug978son.cir )
  set_property(TEST ${TestNamePrefix}PDE_1D_DIODE/bug978son.cir PROPERTY LABELS "serial;parallel;nightly;pde;bug978son;valgrind")
set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/bug978son.cir PROPERTIES FIXTURES_SETUP bug978son.cir)
add_test(NAME ${TestNamePrefix}PDE_1D_DIODE/bug978son.cir.verify COMMAND ${XYCE_VERIFY} bug978son.cir ${OutputDataDir}/PDE_1D_DIODE/bug978son.cir.prn bug978son.cir.prn )
set_tests_properties(${TestNamePrefix}PDE_1D_DIODE/bug978son.cir.verify PROPERTIES FIXTURES_REQUIRED bug978son.cir)
endif()
