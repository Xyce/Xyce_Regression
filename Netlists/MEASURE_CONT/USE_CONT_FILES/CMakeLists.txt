# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AC.cir ${CMAKE_CURRENT_BINARY_DIR}/AC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/AC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/AC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/AC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ACGSfile ${CMAKE_CURRENT_BINARY_DIR}/ACGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DC.cir ${CMAKE_CURRENT_BINARY_DIR}/DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DuplicateMeasureNames.cir ${CMAKE_CURRENT_BINARY_DIR}/DuplicateMeasureNames.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DuplicateMeasureNames.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DuplicateMeasureNames.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DuplicateMeasureNames.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DuplicateMeasureNamesGSfile ${CMAKE_CURRENT_BINARY_DIR}/DuplicateMeasureNamesGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DuplicateMeasureNames.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/DuplicateMeasureNames.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Noise.cir ${CMAKE_CURRENT_BINARY_DIR}/Noise.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Noise.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/Noise.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/Noise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/NoiseGSfile ${CMAKE_CURRENT_BINARY_DIR}/NoiseGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Tran.cir ${CMAKE_CURRENT_BINARY_DIR}/Tran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Tran.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/Tran.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/Tran.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TranGSfile ${CMAKE_CURRENT_BINARY_DIR}/TranGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TranStep.cir ${CMAKE_CURRENT_BINARY_DIR}/TranStep.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TranStep.s0.cir ${CMAKE_CURRENT_BINARY_DIR}/TranStep.s0.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TranStep.s1.cir ${CMAKE_CURRENT_BINARY_DIR}/TranStep.s1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TranStep.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/TranStep.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TranStep.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DuplicateMeasureNames.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DuplicateMeasureNames.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DuplicateMeasureNames.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/DuplicateMeasureNames.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DuplicateMeasureNames.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DuplicateMeasureNames.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DuplicateMeasureNames.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DuplicateMeasureNames.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/DuplicateMeasureNames.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DuplicateMeasureNames.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/AC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} AC.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/AC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/AC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/AC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} AC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} AC.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/AC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/AC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DC.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DC.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Noise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} Noise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} Noise.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/Noise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Noise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Noise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} Noise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} Noise.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/Noise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Noise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/TranStep.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TranStep.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TranStep.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/TranStep.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/TranStep.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/TranStep.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TranStep.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TranStep.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/TranStep.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/TranStep.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Tran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} Tran.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} Tran.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/Tran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Tran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Tran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} Tran.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} Tran.cir ${OutputDataDir}/MEASURE_CONT/USE_CONT_FILES/Tran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/USE_CONT_FILES/Tran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont")
endif()
