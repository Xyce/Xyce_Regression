# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestAC.cir ${CMAKE_CURRENT_BINARY_DIR}/DerivTestAC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestAC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DerivTestAC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DerivTestAC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestACGSfile ${CMAKE_CURRENT_BINARY_DIR}/DerivTestACGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/DerivTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestNoise.cir ${CMAKE_CURRENT_BINARY_DIR}/DerivTestNoise.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestNoise.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DerivTestNoise.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DerivTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestNoiseGSfile ${CMAKE_CURRENT_BINARY_DIR}/DerivTestNoiseGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestTran.cir ${CMAKE_CURRENT_BINARY_DIR}/DerivTestTran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestTran.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DerivTestTran.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DerivTestTran.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DerivTestTranGSfile ${CMAKE_CURRENT_BINARY_DIR}/DerivTestTranGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestAC.cir ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestAC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestAC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestAC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestAC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestACGSfile ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestACGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestNoise.cir ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestNoise.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestNoise.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestNoise.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestNoiseGSfile ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestNoiseGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestTran.cir ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestTran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestTran.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestTran.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestTran.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindWhenTestTranGSfile ${CMAKE_CURRENT_BINARY_DIR}/FindWhenTestTranGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestAC.cir ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestAC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestAC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestAC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestAC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestACGSfile ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestACGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest1DC.cir ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DC.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest1DC.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DC.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTest1DCGSfile ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTest1DCGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestNoise.cir ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestNoise.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestNoise.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestNoise.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestNoise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestNoiseGSfile ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestNoiseGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestTran.cir ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestTran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestTran.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestTran.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestTran.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/TrigTargTestTranGSfile ${CMAKE_CURRENT_BINARY_DIR}/TrigTargTestTranGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_cont_measure_types.cir ${CMAKE_CURRENT_BINARY_DIR}/unsupported_cont_measure_types.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_cont_measure_types.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/unsupported_cont_measure_types.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupported_cont_measure_types.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_cont_measure_types.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/unsupported_cont_measure_types.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_cont_measure_types.cir.options ${CMAKE_CURRENT_BINARY_DIR}/unsupported_cont_measure_types.cir.options ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTest1DC.cir ${OutputDataDir}/MEASURE_CONT/DerivTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTest1DC.cir ${OutputDataDir}/MEASURE_CONT/DerivTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTestAC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestAC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestAC.cir ${OutputDataDir}/MEASURE_CONT/DerivTestAC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTestAC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTestAC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestAC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestAC.cir ${OutputDataDir}/MEASURE_CONT/DerivTestAC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTestAC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestNoise.cir ${OutputDataDir}/MEASURE_CONT/DerivTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestNoise.cir ${OutputDataDir}/MEASURE_CONT/DerivTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTestTran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestTran.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestTran.cir ${OutputDataDir}/MEASURE_CONT/DerivTestTran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTestTran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/DerivTestTran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DerivTestTran.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DerivTestTran.cir ${OutputDataDir}/MEASURE_CONT/DerivTestTran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/DerivTestTran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTest1DC.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTest1DC.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTestAC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestAC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestAC.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTestAC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTestAC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTestAC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestAC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestAC.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTestAC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTestAC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestNoise.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestNoise.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTestTran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestTran.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestTran.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTestTran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTestTran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/FindWhenTestTran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindWhenTestTran.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindWhenTestTran.cir ${OutputDataDir}/MEASURE_CONT/FindWhenTestTran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/FindWhenTestTran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
add_subdirectory(STEP)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTest1DC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTest1DC.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTest1DC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTest1DC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTest1DC.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTest1DC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTest1DC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTestAC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestAC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestAC.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTestAC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTestAC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTestAC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestAC.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestAC.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTestAC.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTestAC.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestNoise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestNoise.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTestNoise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestNoise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestNoise.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTestNoise.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTestNoise.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTestTran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestTran.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestTran.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTestTran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTestTran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/TrigTargTestTran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} TrigTargTestTran.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} TrigTargTestTran.cir ${OutputDataDir}/MEASURE_CONT/TrigTargTestTran.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/TrigTargTestTran.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;valgrind")
endif()
add_subdirectory(USE_CONT_FILES)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/unsupported_cont_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_cont_measure_types.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_cont_measure_types.cir ${OutputDataDir}/MEASURE_CONT/unsupported_cont_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/unsupported_cont_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;dc;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_CONT/unsupported_cont_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_cont_measure_types.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_cont_measure_types.cir ${OutputDataDir}/MEASURE_CONT/unsupported_cont_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_CONT/unsupported_cont_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;measure_cont;dc;errorexit")
endif()
