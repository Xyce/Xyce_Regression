# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_rc.cir ${CMAKE_CURRENT_BINARY_DIR}/opt_rc.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_rc.reference_data ${CMAKE_CURRENT_BINARY_DIR}/opt_rc.reference_data ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_rc.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/opt_rc.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/opt_rc.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_rc.dak ${CMAKE_CURRENT_BINARY_DIR}/opt_rc.dak ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_soi.cir ${CMAKE_CURRENT_BINARY_DIR}/opt_soi.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_soi.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/opt_soi.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/opt_soi.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_soi.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/opt_soi.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_soi.dak ${CMAKE_CURRENT_BINARY_DIR}/opt_soi.dak ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/opt_soi_gold.prn ${CMAKE_CURRENT_BINARY_DIR}/opt_soi_gold.prn ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/rc.cir ${CMAKE_CURRENT_BINARY_DIR}/rc.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/rc.dak ${CMAKE_CURRENT_BINARY_DIR}/rc.dak ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/rc.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/rc.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/rc.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res.cir ${CMAKE_CURRENT_BINARY_DIR}/res.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res.dak ${CMAKE_CURRENT_BINARY_DIR}/res.dak ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/res.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/res.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND  DEFINED Xyce_Dakota AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}DAKOTA/opt_soi.cir.sh COMMAND perl -I${XyceRegressionTestScripts} opt_soi.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} opt_soi.cir ${OutputDataDir}/DAKOTA/opt_soi.cir.prn )
  set_property(TEST ${TestNamePrefix}DAKOTA/opt_soi.cir.sh PROPERTY LABELS "serial;nightly;b3soi;required:dakota")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  DEFINED Xyce_Dakota AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}DAKOTA/opt_rc.cir.sh COMMAND perl -I${XyceRegressionTestScripts} opt_rc.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} opt_rc.cir ${OutputDataDir}/DAKOTA/opt_rc.cir.prn )
  set_property(TEST ${TestNamePrefix}DAKOTA/opt_rc.cir.sh PROPERTY LABELS "serial;nightly;required:dakota")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  DEFINED Xyce_Dakota AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}DAKOTA/res.cir.sh COMMAND perl -I${XyceRegressionTestScripts} res.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} res.cir ${OutputDataDir}/DAKOTA/res.cir.prn )
  set_property(TEST ${TestNamePrefix}DAKOTA/res.cir.sh PROPERTY LABELS "serial;nightly;required:dakota")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  DEFINED Xyce_Dakota AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}DAKOTA/rc.cir.sh COMMAND perl -I${XyceRegressionTestScripts} rc.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} rc.cir ${OutputDataDir}/DAKOTA/rc.cir.prn )
  set_property(TEST ${TestNamePrefix}DAKOTA/rc.cir.sh PROPERTY LABELS "serial;nightly;required:dakota")
endif()
