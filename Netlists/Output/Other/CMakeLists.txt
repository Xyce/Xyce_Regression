# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Namesfile.cir ${CMAKE_CURRENT_BINARY_DIR}/Namesfile.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Namesfile.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/Namesfile.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/Namesfile.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Namesfile.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/Namesfile.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/NoiseNamesfile.cir ${CMAKE_CURRENT_BINARY_DIR}/NoiseNamesfile.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm.mod ${CMAKE_CURRENT_BINARY_DIR}/150nm.mod ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/NoiseNamesfile.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/NoiseNamesfile.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/NoiseNamesfile.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/NoiseNamesfile.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/NoiseNamesfile.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/modelcard.nmos_xyce ${CMAKE_CURRENT_BINARY_DIR}/modelcard.nmos_xyce ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/file-extension.cir ${CMAKE_CURRENT_BINARY_DIR}/file-extension.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printExpression.cir ${CMAKE_CURRENT_BINARY_DIR}/printExpression.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printExpression.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/printExpression.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/printExpression.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printFilename.cir ${CMAKE_CURRENT_BINARY_DIR}/printFilename.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printFilename.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/printFilename.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/printFilename.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tran-timer.cir ${CMAKE_CURRENT_BINARY_DIR}/tran-timer.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tran-timer.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/tran-timer.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran-timer.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printExpression.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/printExpression.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printFilename.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/printFilename.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/blankPrint.cir ${CMAKE_CURRENT_BINARY_DIR}/blankPrint.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/blankPrint.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/blankPrint.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/blankPrint.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/Namesfile.cir.sh COMMAND perl -I${XyceRegressionTestScripts} Namesfile.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} Namesfile.cir ${OutputDataDir}/Output/Other/Namesfile.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/Namesfile.cir.sh PROPERTY LABELS "serial;nightly;namesfile")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/NoiseNamesfile.cir.sh COMMAND perl -I${XyceRegressionTestScripts} NoiseNamesfile.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} NoiseNamesfile.cir ${OutputDataDir}/Output/Other/NoiseNamesfile.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/NoiseNamesfile.cir.sh PROPERTY LABELS "serial;parallel;nightly;noisenamesfile;noise;ekv;adms;required:nonfree;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/NoiseNamesfile.cir.sh COMMAND perl -I${XyceRegressionTestScripts} NoiseNamesfile.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} NoiseNamesfile.cir ${OutputDataDir}/Output/Other/NoiseNamesfile.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/NoiseNamesfile.cir.sh PROPERTY LABELS "serial;parallel;nightly;noisenamesfile;noise;ekv;adms;required:nonfree;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/blankPrint.cir.sh COMMAND perl -I${XyceRegressionTestScripts} blankPrint.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} blankPrint.cir ${OutputDataDir}/Output/Other/blankPrint.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/blankPrint.cir.sh PROPERTY LABELS "serial;parallel;nightly;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/blankPrint.cir.sh COMMAND perl -I${XyceRegressionTestScripts} blankPrint.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} blankPrint.cir ${OutputDataDir}/Output/Other/blankPrint.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/blankPrint.cir.sh PROPERTY LABELS "serial;parallel;nightly;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/printExpression.cir.sh COMMAND perl -I${XyceRegressionTestScripts} printExpression.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} printExpression.cir ${OutputDataDir}/Output/Other/printExpression.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/printExpression.cir.sh PROPERTY LABELS "serial;nightly;hb;output;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/printFilename.cir.sh COMMAND perl -I${XyceRegressionTestScripts} printFilename.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} printFilename.cir ${OutputDataDir}/Output/Other/printFilename.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/printFilename.cir.sh PROPERTY LABELS "serial;nightly;hb;output;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Other/tran-timer.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-timer.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran-timer.cir ${OutputDataDir}/Output/Other/tran-timer.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Other/tran-timer.cir.sh PROPERTY LABELS "serial;nightly;output")
endif()
