# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ac.cir ${CMAKE_CURRENT_BINARY_DIR}/ac.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ac.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ac.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ac.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ac-sens.cir ${CMAKE_CURRENT_BINARY_DIR}/ac-sens.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ac-sens.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ac-sens.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ac-sens.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dc.cir ${CMAKE_CURRENT_BINARY_DIR}/dc.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dc.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/dc.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/dc.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/es.cir ${CMAKE_CURRENT_BINARY_DIR}/es.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/es.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/es.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/es.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/es.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/es.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/hb.cir ${CMAKE_CURRENT_BINARY_DIR}/hb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/hb.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/hb.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/hb.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printLine_for_hb_td.cir ${CMAKE_CURRENT_BINARY_DIR}/printLine_for_hb_td.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printLine_for_hb_ic.cir ${CMAKE_CURRENT_BINARY_DIR}/printLine_for_hb_ic.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/printLine_for_hb_startup.cir ${CMAKE_CURRENT_BINARY_DIR}/printLine_for_hb_startup.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/hb-fallbacks.cir ${CMAKE_CURRENT_BINARY_DIR}/hb-fallbacks.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/hb-fallbacks.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/hb-fallbacks.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/hb-fallbacks.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/noise.cir ${CMAKE_CURRENT_BINARY_DIR}/noise.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/noise.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/noise.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/noise.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/pce.cir ${CMAKE_CURRENT_BINARY_DIR}/pce.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/pce.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/pce.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/pce.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/pce.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/pce.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sparam.cir ${CMAKE_CURRENT_BINARY_DIR}/sparam.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sparam.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sparam.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sparam.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tran.cir ${CMAKE_CURRENT_BINARY_DIR}/tran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tran.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/tran.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tran-stepnum-col.cir ${CMAKE_CURRENT_BINARY_DIR}/tran-stepnum-col.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tran-stepnum-col.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/tran-stepnum-col.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran-stepnum-col.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nooverwrite.cir ${CMAKE_CURRENT_BINARY_DIR}/nooverwrite.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nooverwrite.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/nooverwrite.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/nooverwrite.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nooverwrite_measure.cir ${CMAKE_CURRENT_BINARY_DIR}/nooverwrite_measure.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nooverwrite_measure.mt0 ${CMAKE_CURRENT_BINARY_DIR}/nooverwrite_measure.mt0 ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nooverwrite_measure.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/nooverwrite_measure.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/nooverwrite_measure.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dashrPrecedence.cir ${CMAKE_CURRENT_BINARY_DIR}/dashrPrecedence.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dashrPrecedence.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/dashrPrecedence.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/dashrPrecedence.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/ac-sens.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ac-sens.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ac-sens.cir ${OutputDataDir}/Output/Dasho/ac-sens.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/ac-sens.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/ac-sens.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ac-sens.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ac-sens.cir ${OutputDataDir}/Output/Dasho/ac-sens.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/ac-sens.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/ac.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ac.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ac.cir ${OutputDataDir}/Output/Dasho/ac.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/ac.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/ac.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ac.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ac.cir ${OutputDataDir}/Output/Dasho/ac.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/ac.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/dashrPrecedence.cir.sh COMMAND perl -I${XyceRegressionTestScripts} dashrPrecedence.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} dashrPrecedence.cir ${OutputDataDir}/Output/Dasho/dashrPrecedence.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/dashrPrecedence.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/dashrPrecedence.cir.sh COMMAND perl -I${XyceRegressionTestScripts} dashrPrecedence.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} dashrPrecedence.cir ${OutputDataDir}/Output/Dasho/dashrPrecedence.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/dashrPrecedence.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/dc.cir.sh COMMAND perl -I${XyceRegressionTestScripts} dc.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} dc.cir ${OutputDataDir}/Output/Dasho/dc.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/dc.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/dc.cir.sh COMMAND perl -I${XyceRegressionTestScripts} dc.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} dc.cir ${OutputDataDir}/Output/Dasho/dc.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/dc.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/es.cir.sh COMMAND perl -I${XyceRegressionTestScripts} es.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} es.cir ${OutputDataDir}/Output/Dasho/es.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/es.cir.sh PROPERTY LABELS "nightly;serial;parallel;pce;embeddedsampling;output;required:stokhos")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/es.cir.sh COMMAND perl -I${XyceRegressionTestScripts} es.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} es.cir ${OutputDataDir}/Output/Dasho/es.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/es.cir.sh PROPERTY LABELS "nightly;serial;parallel;pce;embeddedsampling;output;required:stokhos")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/hb-fallbacks.cir.sh COMMAND perl -I${XyceRegressionTestScripts} hb-fallbacks.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} hb-fallbacks.cir ${OutputDataDir}/Output/Dasho/hb-fallbacks.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/hb-fallbacks.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;hb;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/hb-fallbacks.cir.sh COMMAND perl -I${XyceRegressionTestScripts} hb-fallbacks.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} hb-fallbacks.cir ${OutputDataDir}/Output/Dasho/hb-fallbacks.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/hb-fallbacks.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;hb;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} hb.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} hb.cir ${OutputDataDir}/Output/Dasho/hb.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/hb.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;hb;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} hb.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} hb.cir ${OutputDataDir}/Output/Dasho/hb.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/hb.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;hb;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/noise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} noise.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} noise.cir ${OutputDataDir}/Output/Dasho/noise.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/noise.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;valgrind")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/noise.cir.sh COMMAND perl -I${XyceRegressionTestScripts} noise.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} noise.cir ${OutputDataDir}/Output/Dasho/noise.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/noise.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;valgrind")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/nooverwrite.cir.sh COMMAND perl -I${XyceRegressionTestScripts} nooverwrite.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} nooverwrite.cir ${OutputDataDir}/Output/Dasho/nooverwrite.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/nooverwrite.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/nooverwrite.cir.sh COMMAND perl -I${XyceRegressionTestScripts} nooverwrite.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} nooverwrite.cir ${OutputDataDir}/Output/Dasho/nooverwrite.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/nooverwrite.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/nooverwrite_measure.cir.sh COMMAND perl -I${XyceRegressionTestScripts} nooverwrite_measure.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} nooverwrite_measure.cir ${OutputDataDir}/Output/Dasho/nooverwrite_measure.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/nooverwrite_measure.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/nooverwrite_measure.cir.sh COMMAND perl -I${XyceRegressionTestScripts} nooverwrite_measure.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} nooverwrite_measure.cir ${OutputDataDir}/Output/Dasho/nooverwrite_measure.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/nooverwrite_measure.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/pce.cir.sh COMMAND perl -I${XyceRegressionTestScripts} pce.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} pce.cir ${OutputDataDir}/Output/Dasho/pce.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/pce.cir.sh PROPERTY LABELS "nightly;serial;parallel;pce;output;required:stokhos")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_STOKHOS_ENABLE AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/pce.cir.sh COMMAND perl -I${XyceRegressionTestScripts} pce.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} pce.cir ${OutputDataDir}/Output/Dasho/pce.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/pce.cir.sh PROPERTY LABELS "nightly;serial;parallel;pce;output;required:stokhos")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/sparam.cir.sh COMMAND perl -I${XyceRegressionTestScripts} sparam.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sparam.cir ${OutputDataDir}/Output/Dasho/sparam.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/sparam.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/sparam.cir.sh COMMAND perl -I${XyceRegressionTestScripts} sparam.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sparam.cir ${OutputDataDir}/Output/Dasho/sparam.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/sparam.cir.sh PROPERTY LABELS "serial;nightly;parallel;output")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/tran-stepnum-col.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-stepnum-col.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran-stepnum-col.cir ${OutputDataDir}/Output/Dasho/tran-stepnum-col.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/tran-stepnum-col.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;measure;fourier;fft;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/tran-stepnum-col.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-stepnum-col.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tran-stepnum-col.cir ${OutputDataDir}/Output/Dasho/tran-stepnum-col.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/tran-stepnum-col.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;measure;fourier;fft;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/tran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran.cir ${OutputDataDir}/Output/Dasho/tran.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/tran.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;measure;fourier;fft;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Output/Dasho/tran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tran.cir ${OutputDataDir}/Output/Dasho/tran.cir.prn )
  set_property(TEST ${TestNamePrefix}Output/Dasho/tran.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;measure;fourier;fft;required:fft")
endif()
