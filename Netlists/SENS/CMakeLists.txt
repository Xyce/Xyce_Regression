# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos.cir ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmosFD.cir ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmosFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_pmos.cir ${CMAKE_CURRENT_BINARY_DIR}/150nm_pmos.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_pmos.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/150nm_pmos.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/150nm_pmos.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_pmos.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/150nm_pmos.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_pmosFD.cir ${CMAKE_CURRENT_BINARY_DIR}/150nm_pmosFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos_deviceFD.cir ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos_deviceFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos_oldFD.cir ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos_oldFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos_forceDeviceFD.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos_forceDeviceFD.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos_forceDeviceFD.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos_forceDeviceFD.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos_forceDeviceFD.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/150nm_nmos_forceDeviceFD.cir ${CMAKE_CURRENT_BINARY_DIR}/150nm_nmos_forceDeviceFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensAdj.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensAdj_aztec.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj_aztec.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensAdj_belos.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj_belos.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSensFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbh.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbh.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbh.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbh.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbh.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbh.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbh.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbhFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbhFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbhPNP.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbhPNP.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbhPNP.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbhPNP.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbhPNP.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbhPNP.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbhPNP.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_fbhPNPFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_fbhPNPFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicum.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicum.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicum.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicum.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicum.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicum.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicum.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicumFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicumFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicumL0.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicumL0.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicumL0.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicumL0.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicumL0.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicumL0.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicumL0.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_hicumL0FD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_hicumL0FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextram.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextram.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextram.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextram.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextram.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextram.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextram.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextramFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextramFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextramPNP.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextramPNP.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextramPNP.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextramPNP.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextramPNP.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextramPNP.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextramPNP.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_mextramPNPFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_mextramPNPFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbic.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbic.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbic.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbic.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbic.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbic.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbic.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbicFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbicFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbicPNPdefault.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbicPNPdefault.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbicPNPdefault.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbicPNPdefault.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbicPNPdefault.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbicPNPdefault.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbicPNPdefault.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_vbicPNPdefaultFD.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_vbicPNPdefaultFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_op.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ampSens_op.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_op.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens_op.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens_op.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_10v.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_10v.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens_op.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSens_op.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjoint.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjoint.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjoint.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjoint.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjoint.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjoint.cir.TRADJ.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjoint.cir.TRADJ.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjoint.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjoint.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrap.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrap.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrap.cir.TRADJ.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrap.cir.TRADJ.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrap.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrap.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrap.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrap.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrap.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/modelcard_xyce.nmos ${CMAKE_CURRENT_BINARY_DIR}/modelcard_xyce.nmos ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/modelcard_xyce.pmos ${CMAKE_CURRENT_BINARY_DIR}/modelcard_xyce.pmos ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug669.cir ${CMAKE_CURRENT_BINARY_DIR}/bug669.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug669.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug669.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug669.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug669.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug669.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug669a.cir ${CMAKE_CURRENT_BINARY_DIR}/bug669a.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug669b.cir ${CMAKE_CURRENT_BINARY_DIR}/bug669b.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug702son.cir ${CMAKE_CURRENT_BINARY_DIR}/bug702son.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug702son.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug702son.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug702son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug702son.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug702son.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug772son.cir ${CMAKE_CURRENT_BINARY_DIR}/bug772son.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug772son.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug772son.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug772son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug772son.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug772son.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug772sonA.cir ${CMAKE_CURRENT_BINARY_DIR}/bug772sonA.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug772sonB.cir ${CMAKE_CURRENT_BINARY_DIR}/bug772sonB.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug797Adjoint.cir ${CMAKE_CURRENT_BINARY_DIR}/bug797Adjoint.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug797Direct.cir ${CMAKE_CURRENT_BINARY_DIR}/bug797Direct.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug797son.cir ${CMAKE_CURRENT_BINARY_DIR}/bug797son.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug797son.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug797son.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug797son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug797son.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug797son.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bugs799_and_842.cir ${CMAKE_CURRENT_BINARY_DIR}/bugs799_and_842.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bugs799_and_842A.cir ${CMAKE_CURRENT_BINARY_DIR}/bugs799_and_842A.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bugs799_and_842D.cir ${CMAKE_CURRENT_BINARY_DIR}/bugs799_and_842D.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dummy_bugs799_and_842.cir ${CMAKE_CURRENT_BINARY_DIR}/dummy_bugs799_and_842.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bugs799_and_842.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bugs799_and_842.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bugs799_and_842.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bugs799_and_842.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bugs799_and_842.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/comparator.cir ${CMAKE_CURRENT_BINARY_DIR}/comparator.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diode.cir ${CMAKE_CURRENT_BINARY_DIR}/diode.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diode.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/diode.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/diode.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTran.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTran.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/diodeTran.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/diodeTran.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranForAdjoint.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTranForAdjoint.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjoint.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjoint.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjoint.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjoint.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjoint.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjoint.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjoint.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjointScaled.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointScaled.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjointScaled.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointScaled.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointScaled.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjointScaled.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointScaled.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranScaled.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTranScaled.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dummyDiodeTranScaled.cir ${CMAKE_CURRENT_BINARY_DIR}/dummyDiodeTranScaled.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranTrap.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTranTrap.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjointTrap.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointTrap.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjointTrap.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointTrap.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointTrap.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranAdjointTrap.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/diodeTranAdjointTrap.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diodeTranFD.cir ${CMAKE_CURRENT_BINARY_DIR}/diodeTranFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diode_adjoint.cir ${CMAKE_CURRENT_BINARY_DIR}/diode_adjoint.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/diode_direct.cir ${CMAKE_CURRENT_BINARY_DIR}/diode_direct.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dummyDiodeTran.cir ${CMAKE_CURRENT_BINARY_DIR}/dummyDiodeTran.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dummyDiodeTran2.cir ${CMAKE_CURRENT_BINARY_DIR}/dummyDiodeTran2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/dummyDiodeTran3.cir ${CMAKE_CURRENT_BINARY_DIR}/dummyDiodeTran3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_n.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_n.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_n.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_n.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_nFD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_nFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_110.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_110.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_110.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_110.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_110.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_110.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_110.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_110FD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_110FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_111.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_111.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_111.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_111.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_111.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_111.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_111.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_n_111FD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_n_111FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_nmos_xyce.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_nmos_xyce.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_nmos_xyce.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_nmos_xyce.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_nmos_xyce.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_nmos_xyce.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_nmos_xyce.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_nmos_xyceFD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_nmos_xyceFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_p.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_p.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_p.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_p.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_pFD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_pFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_110.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_110.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_110.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_110.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_110.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_110.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_110.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_110FD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_110FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_111.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_111.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_111.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_111.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_111.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_111.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_111.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_p_111FD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_p_111FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_pmos_xyce.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_pmos_xyce.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_pmos_xyce.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/gummel_pmos_xyce.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/gummel_pmos_xyce.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_pmos_xyce.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/gummel_pmos_xyce.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/gummel_pmos_xyceFD.cir ${CMAKE_CURRENT_BINARY_DIR}/gummel_pmos_xyceFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperObjFormat.cir ${CMAKE_CURRENT_BINARY_DIR}/improperObjFormat.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperObjFormat.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/improperObjFormat.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperObjFormat.cir.options ${CMAKE_CURRENT_BINARY_DIR}/improperObjFormat.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperObjFormat.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/improperObjFormat.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/improperObjFormat.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperVectorParams.cir ${CMAKE_CURRENT_BINARY_DIR}/improperVectorParams.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperVectorParams.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/improperVectorParams.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperVectorParams.cir.options ${CMAKE_CURRENT_BINARY_DIR}/improperVectorParams.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/improperVectorParams.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/improperVectorParams.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/improperVectorParams.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missingParams.cir ${CMAKE_CURRENT_BINARY_DIR}/missingParams.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missingParams.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/missingParams.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missingParams.cir.options ${CMAKE_CURRENT_BINARY_DIR}/missingParams.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missingParams.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/missingParams.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/missingParams.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missingSensFunction.cir ${CMAKE_CURRENT_BINARY_DIR}/missingSensFunction.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missingSensFunction.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/missingSensFunction.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/missingSensFunction.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_nmos_idvg0_FD_SENS.cir ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_nmos_idvg0_FD_SENS.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_nmos_idvg0_SENS.cir ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_nmos_idvg0_SENS.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_nmos_idvg0_SENS.cir.res.gs ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_nmos_idvg0_SENS.cir.res.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_nmos_idvg0_SENS.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_nmos_idvg0_SENS.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_nmos_idvg0_SENS.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_nmos_idvg0_SENS.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_nmos_idvg0_SENS.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_pmos_idvg0_FD_SENS.cir ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_pmos_idvg0_FD_SENS.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_pmos_idvg0_SENS.cir ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_pmos_idvg0_SENS.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_pmos_idvg0_SENS.cir.res.gs ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_pmos_idvg0_SENS.cir.res.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_pmos_idvg0_SENS.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_pmos_idvg0_SENS.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_pmos_idvg0_SENS.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/psp_asym_pmos_idvg0_SENS.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/psp_asym_pmos_idvg0_SENS.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/rc1000TranAdjGear.cir ${CMAKE_CURRENT_BINARY_DIR}/rc1000TranAdjGear.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/rc1000TranAdjGear.cir.TRADJ.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/rc1000TranAdjGear.cir.TRADJ.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/rc1000TranAdjGear.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/rc1000TranAdjGear.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/rc1000TranAdjGear.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/rc1000TranAdjGear.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/rc1000TranAdjGear.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res.cir ${CMAKE_CURRENT_BINARY_DIR}/res.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/res.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/res.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/res.cir_dodp.txt.gs ${CMAKE_CURRENT_BINARY_DIR}/res.cir_dodp.txt.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear.cir.SENS.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear.cir.SENS.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear.cir.SENS.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapOrder1.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapOrder1.cir.SENS.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder1.cir.SENS.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder1.cir.SENS.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapOrder1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapOrder2.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapOrder2.cir.SENS.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder2.cir.SENS.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder2.cir.SENS.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapOrder2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapOrder2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdj.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdj.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdj.cir.TRADJ.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdj.cir.TRADJ.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdj.cir.TRADJ.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdj.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdj.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdj.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdj.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdj.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjOrder1.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjOrder1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjOrder1.cir.TRADJ.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjOrder1.cir.TRADJ.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjOrder1.cir.TRADJ.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjOrder1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjOrder1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjOrder1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjOrder1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjOrder1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdj.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdj.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdj.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdj.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdj.cir.TRADJ.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdj.cir.TRADJ.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdj.cir.TRADJ.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdj.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdj.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdj.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjOrder1.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjOrder1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjOrder1.cir.TRADJ.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjOrder1.cir.TRADJ.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjOrder1.cir.TRADJ.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjOrder1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjOrder1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjOrder1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjOrder1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjOrder1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/twoObj.cir ${CMAKE_CURRENT_BINARY_DIR}/twoObj.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/twoObj.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/twoObj.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/twoObj.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/twoObj.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/twoObj.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/twoObjFD.cir ${CMAKE_CURRENT_BINARY_DIR}/twoObjFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedFormat.cir ${CMAKE_CURRENT_BINARY_DIR}/unsupportedFormat.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedFormat.cir.backup ${CMAKE_CURRENT_BINARY_DIR}/unsupportedFormat.cir.backup ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedFormat.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/unsupportedFormat.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupportedFormat.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedFormat.cir.SENS.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/unsupportedFormat.cir.SENS.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedFormat.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/unsupportedFormat.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedRawFormat.cir ${CMAKE_CURRENT_BINARY_DIR}/unsupportedRawFormat.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedRawFormat.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/unsupportedRawFormat.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupportedRawFormat.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedRawFormat.cir.SENS.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/unsupportedRawFormat.cir.SENS.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupportedRawFormat.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/unsupportedRawFormat.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSens.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSens.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSens.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensAdj.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensAdj_aztec.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj_aztec.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj_aztec.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensAdj_belos.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj_belos.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ampSensAdj_belos.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensFDa.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSensFDa.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensFDb.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSensFDb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ampSensFDc.cir ${CMAKE_CURRENT_BINARY_DIR}/ampSensFDc.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1070son.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1070son.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1070son.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug1070son.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug1070son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1070son.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug1070son.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_baseline.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_baseline.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_baseline_copy.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_baseline_copy.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_global.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_global.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_global2.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_global2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_global_curlybrace.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_global_curlybrace.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1073son.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1073son.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1073son.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug1073son.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug1073son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1073son.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug1073son.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_numerical.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_numerical.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1070sonPart2.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1070sonPart2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1070sonPart2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug1070sonPart2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug1070sonPart2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1070sonPart2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug1070sonPart2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1073sonPart2.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1073sonPart2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1073sonPart2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug1073sonPart2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug1073sonPart2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1073sonPart2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug1073sonPart2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invDirect.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim6invDirect.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invDirectFD.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim6invDirectFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/transLineStepDataGlobalPar.cir ${CMAKE_CURRENT_BINARY_DIR}/transLineStepDataGlobalPar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/transLineStepDataGlobalPar.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/transLineStepDataGlobalPar.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/transLineStepDataGlobalPar.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/transLineStepDataGlobalPar.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/transLineStepDataGlobalPar.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/inverter_event.cir ${CMAKE_CURRENT_BINARY_DIR}/inverter_event.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/inverter_event.cir.TRADJ.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/inverter_event.cir.TRADJ.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/inverter_event.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/inverter_event.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/inverter_event.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/inverter_event.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/inverter_event.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjNewFD.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjNewFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjNewFD.cir.TRADJ.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjNewFD.cir.TRADJ.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjNewFD.cir.TRADJ.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjNewFD.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjNewFD.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjNewFD.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGearAdjNewFD.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sensCapGearAdjNewFD.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjNewFD.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjNewFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjNewFD.cir.TRADJ.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjNewFD.cir.TRADJ.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjNewFD.cir.TRADJ.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjNewFD.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjNewFD.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjNewFD.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapTrapAdjNewFD.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sensCapTrapAdjNewFD.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointNewFD.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointNewFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointNewFD.cir.TRADJ.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointNewFD.cir.TRADJ.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointNewFD.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointNewFD.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointNewFD.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointNewFD.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointNewFD.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointForceAnalytic.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointForceAnalytic.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrapNewFD.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrapNewFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrapNewFD.cir.TRADJ.prn.gs ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrapNewFD.cir.TRADJ.prn.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrapNewFD.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrapNewFD.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrapNewFD.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim6invAdjointTrapNewFD.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bsim6invAdjointTrapNewFD.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeNewFD.cir ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeNewFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeNewFD.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeNewFD.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeNewFD.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeNewFD.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeNewFD.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeOldFD.cir ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeOldFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiode.cir ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiode.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeAnalytic.cir ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeAnalytic.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiode.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiode.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiode.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiode.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiode.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeAdjoint.cir ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeAdjoint.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeDirect.cir ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeDirect.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeAdjoint.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeAdjoint.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeAdjoint.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveRectDiodeAdjoint.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/fullWaveRectDiodeAdjoint.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fullWaveDummy.cir ${CMAKE_CURRENT_BINARY_DIR}/fullWaveDummy.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vsrcSensTest.cir ${CMAKE_CURRENT_BINARY_DIR}/vsrcSensTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vsrcSensTest.cir.SENS.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/vsrcSensTest.cir.SENS.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/vsrcSensTest.cir.SENS.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vsrcSensTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/vsrcSensTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/vsrcSensTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vsrcSensTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/vsrcSensTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/forceDeviceFD.cir ${CMAKE_CURRENT_BINARY_DIR}/forceDeviceFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/forceDeviceFD.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/forceDeviceFD.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/forceDeviceFD.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/forceDeviceFD.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/forceDeviceFD.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_forceDeviceFD.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_forceDeviceFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sensCapGear_oldFD.cir ${CMAKE_CURRENT_BINARY_DIR}/sensCapGear_oldFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1092son.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1092son.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1092son.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug1092son.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug1092son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1092son.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug1092son.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1092sonA.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1092sonA.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug1092sonB.cir ${CMAKE_CURRENT_BINARY_DIR}/bug1092sonB.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3Inv.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim3Inv.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3Inv.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim3Inv.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim3Inv.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3Inv.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bsim3Inv.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3Inv_newFD.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim3Inv_newFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3Inv_oldFD.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim3Inv_oldFD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim4_issue694.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim4_issue694.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim4_issue694.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim4_issue694.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim4_issue694.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim4_issue694_FD.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim4_issue694_FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim4_issue694_ref.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim4_issue694_ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens1.cir ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens1_FD.cir ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens1_FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens2.cir ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens2_FD.cir ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens2_FD.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/nlMutIndSens2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/nlMutIndSens2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/issue729.cir ${CMAKE_CURRENT_BINARY_DIR}/issue729.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/issue729Ref.cir ${CMAKE_CURRENT_BINARY_DIR}/issue729Ref.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/issue729.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/issue729.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/issue729.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/issue729.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/issue729.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_fbhPNP.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_fbhPNP.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_fbhPNP.cir ${OutputDataDir}/SENS/ampSens_fbhPNP.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_fbhPNP.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;fbhhbt;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_fbhPNP.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_fbhPNP.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_fbhPNP.cir ${OutputDataDir}/SENS/ampSens_fbhPNP.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_fbhPNP.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;fbhhbt;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/150nm_nmos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} 150nm_nmos.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} 150nm_nmos.cir ${OutputDataDir}/SENS/150nm_nmos.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/150nm_nmos.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;required:nonfree;ekv")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/150nm_nmos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} 150nm_nmos.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} 150nm_nmos.cir ${OutputDataDir}/SENS/150nm_nmos.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/150nm_nmos.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;required:nonfree;ekv")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_n_111.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_n_111.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_n_111.cir ${OutputDataDir}/SENS/gummel_n_111.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_n_111.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg111;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_n_111.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_n_111.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_n_111.cir ${OutputDataDir}/SENS/gummel_n_111.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_n_111.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg111;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/unsupportedFormat.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupportedFormat.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupportedFormat.cir ${OutputDataDir}/SENS/unsupportedFormat.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/unsupportedFormat.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/unsupportedFormat.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupportedFormat.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} unsupportedFormat.cir ${OutputDataDir}/SENS/unsupportedFormat.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/unsupportedFormat.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTranAdjointScaled.cir.sh COMMAND bash diodeTranAdjointScaled.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTranAdjointScaled.cir ${OutputDataDir}/SENS/diodeTranAdjointScaled.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTranAdjointScaled.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug27;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTranAdjointScaled.cir.sh COMMAND bash diodeTranAdjointScaled.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTranAdjointScaled.cir ${OutputDataDir}/SENS/diodeTranAdjointScaled.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTranAdjointScaled.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug27;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapAdjNewFD.cir.sh COMMAND bash sensCapTrapAdjNewFD.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapAdjNewFD.cir ${OutputDataDir}/SENS/sensCapTrapAdjNewFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapAdjNewFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;order2;analytic;bug1080son;capacitor;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapAdjNewFD.cir.sh COMMAND bash sensCapTrapAdjNewFD.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapAdjNewFD.cir ${OutputDataDir}/SENS/sensCapTrapAdjNewFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapAdjNewFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;order2;analytic;bug1080son;capacitor;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/rc1000TranAdjGear.cir.sh COMMAND bash rc1000TranAdjGear.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} rc1000TranAdjGear.cir ${OutputDataDir}/SENS/rc1000TranAdjGear.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/rc1000TranAdjGear.cir.sh PROPERTY LABELS "serial;parallel;weekly;sens;adjoint;gear;order2;large;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/rc1000TranAdjGear.cir.sh COMMAND bash rc1000TranAdjGear.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} rc1000TranAdjGear.cir ${OutputDataDir}/SENS/rc1000TranAdjGear.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/rc1000TranAdjGear.cir.sh PROPERTY LABELS "serial;parallel;weekly;sens;adjoint;gear;order2;large;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/issue729.cir.sh COMMAND bash issue729.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} issue729.cir ${OutputDataDir}/SENS/issue729.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/issue729.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;issue729;vsrc;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/issue729.cir.sh COMMAND bash issue729.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} issue729.cir ${OutputDataDir}/SENS/issue729.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/issue729.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;issue729;vsrc;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGearAdj.cir.sh COMMAND bash sensCapGearAdj.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGearAdj.cir ${OutputDataDir}/SENS/sensCapGearAdj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGearAdj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;gear;order2;analytic;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGearAdj.cir.sh COMMAND bash sensCapGearAdj.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGearAdj.cir ${OutputDataDir}/SENS/sensCapGearAdj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGearAdj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;gear;order2;analytic;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGear.cir.sh COMMAND bash sensCapGear.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGear.cir ${OutputDataDir}/SENS/sensCapGear.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGear.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;analytic;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGear.cir.sh COMMAND bash sensCapGear.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGear.cir ${OutputDataDir}/SENS/sensCapGear.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGear.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;analytic;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_fbh.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_fbh.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_fbh.cir ${OutputDataDir}/SENS/ampSens_fbh.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_fbh.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;fbhhbt;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_fbh.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_fbh.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_fbh.cir ${OutputDataDir}/SENS/ampSens_fbh.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_fbh.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;fbhhbt;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/twoObj.cir.sh COMMAND perl -I${XyceRegressionTestScripts} twoObj.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} twoObj.cir ${OutputDataDir}/SENS/twoObj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/twoObj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;op;bjtlev1;bug670")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/twoObj.cir.sh COMMAND perl -I${XyceRegressionTestScripts} twoObj.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} twoObj.cir ${OutputDataDir}/SENS/twoObj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/twoObj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;op;bjtlev1;bug670")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1073son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1073son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug1073son.cir ${OutputDataDir}/SENS/bug1073son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1073son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;FD;bug1073son;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1073son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1073son.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug1073son.cir ${OutputDataDir}/SENS/bug1073son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1073son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;FD;bug1073son;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1073sonPart2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1073sonPart2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug1073sonPart2.cir ${OutputDataDir}/SENS/bug1073sonPart2.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1073sonPart2.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;direct;FD;bug1073son;bsim6;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1073sonPart2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1073sonPart2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug1073sonPart2.cir ${OutputDataDir}/SENS/bug1073sonPart2.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1073sonPart2.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;direct;FD;bug1073son;bsim6;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/nlMutIndSens2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} nlMutIndSens2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} nlMutIndSens2.cir ${OutputDataDir}/SENS/nlMutIndSens2.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/nlMutIndSens2.cir.sh PROPERTY LABELS "serial;nightly;analytic;mutualinductor;issue297;sens")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/improperObjFormat.cir.sh COMMAND perl -I${XyceRegressionTestScripts} improperObjFormat.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} improperObjFormat.cir ${OutputDataDir}/SENS/improperObjFormat.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/improperObjFormat.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug774son;errorexit")
  set_tests_properties(${TestNamePrefix}SENS/improperObjFormat.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/improperObjFormat.cir.sh COMMAND perl -I${XyceRegressionTestScripts} improperObjFormat.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} improperObjFormat.cir ${OutputDataDir}/SENS/improperObjFormat.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/improperObjFormat.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug774son;errorexit")
  set_tests_properties(${TestNamePrefix}SENS/improperObjFormat.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_op.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_op.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_op.cir ${OutputDataDir}/SENS/ampSens_op.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_op.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;op;bjtlev1;bug1086son")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_op.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_op.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_op.cir ${OutputDataDir}/SENS/ampSens_op.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_op.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;op;bjtlev1;bug1086son")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGearAdjNewFD.cir.sh COMMAND bash sensCapGearAdjNewFD.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGearAdjNewFD.cir ${OutputDataDir}/SENS/sensCapGearAdjNewFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGearAdjNewFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;gear;order2;analytic;bug1080son;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGearAdjNewFD.cir.sh COMMAND bash sensCapGearAdjNewFD.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGearAdjNewFD.cir ${OutputDataDir}/SENS/sensCapGearAdjNewFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGearAdjNewFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;gear;order2;analytic;bug1080son;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug797son.cir.sh COMMAND bash bug797son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug797son.cir ${OutputDataDir}/SENS/bug797son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug797son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug797;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug797son.cir.sh COMMAND bash bug797son.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug797son.cir ${OutputDataDir}/SENS/bug797son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug797son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug797;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diode.cir.sh COMMAND perl -I${XyceRegressionTestScripts} diode.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} diode.cir ${OutputDataDir}/SENS/diode.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diode.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diode.cir.sh COMMAND perl -I${XyceRegressionTestScripts} diode.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} diode.cir ${OutputDataDir}/SENS/diode.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diode.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_hicum.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_hicum.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_hicum.cir ${OutputDataDir}/SENS/ampSens_hicum.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_hicum.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;hicum;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_hicum.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_hicum.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_hicum.cir ${OutputDataDir}/SENS/ampSens_hicum.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_hicum.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;hicum;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_n.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_n.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_n.cir ${OutputDataDir}/SENS/gummel_n.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_n.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_n.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_n.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_n.cir ${OutputDataDir}/SENS/gummel_n.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_n.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_vbicPNPdefault.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_vbicPNPdefault.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_vbicPNPdefault.cir ${OutputDataDir}/SENS/ampSens_vbicPNPdefault.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_vbicPNPdefault.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;vbic;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_vbicPNPdefault.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_vbicPNPdefault.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_vbicPNPdefault.cir ${OutputDataDir}/SENS/ampSens_vbicPNPdefault.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_vbicPNPdefault.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;vbic;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapAdj.cir.sh COMMAND bash sensCapTrapAdj.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapAdj.cir ${OutputDataDir}/SENS/sensCapTrapAdj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapAdj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;order2;analytic;capacitor;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapAdj.cir.sh COMMAND bash sensCapTrapAdj.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapAdj.cir ${OutputDataDir}/SENS/sensCapTrapAdj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapAdj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;order2;analytic;capacitor;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim3Inv.cir.sh COMMAND bash bsim3Inv.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bsim3Inv.cir ${OutputDataDir}/SENS/bsim3Inv.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim3Inv.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;FD;bug1082son;bsim3;resistor;notmorethan2procs")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim3Inv.cir.sh COMMAND bash bsim3Inv.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bsim3Inv.cir ${OutputDataDir}/SENS/bsim3Inv.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim3Inv.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;FD;bug1082son;bsim3;resistor;notmorethan2procs")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/res.cir.sh COMMAND perl -I${XyceRegressionTestScripts} res.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} res.cir ${OutputDataDir}/SENS/res.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/res.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/res.cir.sh COMMAND perl -I${XyceRegressionTestScripts} res.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} res.cir ${OutputDataDir}/SENS/res.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/res.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/150nm_nmos_forceDeviceFD.cir.sh COMMAND perl -I${XyceRegressionTestScripts} 150nm_nmos_forceDeviceFD.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} 150nm_nmos_forceDeviceFD.cir ${OutputDataDir}/SENS/150nm_nmos_forceDeviceFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/150nm_nmos_forceDeviceFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug1088son;required:nonfree;ekv")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/150nm_nmos_forceDeviceFD.cir.sh COMMAND perl -I${XyceRegressionTestScripts} 150nm_nmos_forceDeviceFD.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} 150nm_nmos_forceDeviceFD.cir ${OutputDataDir}/SENS/150nm_nmos_forceDeviceFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/150nm_nmos_forceDeviceFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug1088son;required:nonfree;ekv")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_pmos_xyce.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_pmos_xyce.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_pmos_xyce.cir ${OutputDataDir}/SENS/gummel_pmos_xyce.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_pmos_xyce.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsim6;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_pmos_xyce.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_pmos_xyce.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_pmos_xyce.cir ${OutputDataDir}/SENS/gummel_pmos_xyce.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_pmos_xyce.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsim6;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug772son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug772son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug772son.cir ${OutputDataDir}/SENS/bug772son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug772son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug772son;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug772son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug772son.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug772son.cir ${OutputDataDir}/SENS/bug772son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug772son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug772son;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_n_110.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_n_110.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_n_110.cir ${OutputDataDir}/SENS/gummel_n_110.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_n_110.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg110;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_n_110.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_n_110.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_n_110.cir ${OutputDataDir}/SENS/gummel_n_110.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_n_110.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg110;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapAdjOrder1.cir.sh COMMAND bash sensCapTrapAdjOrder1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapAdjOrder1.cir ${OutputDataDir}/SENS/sensCapTrapAdjOrder1.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapAdjOrder1.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;order1;analytic;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapAdjOrder1.cir.sh COMMAND bash sensCapTrapAdjOrder1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapAdjOrder1.cir ${OutputDataDir}/SENS/sensCapTrapAdjOrder1.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapAdjOrder1.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;order1;analytic;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/improperVectorParams.cir.sh COMMAND perl -I${XyceRegressionTestScripts} improperVectorParams.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} improperVectorParams.cir ${OutputDataDir}/SENS/improperVectorParams.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/improperVectorParams.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
  set_tests_properties(${TestNamePrefix}SENS/improperVectorParams.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/improperVectorParams.cir.sh COMMAND perl -I${XyceRegressionTestScripts} improperVectorParams.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} improperVectorParams.cir ${OutputDataDir}/SENS/improperVectorParams.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/improperVectorParams.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
  set_tests_properties(${TestNamePrefix}SENS/improperVectorParams.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSensAdj_aztec.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSensAdj_aztec.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSensAdj_aztec.cir ${OutputDataDir}/SENS/ampSensAdj_aztec.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSensAdj_aztec.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSensAdj_aztec.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSensAdj_aztec.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSensAdj_aztec.cir ${OutputDataDir}/SENS/ampSensAdj_aztec.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSensAdj_aztec.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim6invAdjoint.cir.sh COMMAND bash bsim6invAdjoint.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bsim6invAdjoint.cir ${OutputDataDir}/SENS/bsim6invAdjoint.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim6invAdjoint.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bsim6;admssens;resistor;adms")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim6invAdjoint.cir.sh COMMAND bash bsim6invAdjoint.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bsim6invAdjoint.cir ${OutputDataDir}/SENS/bsim6invAdjoint.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim6invAdjoint.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bsim6;admssens;resistor;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_nmos_xyce.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_nmos_xyce.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_nmos_xyce.cir ${OutputDataDir}/SENS/gummel_nmos_xyce.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_nmos_xyce.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsim6;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_nmos_xyce.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_nmos_xyce.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_nmos_xyce.cir ${OutputDataDir}/SENS/gummel_nmos_xyce.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_nmos_xyce.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsim6;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_p_110.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_p_110.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_p_110.cir ${OutputDataDir}/SENS/gummel_p_110.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_p_110.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg110;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_p_110.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_p_110.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_p_110.cir ${OutputDataDir}/SENS/gummel_p_110.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_p_110.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg110;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/inverter_event.cir.sh COMMAND bash inverter_event.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} inverter_event.cir ${OutputDataDir}/SENS/inverter_event.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/inverter_event.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bsim6;event;resistor;adms")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/inverter_event.cir.sh COMMAND bash inverter_event.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} inverter_event.cir ${OutputDataDir}/SENS/inverter_event.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/inverter_event.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bsim6;event;resistor;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/nlMutIndSens1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} nlMutIndSens1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} nlMutIndSens1.cir ${OutputDataDir}/SENS/nlMutIndSens1.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/nlMutIndSens1.cir.sh PROPERTY LABELS "serial;nightly;analytic;mutualinductor;issue297;sens")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapOrder1.cir.sh COMMAND bash sensCapTrapOrder1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapOrder1.cir ${OutputDataDir}/SENS/sensCapTrapOrder1.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapOrder1.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapOrder1.cir.sh COMMAND bash sensCapTrapOrder1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapOrder1.cir ${OutputDataDir}/SENS/sensCapTrapOrder1.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapOrder1.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/transLineStepDataGlobalPar.cir.sh COMMAND bash transLineStepDataGlobalPar.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} transLineStepDataGlobalPar.cir ${OutputDataDir}/SENS/transLineStepDataGlobalPar.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/transLineStepDataGlobalPar.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug1077son;step;capacitor;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/transLineStepDataGlobalPar.cir.sh COMMAND bash transLineStepDataGlobalPar.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} transLineStepDataGlobalPar.cir ${OutputDataDir}/SENS/transLineStepDataGlobalPar.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/transLineStepDataGlobalPar.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug1077son;step;capacitor;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug702son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug702son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug702son.cir ${OutputDataDir}/SENS/bug702son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug702son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug702son;resistor;analytic")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug702son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug702son.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug702son.cir ${OutputDataDir}/SENS/bug702son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug702son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug702son;resistor;analytic")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/unsupportedRawFormat.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupportedRawFormat.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupportedRawFormat.cir ${OutputDataDir}/SENS/unsupportedRawFormat.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/unsupportedRawFormat.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/unsupportedRawFormat.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupportedRawFormat.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} unsupportedRawFormat.cir ${OutputDataDir}/SENS/unsupportedRawFormat.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/unsupportedRawFormat.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_mextram.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_mextram.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_mextram.cir ${OutputDataDir}/SENS/ampSens_mextram.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_mextram.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;mextram;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_mextram.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_mextram.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_mextram.cir ${OutputDataDir}/SENS/ampSens_mextram.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_mextram.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;mextram;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bugs799_and_842.cir.sh COMMAND bash bugs799_and_842.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bugs799_and_842.cir ${OutputDataDir}/SENS/bugs799_and_842.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bugs799_and_842.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bjtlev1;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bugs799_and_842.cir.sh COMMAND bash bugs799_and_842.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bugs799_and_842.cir ${OutputDataDir}/SENS/bugs799_and_842.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bugs799_and_842.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bjtlev1;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/forceDeviceFD.cir.sh COMMAND bash forceDeviceFD.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} forceDeviceFD.cir ${OutputDataDir}/SENS/forceDeviceFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/forceDeviceFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;FD;bug1092son;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/forceDeviceFD.cir.sh COMMAND bash forceDeviceFD.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} forceDeviceFD.cir ${OutputDataDir}/SENS/forceDeviceFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/forceDeviceFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;FD;bug1092son;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/psp_asym_pmos_idvg0_SENS.cir.sh COMMAND perl -I${XyceRegressionTestScripts} psp_asym_pmos_idvg0_SENS.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} psp_asym_pmos_idvg0_SENS.cir ${OutputDataDir}/SENS/psp_asym_pmos_idvg0_SENS.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/psp_asym_pmos_idvg0_SENS.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;psp;bug1088son;psp103;step;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/psp_asym_pmos_idvg0_SENS.cir.sh COMMAND perl -I${XyceRegressionTestScripts} psp_asym_pmos_idvg0_SENS.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} psp_asym_pmos_idvg0_SENS.cir ${OutputDataDir}/SENS/psp_asym_pmos_idvg0_SENS.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/psp_asym_pmos_idvg0_SENS.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;psp;bug1088son;psp103;step;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1070son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1070son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug1070son.cir ${OutputDataDir}/SENS/bug1070son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1070son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;globalparam;FD;bug1070son;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1070son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1070son.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug1070son.cir ${OutputDataDir}/SENS/bug1070son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1070son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;globalparam;FD;bug1070son;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1092son.cir.sh COMMAND bash bug1092son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug1092son.cir ${OutputDataDir}/SENS/bug1092son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1092son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;FD;direct;bug1092son;bsim6;admssens;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1092son.cir.sh COMMAND bash bug1092son.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug1092son.cir ${OutputDataDir}/SENS/bug1092son.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1092son.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;FD;direct;bug1092son;bsim6;admssens;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/fullWaveRectDiode.cir.sh COMMAND bash fullWaveRectDiode.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} fullWaveRectDiode.cir ${OutputDataDir}/SENS/fullWaveRectDiode.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/fullWaveRectDiode.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;direct;bug1080son;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/fullWaveRectDiode.cir.sh COMMAND bash fullWaveRectDiode.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} fullWaveRectDiode.cir ${OutputDataDir}/SENS/fullWaveRectDiode.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/fullWaveRectDiode.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;direct;bug1080son;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/missingParams.cir.sh COMMAND perl -I${XyceRegressionTestScripts} missingParams.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} missingParams.cir ${OutputDataDir}/SENS/missingParams.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/missingParams.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
  set_tests_properties(${TestNamePrefix}SENS/missingParams.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/missingParams.cir.sh COMMAND perl -I${XyceRegressionTestScripts} missingParams.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} missingParams.cir ${OutputDataDir}/SENS/missingParams.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/missingParams.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;errorexit")
  set_tests_properties(${TestNamePrefix}SENS/missingParams.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGearAdjOrder1.cir.sh COMMAND bash sensCapGearAdjOrder1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGearAdjOrder1.cir ${OutputDataDir}/SENS/sensCapGearAdjOrder1.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGearAdjOrder1.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;gear;order1;analytic;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapGearAdjOrder1.cir.sh COMMAND bash sensCapGearAdjOrder1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapGearAdjOrder1.cir ${OutputDataDir}/SENS/sensCapGearAdjOrder1.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapGearAdjOrder1.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;gear;order1;analytic;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/150nm_pmos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} 150nm_pmos.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} 150nm_pmos.cir ${OutputDataDir}/SENS/150nm_pmos.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/150nm_pmos.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;required:nonfree;ekv")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_NONFREE_MODELS AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/150nm_pmos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} 150nm_pmos.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} 150nm_pmos.cir ${OutputDataDir}/SENS/150nm_pmos.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/150nm_pmos.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;required:nonfree;ekv")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens.cir ${OutputDataDir}/SENS/ampSens.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;op;bjtlev1")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens.cir ${OutputDataDir}/SENS/ampSens.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;op;bjtlev1")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapOrder2.cir.sh COMMAND bash sensCapTrapOrder2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapOrder2.cir ${OutputDataDir}/SENS/sensCapTrapOrder2.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapOrder2.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/sensCapTrapOrder2.cir.sh COMMAND bash sensCapTrapOrder2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sensCapTrapOrder2.cir ${OutputDataDir}/SENS/sensCapTrapOrder2.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/sensCapTrapOrder2.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_mextramPNP.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_mextramPNP.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_mextramPNP.cir ${OutputDataDir}/SENS/ampSens_mextramPNP.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_mextramPNP.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;mextram;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_mextramPNP.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_mextramPNP.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_mextramPNP.cir ${OutputDataDir}/SENS/ampSens_mextramPNP.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_mextramPNP.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;mextram;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTran.cir.sh COMMAND bash diodeTran.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTran.cir ${OutputDataDir}/SENS/diodeTran.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTran.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTran.cir.sh COMMAND bash diodeTran.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTran.cir ${OutputDataDir}/SENS/diodeTran.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTran.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_p_111.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_p_111.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_p_111.cir ${OutputDataDir}/SENS/gummel_p_111.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_p_111.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg111;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_p_111.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_p_111.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_p_111.cir ${OutputDataDir}/SENS/gummel_p_111.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_p_111.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;bsimcmg111;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSensAdj.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSensAdj.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSensAdj.cir ${OutputDataDir}/SENS/ampSensAdj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSensAdj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSensAdj.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSensAdj.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSensAdj.cir ${OutputDataDir}/SENS/ampSensAdj.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSensAdj.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/missingSensFunction.cir.sh COMMAND perl -I${XyceRegressionTestScripts} missingSensFunction.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} missingSensFunction.cir ${OutputDataDir}/SENS/missingSensFunction.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/missingSensFunction.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/missingSensFunction.cir.sh COMMAND perl -I${XyceRegressionTestScripts} missingSensFunction.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} missingSensFunction.cir ${OutputDataDir}/SENS/missingSensFunction.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/missingSensFunction.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/vsrcSensTest.cir.sh COMMAND bash vsrcSensTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} vsrcSensTest.cir ${OutputDataDir}/SENS/vsrcSensTest.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/vsrcSensTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;analytic;bug1080son;vsrc;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/vsrcSensTest.cir.sh COMMAND bash vsrcSensTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} vsrcSensTest.cir ${OutputDataDir}/SENS/vsrcSensTest.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/vsrcSensTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;analytic;bug1080son;vsrc;resistor;capacitor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim4_issue694.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bsim4_issue694.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bsim4_issue694.cir ${OutputDataDir}/SENS/bsim4_issue694.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim4_issue694.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim4_issue694.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bsim4_issue694.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bsim4_issue694.cir ${OutputDataDir}/SENS/bsim4_issue694.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim4_issue694.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim6invAdjointNewFD.cir.sh COMMAND bash bsim6invAdjointNewFD.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bsim6invAdjointNewFD.cir ${OutputDataDir}/SENS/bsim6invAdjointNewFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim6invAdjointNewFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug1080son;bsim6;admssens;resistor;adms")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bsim6invAdjointNewFD.cir.sh COMMAND bash bsim6invAdjointNewFD.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bsim6invAdjointNewFD.cir ${OutputDataDir}/SENS/bsim6invAdjointNewFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bsim6invAdjointNewFD.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;bug1080son;bsim6;admssens;resistor;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/psp_asym_nmos_idvg0_SENS.cir.sh COMMAND perl -I${XyceRegressionTestScripts} psp_asym_nmos_idvg0_SENS.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} psp_asym_nmos_idvg0_SENS.cir ${OutputDataDir}/SENS/psp_asym_nmos_idvg0_SENS.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/psp_asym_nmos_idvg0_SENS.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;psp;bug1088son;psp103;step;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/psp_asym_nmos_idvg0_SENS.cir.sh COMMAND perl -I${XyceRegressionTestScripts} psp_asym_nmos_idvg0_SENS.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} psp_asym_nmos_idvg0_SENS.cir ${OutputDataDir}/SENS/psp_asym_nmos_idvg0_SENS.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/psp_asym_nmos_idvg0_SENS.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;psp;bug1088son;psp103;step;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSensAdj_belos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSensAdj_belos.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSensAdj_belos.cir ${OutputDataDir}/SENS/ampSensAdj_belos.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSensAdj_belos.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSensAdj_belos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSensAdj_belos.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSensAdj_belos.cir ${OutputDataDir}/SENS/ampSensAdj_belos.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSensAdj_belos.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;capacitor;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug669.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug669.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug669.cir ${OutputDataDir}/SENS/bug669.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug669.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug669;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug669.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug669.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug669.cir ${OutputDataDir}/SENS/bug669.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug669.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bug669;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTranAdjointTrap.cir.sh COMMAND bash diodeTranAdjointTrap.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTranAdjointTrap.cir ${OutputDataDir}/SENS/diodeTranAdjointTrap.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTranAdjointTrap.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTranAdjointTrap.cir.sh COMMAND bash diodeTranAdjointTrap.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTranAdjointTrap.cir ${OutputDataDir}/SENS/diodeTranAdjointTrap.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTranAdjointTrap.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;trap;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/fullWaveRectDiodeAdjoint.cir.sh COMMAND bash fullWaveRectDiodeAdjoint.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} fullWaveRectDiodeAdjoint.cir ${OutputDataDir}/SENS/fullWaveRectDiodeAdjoint.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/fullWaveRectDiodeAdjoint.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;direct;bug1080son;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/fullWaveRectDiodeAdjoint.cir.sh COMMAND bash fullWaveRectDiodeAdjoint.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} fullWaveRectDiodeAdjoint.cir ${OutputDataDir}/SENS/fullWaveRectDiodeAdjoint.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/fullWaveRectDiodeAdjoint.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;direct;bug1080son;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_hicumL0.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_hicumL0.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_hicumL0.cir ${OutputDataDir}/SENS/ampSens_hicumL0.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_hicumL0.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;hicum_l0;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_hicumL0.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_hicumL0.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_hicumL0.cir ${OutputDataDir}/SENS/ampSens_hicumL0.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_hicumL0.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;hicum_l0;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/fullWaveRectDiodeNewFD.cir.sh COMMAND perl -I${XyceRegressionTestScripts} fullWaveRectDiodeNewFD.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} fullWaveRectDiodeNewFD.cir ${OutputDataDir}/SENS/fullWaveRectDiodeNewFD.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/fullWaveRectDiodeNewFD.cir.sh PROPERTY LABELS "serial;nightly;sens;direct;bug1080son;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTranAdjoint.cir.sh COMMAND bash diodeTranAdjoint.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTranAdjoint.cir ${OutputDataDir}/SENS/diodeTranAdjoint.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTranAdjoint.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;diode;resistor")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/diodeTranAdjoint.cir.sh COMMAND bash diodeTranAdjoint.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} diodeTranAdjoint.cir ${OutputDataDir}/SENS/diodeTranAdjoint.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/diodeTranAdjoint.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;adjoint;diode;resistor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_p.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_p.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_p.cir ${OutputDataDir}/SENS/gummel_p.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_p.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/gummel_p.cir.sh COMMAND perl -I${XyceRegressionTestScripts} gummel_p.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} gummel_p.cir ${OutputDataDir}/SENS/gummel_p.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/gummel_p.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;bsimcmg;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_vbic.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_vbic.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_vbic.cir ${OutputDataDir}/SENS/ampSens_vbic.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_vbic.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;vbic;adms")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/ampSens_vbic.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ampSens_vbic.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ampSens_vbic.cir ${OutputDataDir}/SENS/ampSens_vbic.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/ampSens_vbic.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;vbic;adms")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1070sonPart2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1070sonPart2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug1070sonPart2.cir ${OutputDataDir}/SENS/bug1070sonPart2.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1070sonPart2.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;globalparam;FD;bug1070son;resistor;capacitor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}SENS/bug1070sonPart2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug1070sonPart2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug1070sonPart2.cir ${OutputDataDir}/SENS/bug1070sonPart2.cir.prn )
  set_property(TEST ${TestNamePrefix}SENS/bug1070sonPart2.cir.sh PROPERTY LABELS "serial;parallel;nightly;sens;gear;globalparam;FD;bug1070son;resistor;capacitor")
endif()
