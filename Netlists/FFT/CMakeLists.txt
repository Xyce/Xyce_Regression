# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FreqFminFmaxTest.cir ${CMAKE_CURRENT_BINARY_DIR}/FreqFminFmaxTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FreqFminFmaxTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FreqFminFmaxTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FreqFminFmaxTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MiscParsing.cir ${CMAKE_CURRENT_BINARY_DIR}/MiscParsing.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MiscParsing.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/MiscParsing.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/MiscParsing.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/PeriodicWindowTest.cir ${CMAKE_CURRENT_BINARY_DIR}/PeriodicWindowTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/PeriodicWindowTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/PeriodicWindowTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/PeriodicWindowTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RemeasureFFTonly.cir ${CMAKE_CURRENT_BINARY_DIR}/RemeasureFFTonly.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RemeasureFFTonly.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/RemeasureFFTonly.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/RemeasureFFTonly.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RemeasureFFTonly.csv ${CMAKE_CURRENT_BINARY_DIR}/RemeasureFFTonly.csv ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/RemeasureFFTonlyGSfile ${CMAKE_CURRENT_BINARY_DIR}/RemeasureFFTonlyGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/StartStopTest.cir ${CMAKE_CURRENT_BINARY_DIR}/StartStopTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/StartStopTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/StartStopTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/StartStopTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/StartStopTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/StartStopTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/WindowTest.cir ${CMAKE_CURRENT_BINARY_DIR}/WindowTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/WindowTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/WindowTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/WindowTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/WindowTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/WindowTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fft_accurateOptionZero.cir ${CMAKE_CURRENT_BINARY_DIR}/fft_accurateOptionZero.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fft_accurateOptionZero.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/fft_accurateOptionZero.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/fft_accurateOptionZero.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fft_accurateOptionZeroGSfile ${CMAKE_CURRENT_BINARY_DIR}/fft_accurateOptionZeroGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fft_accurateOptionZero.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/fft_accurateOptionZero.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fftoutOptionZero.cir ${CMAKE_CURRENT_BINARY_DIR}/fftoutOptionZero.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fftoutOptionZero.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/fftoutOptionZero.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/fftoutOptionZero.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/fftoutOptionZero.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/fftoutOptionZero.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line1.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line1.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line1.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line2.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line2.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line2.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line3.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line3.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line3.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_fft_line3.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad_fft_line3.cir.tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/FreqFminFmaxTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FreqFminFmaxTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FreqFminFmaxTest.cir ${OutputDataDir}/FFT/FreqFminFmaxTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/FreqFminFmaxTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/FreqFminFmaxTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FreqFminFmaxTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FreqFminFmaxTest.cir ${OutputDataDir}/FFT/FreqFminFmaxTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/FreqFminFmaxTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/MiscParsing.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MiscParsing.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} MiscParsing.cir ${OutputDataDir}/FFT/MiscParsing.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/MiscParsing.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/MiscParsing.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MiscParsing.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} MiscParsing.cir ${OutputDataDir}/FFT/MiscParsing.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/MiscParsing.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/PeriodicWindowTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} PeriodicWindowTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} PeriodicWindowTest.cir ${OutputDataDir}/FFT/PeriodicWindowTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/PeriodicWindowTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/PeriodicWindowTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} PeriodicWindowTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} PeriodicWindowTest.cir ${OutputDataDir}/FFT/PeriodicWindowTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/PeriodicWindowTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/RemeasureFFTonly.cir.sh COMMAND perl -I${XyceRegressionTestScripts} RemeasureFFTonly.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} RemeasureFFTonly.cir ${OutputDataDir}/FFT/RemeasureFFTonly.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/RemeasureFFTonly.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/RemeasureFFTonly.cir.sh COMMAND perl -I${XyceRegressionTestScripts} RemeasureFFTonly.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} RemeasureFFTonly.cir ${OutputDataDir}/FFT/RemeasureFFTonly.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/RemeasureFFTonly.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
add_subdirectory(STEP)
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/StartStopTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} StartStopTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} StartStopTest.cir ${OutputDataDir}/FFT/StartStopTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/StartStopTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/StartStopTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} StartStopTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} StartStopTest.cir ${OutputDataDir}/FFT/StartStopTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/StartStopTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/WindowTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} WindowTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} WindowTest.cir ${OutputDataDir}/FFT/WindowTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/WindowTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/WindowTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} WindowTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} WindowTest.cir ${OutputDataDir}/FFT/WindowTest.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/WindowTest.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/bad_fft_line1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_fft_line1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_fft_line1.cir ${OutputDataDir}/FFT/bad_fft_line1.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/bad_fft_line1.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}FFT/bad_fft_line1.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/bad_fft_line1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_fft_line1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_fft_line1.cir ${OutputDataDir}/FFT/bad_fft_line1.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/bad_fft_line1.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}FFT/bad_fft_line1.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/bad_fft_line2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_fft_line2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_fft_line2.cir ${OutputDataDir}/FFT/bad_fft_line2.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/bad_fft_line2.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}FFT/bad_fft_line2.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/bad_fft_line2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_fft_line2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_fft_line2.cir ${OutputDataDir}/FFT/bad_fft_line2.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/bad_fft_line2.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}FFT/bad_fft_line2.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/bad_fft_line3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_fft_line3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_fft_line3.cir ${OutputDataDir}/FFT/bad_fft_line3.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/bad_fft_line3.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}FFT/bad_fft_line3.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/bad_fft_line3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_fft_line3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_fft_line3.cir ${OutputDataDir}/FFT/bad_fft_line3.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/bad_fft_line3.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}FFT/bad_fft_line3.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/fft_accurateOptionZero.cir.sh COMMAND perl -I${XyceRegressionTestScripts} fft_accurateOptionZero.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} fft_accurateOptionZero.cir ${OutputDataDir}/FFT/fft_accurateOptionZero.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/fft_accurateOptionZero.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/fft_accurateOptionZero.cir.sh COMMAND perl -I${XyceRegressionTestScripts} fft_accurateOptionZero.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} fft_accurateOptionZero.cir ${OutputDataDir}/FFT/fft_accurateOptionZero.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/fft_accurateOptionZero.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/fftoutOptionZero.cir.sh COMMAND perl -I${XyceRegressionTestScripts} fftoutOptionZero.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} fftoutOptionZero.cir ${OutputDataDir}/FFT/fftoutOptionZero.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/fftoutOptionZero.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}FFT/fftoutOptionZero.cir.sh COMMAND perl -I${XyceRegressionTestScripts} fftoutOptionZero.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} fftoutOptionZero.cir ${OutputDataDir}/FFT/fftoutOptionZero.cir.prn )
  set_property(TEST ${TestNamePrefix}FFT/fftoutOptionZero.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;required:fft")
endif()
