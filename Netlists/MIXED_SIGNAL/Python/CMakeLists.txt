# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY  runACircuit.cir runACircuit.cir.sh runACircuit.py runACircuitInSteps.cir runACircuitInSteps.cir.sh runACircuitInSteps.py runACircuitWithBackwardStep.cir runACircuitWithBackwardStep.cir.sh runACircuitWithBackwardStep.py runACircuitWithNullStep.cir runACircuitWithNullStep.cir.sh runACircuitWithNullStep.py runCircuitWithDACs.cir runCircuitWithDACs.cir.sh runCircuitWithDACs.py responseReturnCodes.cir responseReturnCodes.cir.sh responseReturnCodes.py getDeviceReturnCodes.cir getDeviceReturnCodes.cir.sh getDeviceReturnCodes.py getDeviceReturnCodesSubckt.cir getDeviceReturnCodesSubckt.cir.sh getDeviceReturnCodesSubckt.py commandLine.cir commandLine.cir.sh commandLine.py netlistError.cir netlistError.cir.sh netlistError.py DCOPfailures.cir DCOPfailures.cir.sh DCOPfailuresRunSimulation.py DCOPfailuresSimulateUntil.py runCircuitWithBogoDAC.cir runCircuitWithBogoDAC.cir.sh runCircuitWithBogoDAC.py ADCtest.cir ADCtest.cir.sh ADCtest.py ADCtest.cir.TVarrayGoldData ADCLimitDataTest.cir ADCLimitDataTest.cir.sh ADCLimitDataTest.py ADCLimitDataTest.cir.TVarrayGoldData ADCStateTest.cir ADCStateTest.cir.sh ADCStateTest.py ADCStateTest.cir.TSarrayGoldData ADCVarHist.cir ADCVarHist.cir.sh ADCVarHist.py ADCVarHist.cir.TVarrayGoldData ADCVarShortHist.cir ADCVarShortHist.cir.sh ADCVarShortHist.py ADCVarShortHist.cir.TVarrayGoldData ADCStateHist.cir ADCStateHist.cir.sh ADCStateHist.py ADCStateHist.cir.TVarrayGoldData ADCStateShortHist.cir ADCStateShortHist.cir.sh ADCStateShortHist.py ADCStateShortHist.cir.TVarrayGoldData noADCtest.cir noADCtest.cir.sh noADCtest.py adjacentNodes.cir adjacentNodes.cir.sh adjacentNodes.py runMultipleSims.cir runMultipleSims1.cir runMultipleSims2.cir runMultipleSims.cir.sh runMultipleSims.py noRun.cir noRun.cir.sh noRun.py bug_1275_son.cir bug_1275_son.cir.sh bug_1275_son.py bug_1275_son.cir.GoldData bug_1301_son.cir bug_1301_son.cir.sh bug_1301_son.py interfaceErrorMessages.cir interfaceErrorMessages.cir.sh interfaceErrorMessages.py xyce_interface.py tags DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuit.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuit.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuitInSteps.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuitInSteps.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuitWithBackwardStep.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuitWithBackwardStep.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuitWithNullStep.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runACircuitWithNullStep.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runCircuitWithDACs.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runCircuitWithDACs.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/responseReturnCodes.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/responseReturnCodes.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/getDeviceReturnCodes.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/getDeviceReturnCodes.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/getDeviceReturnCodesSubckt.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/getDeviceReturnCodesSubckt.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/commandLine.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/commandLine.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/netlistError.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/netlistError.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DCOPfailures.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DCOPfailuresRunSimulation.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DCOPfailuresSimulateUntil.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runCircuitWithBogoDAC.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runCircuitWithBogoDAC.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCtest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCtest.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCLimitDataTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCLimitDataTest.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCStateTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCStateTest.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCVarHist.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCVarHist.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCVarShortHist.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCVarShortHist.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCStateHist.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCStateHist.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCStateShortHist.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ADCStateShortHist.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/noADCtest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/noADCtest.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/adjacentNodes.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/adjacentNodes.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runMultipleSims.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/runMultipleSims.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/noRun.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/noRun.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug_1275_son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug_1275_son.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug_1301_son.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug_1301_son.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/interfaceErrorMessages.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/interfaceErrorMessages.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/xyce_interface.py PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/ADCLimitDataTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ADCLimitDataTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ADCLimitDataTest.cir ${OutputDataDir}/MIXED_SIGNAL/Python/ADCLimitDataTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/ADCLimitDataTest.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/ADCStateHist.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ADCStateHist.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ADCStateHist.cir ${OutputDataDir}/MIXED_SIGNAL/Python/ADCStateHist.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/ADCStateHist.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/ADCStateShortHist.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ADCStateShortHist.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ADCStateShortHist.cir ${OutputDataDir}/MIXED_SIGNAL/Python/ADCStateShortHist.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/ADCStateShortHist.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/ADCStateTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ADCStateTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ADCStateTest.cir ${OutputDataDir}/MIXED_SIGNAL/Python/ADCStateTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/ADCStateTest.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/ADCVarHist.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ADCVarHist.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ADCVarHist.cir ${OutputDataDir}/MIXED_SIGNAL/Python/ADCVarHist.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/ADCVarHist.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/ADCVarShortHist.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ADCVarShortHist.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ADCVarShortHist.cir ${OutputDataDir}/MIXED_SIGNAL/Python/ADCVarShortHist.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/ADCVarShortHist.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/ADCtest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ADCtest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ADCtest.cir ${OutputDataDir}/MIXED_SIGNAL/Python/ADCtest.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/ADCtest.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/DCOPfailures.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DCOPfailures.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DCOPfailures.cir ${OutputDataDir}/MIXED_SIGNAL/Python/DCOPfailures.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/DCOPfailures.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/adjacentNodes.cir.sh COMMAND perl -I${XyceRegressionTestScripts} adjacentNodes.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} adjacentNodes.cir ${OutputDataDir}/MIXED_SIGNAL/Python/adjacentNodes.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/adjacentNodes.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/bug_1275_son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug_1275_son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug_1275_son.cir ${OutputDataDir}/MIXED_SIGNAL/Python/bug_1275_son.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/bug_1275_son.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/bug_1301_son.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug_1301_son.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug_1301_son.cir ${OutputDataDir}/MIXED_SIGNAL/Python/bug_1301_son.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/bug_1301_son.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/commandLine.cir.sh COMMAND perl -I${XyceRegressionTestScripts} commandLine.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} commandLine.cir ${OutputDataDir}/MIXED_SIGNAL/Python/commandLine.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/commandLine.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/getDeviceReturnCodes.cir.sh COMMAND perl -I${XyceRegressionTestScripts} getDeviceReturnCodes.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} getDeviceReturnCodes.cir ${OutputDataDir}/MIXED_SIGNAL/Python/getDeviceReturnCodes.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/getDeviceReturnCodes.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/getDeviceReturnCodesSubckt.cir.sh COMMAND perl -I${XyceRegressionTestScripts} getDeviceReturnCodesSubckt.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} getDeviceReturnCodesSubckt.cir ${OutputDataDir}/MIXED_SIGNAL/Python/getDeviceReturnCodesSubckt.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/getDeviceReturnCodesSubckt.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/interfaceErrorMessages.cir.sh COMMAND perl -I${XyceRegressionTestScripts} interfaceErrorMessages.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} interfaceErrorMessages.cir ${OutputDataDir}/MIXED_SIGNAL/Python/interfaceErrorMessages.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/interfaceErrorMessages.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/netlistError.cir.sh COMMAND perl -I${XyceRegressionTestScripts} netlistError.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} netlistError.cir ${OutputDataDir}/MIXED_SIGNAL/Python/netlistError.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/netlistError.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/noADCtest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} noADCtest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} noADCtest.cir ${OutputDataDir}/MIXED_SIGNAL/Python/noADCtest.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/noADCtest.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/responseReturnCodes.cir.sh COMMAND perl -I${XyceRegressionTestScripts} responseReturnCodes.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} responseReturnCodes.cir ${OutputDataDir}/MIXED_SIGNAL/Python/responseReturnCodes.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/responseReturnCodes.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuit.cir.sh COMMAND perl -I${XyceRegressionTestScripts} runACircuit.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} runACircuit.cir ${OutputDataDir}/MIXED_SIGNAL/Python/runACircuit.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuit.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuitInSteps.cir.sh COMMAND perl -I${XyceRegressionTestScripts} runACircuitInSteps.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} runACircuitInSteps.cir ${OutputDataDir}/MIXED_SIGNAL/Python/runACircuitInSteps.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuitInSteps.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuitWithBackwardStep.cir.sh COMMAND perl -I${XyceRegressionTestScripts} runACircuitWithBackwardStep.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} runACircuitWithBackwardStep.cir ${OutputDataDir}/MIXED_SIGNAL/Python/runACircuitWithBackwardStep.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuitWithBackwardStep.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuitWithNullStep.cir.sh COMMAND perl -I${XyceRegressionTestScripts} runACircuitWithNullStep.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} runACircuitWithNullStep.cir ${OutputDataDir}/MIXED_SIGNAL/Python/runACircuitWithNullStep.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/runACircuitWithNullStep.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/runCircuitWithBogoDAC.cir.sh COMMAND perl -I${XyceRegressionTestScripts} runCircuitWithBogoDAC.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} runCircuitWithBogoDAC.cir ${OutputDataDir}/MIXED_SIGNAL/Python/runCircuitWithBogoDAC.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/runCircuitWithBogoDAC.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/runCircuitWithDACs.cir.sh COMMAND perl -I${XyceRegressionTestScripts} runCircuitWithDACs.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} runCircuitWithDACs.cir ${OutputDataDir}/MIXED_SIGNAL/Python/runCircuitWithDACs.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/runCircuitWithDACs.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PYTHON_FOUND AND MS_VPP_FOUND AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MIXED_SIGNAL/Python/runMultipleSims.cir.sh COMMAND perl -I${XyceRegressionTestScripts} runMultipleSims.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} runMultipleSims.cir ${OutputDataDir}/MIXED_SIGNAL/Python/runMultipleSims.cir.prn )
  set_property(TEST ${TestNamePrefix}MIXED_SIGNAL/Python/runMultipleSims.cir.sh PROPERTY LABELS "nightly;serial;python;required:mixedsignal")
endif()
