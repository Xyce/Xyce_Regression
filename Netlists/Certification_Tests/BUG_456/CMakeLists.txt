# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY  bug456.cir bug456.cir.tags bug456_unpacked.cir bug456_unpacked.cir.tags bug456pp.cir bug456pp.cir.tags bug456pp_unpacked.cir bug456pp_unpacked.cir.tags converter_baseline.cir converter_baseline_output.cir converter_baseline_unpacked.cir converter_restart_unpacked.cir exclude push_pull_xyce_baseline.cir push_pull_xyce_baseline_unpacked.cir push_pull_xyce_restart.cir push_pull_xyce_restart_unpacked.cir converter_restart.cir bug456_unpacked.cir.sh bug456pp.cir.sh bug456pp_unpacked.cir.sh bug456.cir.sh bug456emit.cir bug456emit.cir.sh bug456emit.cir.tags emitter_baseline.cir emitter_restart.cir bug456emit_gear.cir bug456emit_gear.cir.sh bug456emit_gear.cir.tags emitter_baseline_gear.cir emitter_restart_gear.cir bug456output.cir bug456output.cir.sh bug456output.cir.tags converter_restart_output.cir simple.cir simple.cir.sh simple.cir.tags simple_baseline.cir simple_restart.cir DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug456_unpacked.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug456pp.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug456pp_unpacked.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug456.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug456emit.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug456emit_gear.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug456output.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/simple.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug456.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456.cir.sh PROPERTY LABELS "serial;nightly;restart;gear;mutualinductor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456_unpacked.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456_unpacked.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug456_unpacked.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456_unpacked.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456_unpacked.cir.sh PROPERTY LABELS "serial;nightly;restart;trap;mutualinductor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456emit.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug456emit.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456emit.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit.cir.sh PROPERTY LABELS "serial;parallel;nightly;restart")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456emit.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug456emit.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456emit.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit.cir.sh PROPERTY LABELS "serial;parallel;nightly;restart")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit_gear.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456emit_gear.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug456emit_gear.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456emit_gear.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit_gear.cir.sh PROPERTY LABELS "serial;parallel;nightly;restart")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit_gear.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456emit_gear.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug456emit_gear.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456emit_gear.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456emit_gear.cir.sh PROPERTY LABELS "serial;parallel;nightly;restart")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456output.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456output.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug456output.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456output.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456output.cir.sh PROPERTY LABELS "serial;nightly;restart;trap;mutualinductor;parallel")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456output.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456output.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug456output.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456output.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456output.cir.sh PROPERTY LABELS "serial;nightly;restart;trap;mutualinductor;parallel")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456pp.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456pp.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug456pp.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456pp.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456pp.cir.sh PROPERTY LABELS "serial;parallel;nightly;restart;gear;mutualinductor")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456pp.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456pp.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug456pp.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456pp.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456pp.cir.sh PROPERTY LABELS "serial;parallel;nightly;restart;gear;mutualinductor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/bug456pp_unpacked.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bug456pp_unpacked.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug456pp_unpacked.cir ${OutputDataDir}/Certification_Tests/BUG_456/bug456pp_unpacked.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/bug456pp_unpacked.cir.sh PROPERTY LABELS "serial;nightly;restart;gear;mutualinductor")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_456/simple.cir.sh COMMAND perl -I${XyceRegressionTestScripts} simple.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} simple.cir ${OutputDataDir}/Certification_Tests/BUG_456/simple.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_456/simple.cir.sh PROPERTY LABELS "serial;nightly;restart")
endif()
