# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

add_subdirectory(Win)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_inc_lib_paths.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_inc_lib_paths.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_inc_lib_paths.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_inc_lib_paths.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_inc_lib_paths.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_inc_lib_paths.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_inc_lib_paths.cir.options ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/include_with_bogo_line ${CMAKE_CURRENT_BINARY_DIR}/sub1/include_with_bogo_line ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/inc_lib_file_absolute_path.cir ${CMAKE_CURRENT_BINARY_DIR}/inc_lib_file_absolute_path.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/inc_lib_file_absolute_path.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/inc_lib_file_absolute_path.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/inc_lib_file_absolute_path.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/sub2/include2_abs_path ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2/include2_abs_path ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/sub2/lib2_abs_path ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2/lib2_abs_path ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/inc_lib_file_relative_path.cir ${CMAKE_CURRENT_BINARY_DIR}/inc_lib_file_relative_path.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/include_dot_top ${CMAKE_CURRENT_BINARY_DIR}/include_dot_top ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/include1 ${CMAKE_CURRENT_BINARY_DIR}/sub1/include1 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/sub2/include2_path_rel_top ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2/include2_path_rel_top ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/sub2/lib2_path_rel_top ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2/lib2_path_rel_top ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/sub2/include2_path_rel_sub1 ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2/include2_path_rel_sub1 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/sub2/lib2_path_rel_sub1 ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2/lib2_path_rel_sub1 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/precedence)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/precedence/inc_precedence ${CMAKE_CURRENT_BINARY_DIR}/precedence/inc_precedence ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/precedence)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/precedence/lib_precedence ${CMAKE_CURRENT_BINARY_DIR}/precedence/lib_precedence ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/precedence)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/precedence/inc_precedence ${CMAKE_CURRENT_BINARY_DIR}/sub1/precedence/inc_precedence ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/precedence)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/precedence/lib_precedence ${CMAKE_CURRENT_BINARY_DIR}/sub1/precedence/lib_precedence ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/include1b ${CMAKE_CURRENT_BINARY_DIR}/sub1/include1b ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/include_dot_dot ${CMAKE_CURRENT_BINARY_DIR}/sub1/include_dot_dot ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sub1/sub2/include2 ${CMAKE_CURRENT_BINARY_DIR}/sub1/sub2/include2 ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/top_level_file_path.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/top_level_file_path.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/top_level_file_path.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tl_include1 ${CMAKE_CURRENT_BINARY_DIR}/tl_include1 ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tl_include2 ${CMAKE_CURRENT_BINARY_DIR}/tl_include2 ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tl_include3 ${CMAKE_CURRENT_BINARY_DIR}/tl_include3 ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tl_include4 ${CMAKE_CURRENT_BINARY_DIR}/tl_include4 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/top_level)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/top_level/top_level_file_path.cir ${CMAKE_CURRENT_BINARY_DIR}/top_level/top_level_file_path.cir ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/top_level)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/top_level/tl_include1 ${CMAKE_CURRENT_BINARY_DIR}/top_level/tl_include1 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/top_level)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/top_level/tl_include2 ${CMAKE_CURRENT_BINARY_DIR}/top_level/tl_include2 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/top_level)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/top_level/tl_include5 ${CMAKE_CURRENT_BINARY_DIR}/top_level/tl_include5 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/top_level/sub1)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/top_level/sub1/include_sub1 ${CMAKE_CURRENT_BINARY_DIR}/top_level/sub1/include_sub1 ONLY_IF_DIFFERENT)
file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/top_level/sub1)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/top_level/sub1/tl_include1 ${CMAKE_CURRENT_BINARY_DIR}/top_level/sub1/tl_include1 ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_inc_lib_paths.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_inc_lib_paths.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit")
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_inc_lib_paths.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_inc_lib_paths.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.sh PROPERTY LABELS "serial;parallel;nightly;errorexit")
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_1325_SON/bad_inc_lib_paths.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_absolute_path.cir.sh COMMAND perl -I${XyceRegressionTestScripts} inc_lib_file_absolute_path.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} inc_lib_file_absolute_path.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/inc_lib_file_absolute_path.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_absolute_path.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_absolute_path.cir.sh COMMAND perl -I${XyceRegressionTestScripts} inc_lib_file_absolute_path.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} inc_lib_file_absolute_path.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/inc_lib_file_absolute_path.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_absolute_path.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir COMMAND $<TARGET_FILE:Xyce> inc_lib_file_relative_path.cir )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir PROPERTY LABELS "serial;parallel;nightly")
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir PROPERTIES FIXTURES_SETUP inc_lib_file_relative_path.cir)
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir.verify COMMAND ${XYCE_VERIFY} inc_lib_file_relative_path.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir.prn inc_lib_file_relative_path.cir.prn )
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir.verify PROPERTIES FIXTURES_REQUIRED inc_lib_file_relative_path.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> inc_lib_file_relative_path.cir )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir PROPERTY LABELS "serial;parallel;nightly")
set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir PROPERTIES FIXTURES_SETUP inc_lib_file_relative_path.cir)
add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir.verify COMMAND ${XYCE_VERIFY} inc_lib_file_relative_path.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir.prn inc_lib_file_relative_path.cir.prn )
set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_1325_SON/inc_lib_file_relative_path.cir.verify PROPERTIES FIXTURES_REQUIRED inc_lib_file_relative_path.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/top_level_file_path.cir.sh COMMAND perl -I${XyceRegressionTestScripts} top_level_file_path.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} top_level_file_path.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/top_level_file_path.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/top_level_file_path.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1325_SON/top_level_file_path.cir.sh COMMAND perl -I${XyceRegressionTestScripts} top_level_file_path.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} top_level_file_path.cir ${OutputDataDir}/Certification_Tests/BUG_1325_SON/top_level_file_path.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1325_SON/top_level_file_path.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
