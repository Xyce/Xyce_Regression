# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Synapse_lv3.cir ${CMAKE_CURRENT_BINARY_DIR}/Synapse_lv3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Synapse_lv3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/Synapse_lv3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/Synapse_lv3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/Synapse_lv3_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/Synapse_lv3_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/b3soi.cir ${CMAKE_CURRENT_BINARY_DIR}/b3soi.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/b3soi.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/b3soi.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/b3soi.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/b3soi_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/b3soi_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/baselineLumpedLine.cir ${CMAKE_CURRENT_BINARY_DIR}/baselineLumpedLine.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bjt.cir ${CMAKE_CURRENT_BINARY_DIR}/bjt.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bjt.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bjt.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bjt.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bjt_ambient.cir ${CMAKE_CURRENT_BINARY_DIR}/bjt_ambient.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim3_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim3_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim4.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim4.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim4.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bsim4.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bsim4.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bsim4_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/bsim4_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/lumpedLine.cir ${CMAKE_CURRENT_BINARY_DIR}/lumpedLine.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/lumpedLine.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/lumpedLine.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/lumpedLine.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mesfet.cir ${CMAKE_CURRENT_BINARY_DIR}/mesfet.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mesfet.cir.res.gs ${CMAKE_CURRENT_BINARY_DIR}/mesfet.cir.res.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos1.cir ${CMAKE_CURRENT_BINARY_DIR}/mos1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/mos1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/mos1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos1_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/mos1_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos2.cir ${CMAKE_CURRENT_BINARY_DIR}/mos2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/mos2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/mos2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos2_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/mos2_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos3.cir ${CMAKE_CURRENT_BINARY_DIR}/mos3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/mos3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/mos3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/mos3_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/mos3_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv3.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv3.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv3.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv3_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv3_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv4.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv4.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv4.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv4.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv4.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv4_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv4_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv6.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv6.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv6.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv6.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv6.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv6_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv6_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv7.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv7.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv7.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv7.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv7.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv7_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv7_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv8.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv8.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv8.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv8.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv8.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/neuron_lv8_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/neuron_lv8_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semic_resistor.cir ${CMAKE_CURRENT_BINARY_DIR}/semic_resistor.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semic_resistor.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/semic_resistor.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/semic_resistor.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semic_resistor_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/semic_resistor_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semicap.cir ${CMAKE_CURRENT_BINARY_DIR}/semicap.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semicap.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/semicap.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/semicap.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semicap_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/semicap_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tempind.cir ${CMAKE_CURRENT_BINARY_DIR}/tempind.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tempind.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/tempind.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tempind.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tempind_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/tempind_modpar.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vdmos.cir ${CMAKE_CURRENT_BINARY_DIR}/vdmos.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vdmos.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/vdmos.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/vdmos.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/vdmos_modpar.cir ${CMAKE_CURRENT_BINARY_DIR}/vdmos_modpar.cir ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/Synapse_lv3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} Synapse_lv3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} Synapse_lv3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/Synapse_lv3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/Synapse_lv3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/Synapse_lv3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} Synapse_lv3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} Synapse_lv3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/Synapse_lv3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/Synapse_lv3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/b3soi.cir.sh COMMAND perl -I${XyceRegressionTestScripts} b3soi.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} b3soi.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/b3soi.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/b3soi.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/b3soi.cir.sh COMMAND perl -I${XyceRegressionTestScripts} b3soi.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} b3soi.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/b3soi.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/b3soi.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/bjt.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bjt.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bjt.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/bjt.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/bjt.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/bjt.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bjt.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bjt.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/bjt.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/bjt.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bsim3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bsim3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/bsim3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bsim3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bsim3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/bsim3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim4.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bsim4.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bsim4.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/bsim4.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim4.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim4.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bsim4.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bsim4.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/bsim4.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/bsim4.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/lumpedLine.cir.sh COMMAND perl -I${XyceRegressionTestScripts} lumpedLine.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} lumpedLine.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/lumpedLine.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/lumpedLine.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/lumpedLine.cir.sh COMMAND perl -I${XyceRegressionTestScripts} lumpedLine.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} lumpedLine.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/lumpedLine.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/lumpedLine.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir COMMAND $<TARGET_FILE:Xyce> mesfet.cir )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir PROPERTY LABELS "serial;parallel;nightly")
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir PROPERTIES FIXTURES_SETUP mesfet.cir)
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir.verify COMMAND ${XYCE_VERIFY} mesfet.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mesfet.cir.prn mesfet.cir.prn )
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir.verify PROPERTIES FIXTURES_REQUIRED mesfet.cir)
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir.verify PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> mesfet.cir )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir PROPERTY LABELS "serial;parallel;nightly")
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir PROPERTIES FIXTURES_SETUP mesfet.cir)
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir.verify COMMAND ${XYCE_VERIFY} mesfet.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mesfet.cir.prn mesfet.cir.prn )
  set_tests_properties(${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir.verify PROPERTIES FIXTURES_REQUIRED mesfet.cir)
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mesfet.cir.verify PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} mos1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} mos1.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mos1.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos1.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} mos1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} mos1.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mos1.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos1.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} mos2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} mos2.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mos2.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos2.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} mos2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} mos2.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mos2.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos2.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} mos3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} mos3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mos3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} mos3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} mos3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/mos3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/mos3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv3.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv3.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv3.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv3.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv4.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv4.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv4.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv4.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv4.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv4.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv4.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv4.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv4.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv4.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv6.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv6.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv6.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv6.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv6.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv6.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv6.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv6.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv6.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv6.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv7.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv7.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv7.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv7.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv7.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv7.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv7.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv7.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv7.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv7.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv8.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv8.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv8.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv8.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv8.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv8.cir.sh COMMAND perl -I${XyceRegressionTestScripts} neuron_lv8.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} neuron_lv8.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/neuron_lv8.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/neuron_lv8.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/semic_resistor.cir.sh COMMAND perl -I${XyceRegressionTestScripts} semic_resistor.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} semic_resistor.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/semic_resistor.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/semic_resistor.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/semic_resistor.cir.sh COMMAND perl -I${XyceRegressionTestScripts} semic_resistor.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} semic_resistor.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/semic_resistor.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/semic_resistor.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/semicap.cir.sh COMMAND perl -I${XyceRegressionTestScripts} semicap.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} semicap.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/semicap.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/semicap.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/semicap.cir.sh COMMAND perl -I${XyceRegressionTestScripts} semicap.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} semicap.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/semicap.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/semicap.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/tempind.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tempind.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tempind.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/tempind.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/tempind.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/tempind.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tempind.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tempind.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/tempind.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/tempind.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/vdmos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} vdmos.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} vdmos.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/vdmos.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/vdmos.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_647_SON/vdmos.cir.sh COMMAND perl -I${XyceRegressionTestScripts} vdmos.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} vdmos.cir ${OutputDataDir}/Certification_Tests/BUG_647_SON/vdmos.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_647_SON/vdmos.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
