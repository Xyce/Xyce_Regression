BUG 128 (http://tvrusso.sandia.gov/bugzilla/show_bug.cgi?id=128) involved
improper handling of the capacitor initial conditions.

In versions prior to Release 1.0.1 the IC=<voltage> keyword on the capacitor
instance line would cause the capacitor to have charge stored on it as if
the voltage drop across the capacitor were the IC value, but the circuit would
be in an inconsistant state.

With Release 1.0.1 this was changed.  If an IC is specified to a capacitor,
the code acts as if there is a battery (complete with branch current equatioN)
connected across the capacitor for the operating point.  This guarantees that
the capacitor voltage drop is exactly as specified, and makes the currents
in the circuit consistent with having that voltage maintained.

Running this netlist with Version 1.0.1 or later will show a discharging 
capacitor.  Prior versions will fail to compare properly with the .prn file
in this directory.

More comments on this bug are in the netlist.

COMMENTS ON RELEASE 1.1:

Changes in the defailt integration parameters have changed the character
of the exponential decay that Xyce produces!

I have created a file of "analytic" results generated by:
   awk '{print $1,$2,1.0*exp(-$2/(1000*.000001))}' < bug_128.cir.prn > analytic
and editing the header and footer to match the original.  This should match
the analytical result for the discharge of the RC circuit.

xyce_verify.pl now reports a 15% integrated error in the v(1) node.  The 
curves no longer match the analytic results with the default integrator 
parameters.

These integration errors are fixed by adding 
  .options timeint method=2 reltol=1e-3
  .options nonlin-tran reltol=1e-3
(i.e., resetting tolerances and integration method to something closer to the
 old defaults)

The specific bug addressed by issue 128, however, is still fixed because the
initial condition is properly handled, and the value at t=0 is 1.0

Summary:
  1) Run Xyce on the netlist here.
  2) Look at the value of v(1) at t=0.  It should be 1.0.

This should not be run in parallel, it is too small.