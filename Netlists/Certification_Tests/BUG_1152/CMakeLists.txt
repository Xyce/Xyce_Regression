# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/README ${CMAKE_CURRENT_BINARY_DIR}/README ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_1152.cir ${CMAKE_CURRENT_BINARY_DIR}/bug_1152.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_1152.cir.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/bug_1152.cir.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug_1152.cir.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_1152.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug_1152.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug_1152.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_1152.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug_1152.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_767b.cir ${CMAKE_CURRENT_BINARY_DIR}/bug_767b.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_767b.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bug_767b.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bug_767b.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_767b.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bug_767b.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bug_767b_nodupes.cir ${CMAKE_CURRENT_BINARY_DIR}/bug_767b_nodupes.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1152/bug_1152.cir.sh COMMAND bash bug_1152.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug_1152.cir ${OutputDataDir}/Certification_Tests/BUG_1152/bug_1152.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1152/bug_1152.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1152/bug_1152.cir.sh COMMAND bash bug_1152.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug_1152.cir ${OutputDataDir}/Certification_Tests/BUG_1152/bug_1152.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1152/bug_1152.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1152/bug_767b.cir.sh COMMAND bash bug_767b.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bug_767b.cir ${OutputDataDir}/Certification_Tests/BUG_1152/bug_767b.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1152/bug_767b.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_1152/bug_767b.cir.sh COMMAND bash bug_767b.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bug_767b.cir ${OutputDataDir}/Certification_Tests/BUG_1152/bug_767b.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_1152/bug_767b.cir.sh PROPERTY LABELS "serial;parallel;nightly")
endif()
