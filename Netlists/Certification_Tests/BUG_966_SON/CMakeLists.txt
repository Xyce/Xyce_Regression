# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY  tran.cir tran-multifile.cir tran-nooverwrite.cir tran.cir.sh tran-sens.cir tran-nosens.cir tran-sens-multifile.cir tran-sens-nooverwrite.cir tran-sens.cir.sh tran-homotopy.cir tran-nohomotopy.cir tran-homotopy-multifile.cir tran-homotopy-nooverwrite.cir tran-homotopy.cir.sh tran-sens-error.cir tran-sens-error.cir.sh tran-sens-error.cir.options tran-homotopy-error.cir tran-homotopy-error.cir.sh tran-homotopy-error.cir.options tags DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran-sens.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran-homotopy.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran-sens-error.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/tran-homotopy-error.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy-error.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-homotopy-error.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran-homotopy-error.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-homotopy-error.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy-error.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;sens;homotopy;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy-error.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-homotopy-error.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tran-homotopy-error.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-homotopy-error.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy-error.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;sens;homotopy;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-homotopy.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran-homotopy.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-homotopy.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;raw;sens;homotopy")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-homotopy.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tran-homotopy.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-homotopy.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-homotopy.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;raw;sens;homotopy")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens-error.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-sens-error.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran-sens-error.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-sens-error.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens-error.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;sens;homotopy;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens-error.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-sens-error.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tran-sens-error.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-sens-error.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens-error.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;sens;homotopy;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-sens.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran-sens.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-sens.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;raw;sens;homotopy")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran-sens.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tran-sens.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran-sens.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran-sens.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;raw;sens;homotopy")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} tran.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;raw;sens;homotopy")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran.cir.sh COMMAND perl -I${XyceRegressionTestScripts} tran.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} tran.cir ${OutputDataDir}/Certification_Tests/BUG_966_SON/tran.cir.prn )
  set_property(TEST ${TestNamePrefix}Certification_Tests/BUG_966_SON/tran.cir.sh PROPERTY LABELS "serial;nightly;parallel;output;raw;sens;homotopy")
endif()
