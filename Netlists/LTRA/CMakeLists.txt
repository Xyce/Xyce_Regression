# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra-rc.cir ${CMAKE_CURRENT_BINARY_DIR}/ltra-rc.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra-rc.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ltra-rc.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra1.cir ${CMAKE_CURRENT_BINARY_DIR}/ltra1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ltra1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra2.cir ${CMAKE_CURRENT_BINARY_DIR}/ltra2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ltra2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra3.cir ${CMAKE_CURRENT_BINARY_DIR}/ltra3.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra3.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ltra3.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra_step.cir ${CMAKE_CURRENT_BINARY_DIR}/ltra_step.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra_step.cir.res.gs ${CMAKE_CURRENT_BINARY_DIR}/ltra_step.cir.res.gs ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra_step.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ltra_step.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ltra_step.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra_LC_hb.cir ${CMAKE_CURRENT_BINARY_DIR}/ltra_LC_hb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra_LC_hb.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ltra_LC_hb.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ltra_LC_hb.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra_RLC_hb.cir ${CMAKE_CURRENT_BINARY_DIR}/ltra_RLC_hb.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ltra_RLC_hb.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ltra_RLC_hb.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ltra_RLC_hb.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/square-wave-gen-resistor-compact.cir ${CMAKE_CURRENT_BINARY_DIR}/square-wave-gen-resistor-compact.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/square-wave-gen-resistor-compact.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/square-wave-gen-resistor-compact.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/square-wave-gen-resistor.cir ${CMAKE_CURRENT_BINARY_DIR}/square-wave-gen-resistor.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/square-wave-gen-resistor.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/square-wave-gen-resistor.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorMessageTest.cir ${CMAKE_CURRENT_BINARY_DIR}/ErrorMessageTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorMessageTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ErrorMessageTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ErrorMessageTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorMessageTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ErrorMessageTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_model_parameters.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_model_parameters.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_model_parameters.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_model_parameters.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_model_parameters.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_model_parameters.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad_model_parameters.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_lc_line.cir ${CMAKE_CURRENT_BINARY_DIR}/zero_length_lc_line.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_lc_line.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/zero_length_lc_line.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/zero_length_lc_line.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_lc_line.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/zero_length_lc_line.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_rc_rg_line.cir ${CMAKE_CURRENT_BINARY_DIR}/zero_length_rc_rg_line.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_rlc_line.cir ${CMAKE_CURRENT_BINARY_DIR}/zero_length_rlc_line.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_rlc_line.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/zero_length_rlc_line.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/zero_length_rlc_line.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_rlc_line.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/zero_length_rlc_line.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ErrorMessageTest.cir.options ${CMAKE_CURRENT_BINARY_DIR}/ErrorMessageTest.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_model_parameters.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_model_parameters.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_lc_line.cir.options ${CMAKE_CURRENT_BINARY_DIR}/zero_length_lc_line.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/zero_length_rlc_line.cir.options ${CMAKE_CURRENT_BINARY_DIR}/zero_length_rlc_line.cir.options ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ErrorMessageTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorMessageTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorMessageTest.cir ${OutputDataDir}/LTRA/ErrorMessageTest.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ErrorMessageTest.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ErrorMessageTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ErrorMessageTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ErrorMessageTest.cir ${OutputDataDir}/LTRA/ErrorMessageTest.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ErrorMessageTest.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/bad_model_parameters.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_model_parameters.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_model_parameters.cir ${OutputDataDir}/LTRA/bad_model_parameters.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/bad_model_parameters.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/bad_model_parameters.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_model_parameters.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_model_parameters.cir ${OutputDataDir}/LTRA/bad_model_parameters.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/bad_model_parameters.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}LTRA/ltra-rc.cir COMMAND $<TARGET_FILE:Xyce> ltra-rc.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra-rc.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
  set_tests_properties(${TestNamePrefix}LTRA/ltra-rc.cir PROPERTIES FIXTURES_SETUP ltra-rc.cir)
  add_test(NAME ${TestNamePrefix}LTRA/ltra-rc.cir.verify COMMAND ${XYCE_VERIFY} ltra-rc.cir ${OutputDataDir}/LTRA/ltra-rc.cir.prn ltra-rc.cir.prn )
  set_tests_properties(${TestNamePrefix}LTRA/ltra-rc.cir.verify PROPERTIES FIXTURES_REQUIRED ltra-rc.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}LTRA/ltra-rc.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> ltra-rc.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra-rc.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
set_tests_properties(${TestNamePrefix}LTRA/ltra-rc.cir PROPERTIES FIXTURES_SETUP ltra-rc.cir)
add_test(NAME ${TestNamePrefix}LTRA/ltra-rc.cir.verify COMMAND ${XYCE_VERIFY} ltra-rc.cir ${OutputDataDir}/LTRA/ltra-rc.cir.prn ltra-rc.cir.prn )
set_tests_properties(${TestNamePrefix}LTRA/ltra-rc.cir.verify PROPERTIES FIXTURES_REQUIRED ltra-rc.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}LTRA/ltra1.cir COMMAND $<TARGET_FILE:Xyce> ltra1.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra1.cir PROPERTY LABELS "ltra;nightly;serial;bjtlev1;parallel")
  set_tests_properties(${TestNamePrefix}LTRA/ltra1.cir PROPERTIES FIXTURES_SETUP ltra1.cir)
  add_test(NAME ${TestNamePrefix}LTRA/ltra1.cir.verify COMMAND ${XYCE_VERIFY} ltra1.cir ${OutputDataDir}/LTRA/ltra1.cir.prn ltra1.cir.prn )
  set_tests_properties(${TestNamePrefix}LTRA/ltra1.cir.verify PROPERTIES FIXTURES_REQUIRED ltra1.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}LTRA/ltra1.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> ltra1.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra1.cir PROPERTY LABELS "ltra;nightly;serial;bjtlev1;parallel")
set_tests_properties(${TestNamePrefix}LTRA/ltra1.cir PROPERTIES FIXTURES_SETUP ltra1.cir)
add_test(NAME ${TestNamePrefix}LTRA/ltra1.cir.verify COMMAND ${XYCE_VERIFY} ltra1.cir ${OutputDataDir}/LTRA/ltra1.cir.prn ltra1.cir.prn )
set_tests_properties(${TestNamePrefix}LTRA/ltra1.cir.verify PROPERTIES FIXTURES_REQUIRED ltra1.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}LTRA/ltra2.cir COMMAND $<TARGET_FILE:Xyce> ltra2.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra2.cir PROPERTY LABELS "ltra;nightly;serial;bjtlev1;parallel")
  set_tests_properties(${TestNamePrefix}LTRA/ltra2.cir PROPERTIES FIXTURES_SETUP ltra2.cir)
  add_test(NAME ${TestNamePrefix}LTRA/ltra2.cir.verify COMMAND ${XYCE_VERIFY} ltra2.cir ${OutputDataDir}/LTRA/ltra2.cir.prn ltra2.cir.prn )
  set_tests_properties(${TestNamePrefix}LTRA/ltra2.cir.verify PROPERTIES FIXTURES_REQUIRED ltra2.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}LTRA/ltra2.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> ltra2.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra2.cir PROPERTY LABELS "ltra;nightly;serial;bjtlev1;parallel")
set_tests_properties(${TestNamePrefix}LTRA/ltra2.cir PROPERTIES FIXTURES_SETUP ltra2.cir)
add_test(NAME ${TestNamePrefix}LTRA/ltra2.cir.verify COMMAND ${XYCE_VERIFY} ltra2.cir ${OutputDataDir}/LTRA/ltra2.cir.prn ltra2.cir.prn )
set_tests_properties(${TestNamePrefix}LTRA/ltra2.cir.verify PROPERTIES FIXTURES_REQUIRED ltra2.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}LTRA/ltra3.cir COMMAND $<TARGET_FILE:Xyce> ltra3.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra3.cir PROPERTY LABELS "ltra;nightly;serial;bjtlev1;parallel")
  set_tests_properties(${TestNamePrefix}LTRA/ltra3.cir PROPERTIES FIXTURES_SETUP ltra3.cir)
  add_test(NAME ${TestNamePrefix}LTRA/ltra3.cir.verify COMMAND ${XYCE_VERIFY} ltra3.cir ${OutputDataDir}/LTRA/ltra3.cir.prn ltra3.cir.prn )
  set_tests_properties(${TestNamePrefix}LTRA/ltra3.cir.verify PROPERTIES FIXTURES_REQUIRED ltra3.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}LTRA/ltra3.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> ltra3.cir )
  set_property(TEST ${TestNamePrefix}LTRA/ltra3.cir PROPERTY LABELS "ltra;nightly;serial;bjtlev1;parallel")
set_tests_properties(${TestNamePrefix}LTRA/ltra3.cir PROPERTIES FIXTURES_SETUP ltra3.cir)
add_test(NAME ${TestNamePrefix}LTRA/ltra3.cir.verify COMMAND ${XYCE_VERIFY} ltra3.cir ${OutputDataDir}/LTRA/ltra3.cir.prn ltra3.cir.prn )
set_tests_properties(${TestNamePrefix}LTRA/ltra3.cir.verify PROPERTIES FIXTURES_REQUIRED ltra3.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ltra_LC_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ltra_LC_hb.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ltra_LC_hb.cir ${OutputDataDir}/LTRA/ltra_LC_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ltra_LC_hb.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;hb;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ltra_LC_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ltra_LC_hb.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ltra_LC_hb.cir ${OutputDataDir}/LTRA/ltra_LC_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ltra_LC_hb.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;hb;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ltra_RLC_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ltra_RLC_hb.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ltra_RLC_hb.cir ${OutputDataDir}/LTRA/ltra_RLC_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ltra_RLC_hb.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;hb;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ltra_RLC_hb.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ltra_RLC_hb.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ltra_RLC_hb.cir ${OutputDataDir}/LTRA/ltra_RLC_hb.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ltra_RLC_hb.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;hb;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ltra_step.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ltra_step.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ltra_step.cir ${OutputDataDir}/LTRA/ltra_step.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ltra_step.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/ltra_step.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ltra_step.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ltra_step.cir ${OutputDataDir}/LTRA/ltra_step.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/ltra_step.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir COMMAND $<TARGET_FILE:Xyce> square-wave-gen-resistor-compact.cir )
  set_property(TEST ${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
  set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir PROPERTIES FIXTURES_SETUP square-wave-gen-resistor-compact.cir)
  add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir.verify COMMAND ${XYCE_VERIFY} square-wave-gen-resistor-compact.cir ${OutputDataDir}/LTRA/square-wave-gen-resistor-compact.cir.prn square-wave-gen-resistor-compact.cir.prn )
  set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir.verify PROPERTIES FIXTURES_REQUIRED square-wave-gen-resistor-compact.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> square-wave-gen-resistor-compact.cir )
  set_property(TEST ${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir PROPERTIES FIXTURES_SETUP square-wave-gen-resistor-compact.cir)
add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir.verify COMMAND ${XYCE_VERIFY} square-wave-gen-resistor-compact.cir ${OutputDataDir}/LTRA/square-wave-gen-resistor-compact.cir.prn square-wave-gen-resistor-compact.cir.prn )
set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor-compact.cir.verify PROPERTIES FIXTURES_REQUIRED square-wave-gen-resistor-compact.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor.cir COMMAND $<TARGET_FILE:Xyce> square-wave-gen-resistor.cir )
  set_property(TEST ${TestNamePrefix}LTRA/square-wave-gen-resistor.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
  set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor.cir PROPERTIES FIXTURES_SETUP square-wave-gen-resistor.cir)
  add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor.cir.verify COMMAND ${XYCE_VERIFY} square-wave-gen-resistor.cir ${OutputDataDir}/LTRA/square-wave-gen-resistor.cir.prn square-wave-gen-resistor.cir.prn )
  set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor.cir.verify PROPERTIES FIXTURES_REQUIRED square-wave-gen-resistor.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> square-wave-gen-resistor.cir )
  set_property(TEST ${TestNamePrefix}LTRA/square-wave-gen-resistor.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor.cir PROPERTIES FIXTURES_SETUP square-wave-gen-resistor.cir)
add_test(NAME ${TestNamePrefix}LTRA/square-wave-gen-resistor.cir.verify COMMAND ${XYCE_VERIFY} square-wave-gen-resistor.cir ${OutputDataDir}/LTRA/square-wave-gen-resistor.cir.prn square-wave-gen-resistor.cir.prn )
set_tests_properties(${TestNamePrefix}LTRA/square-wave-gen-resistor.cir.verify PROPERTIES FIXTURES_REQUIRED square-wave-gen-resistor.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/zero_length_lc_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} zero_length_lc_line.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} zero_length_lc_line.cir ${OutputDataDir}/LTRA/zero_length_lc_line.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/zero_length_lc_line.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/zero_length_lc_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} zero_length_lc_line.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} zero_length_lc_line.cir ${OutputDataDir}/LTRA/zero_length_lc_line.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/zero_length_lc_line.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir COMMAND $<TARGET_FILE:Xyce> zero_length_rc_rg_line.cir )
  set_property(TEST ${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
  set_tests_properties(${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir PROPERTIES FIXTURES_SETUP zero_length_rc_rg_line.cir)
  add_test(NAME ${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir.verify COMMAND ${XYCE_VERIFY} zero_length_rc_rg_line.cir ${OutputDataDir}/LTRA/zero_length_rc_rg_line.cir.prn zero_length_rc_rg_line.cir.prn )
  set_tests_properties(${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir.verify PROPERTIES FIXTURES_REQUIRED zero_length_rc_rg_line.cir)
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> zero_length_rc_rg_line.cir )
  set_property(TEST ${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir PROPERTY LABELS "ltra;nightly;serial;parallel")
set_tests_properties(${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir PROPERTIES FIXTURES_SETUP zero_length_rc_rg_line.cir)
add_test(NAME ${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir.verify COMMAND ${XYCE_VERIFY} zero_length_rc_rg_line.cir ${OutputDataDir}/LTRA/zero_length_rc_rg_line.cir.prn zero_length_rc_rg_line.cir.prn )
set_tests_properties(${TestNamePrefix}LTRA/zero_length_rc_rg_line.cir.verify PROPERTIES FIXTURES_REQUIRED zero_length_rc_rg_line.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/zero_length_rlc_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} zero_length_rlc_line.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} zero_length_rlc_line.cir ${OutputDataDir}/LTRA/zero_length_rlc_line.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/zero_length_rlc_line.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}LTRA/zero_length_rlc_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} zero_length_rlc_line.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} zero_length_rlc_line.cir ${OutputDataDir}/LTRA/zero_length_rlc_line.cir.prn )
  set_property(TEST ${TestNamePrefix}LTRA/zero_length_rlc_line.cir.sh PROPERTY LABELS "ltra;nightly;serial;parallel;errorexit")
endif()
