# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cap.cir ${CMAKE_CURRENT_BINARY_DIR}/cap.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cap.cir.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/cap.cir.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/cap.cir.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cap.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/cap.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/cap.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cap.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/cap.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/capInner.cir ${CMAKE_CURRENT_BINARY_DIR}/capInner.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/capTop.cir ${CMAKE_CURRENT_BINARY_DIR}/capTop.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/exclude ${CMAKE_CURRENT_BINARY_DIR}/exclude ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resInner.cir ${CMAKE_CURRENT_BINARY_DIR}/resInner.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resTop.cir ${CMAKE_CURRENT_BINARY_DIR}/resTop.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resTop.cir.prn.gs.pl ${CMAKE_CURRENT_BINARY_DIR}/resTop.cir.prn.gs.pl ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/resTop.cir.prn.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/resTop.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/resTop.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sixNode.cir ${CMAKE_CURRENT_BINARY_DIR}/sixNode.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sixNode.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/sixNode.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/sixNode.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sixNode.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/sixNode.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sixNode_in.cir ${CMAKE_CURRENT_BINARY_DIR}/sixNode_in.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/sixNode_top.cir ${CMAKE_CURRENT_BINARY_DIR}/sixNode_top.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}POWERNODE/cap.cir.sh COMMAND perl -I${XyceRegressionTestScripts} cap.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} cap.cir ${OutputDataDir}/POWERNODE/cap.cir.prn )
  set_property(TEST ${TestNamePrefix}POWERNODE/cap.cir.sh PROPERTY LABELS "serial;nightly;twolevel")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}POWERNODE/resTop.cir COMMAND $<TARGET_FILE:Xyce> resTop.cir )
  set_property(TEST ${TestNamePrefix}POWERNODE/resTop.cir PROPERTY LABELS "serial;nightly;twolevel")
  set_tests_properties(${TestNamePrefix}POWERNODE/resTop.cir PROPERTIES FIXTURES_SETUP resTop.cir)
  add_test(NAME ${TestNamePrefix}POWERNODE/resTop.cir.gen_gs COMMAND perl resTop.cir.prn.gs.pl resTop.cir.prn)
  set_tests_properties(${TestNamePrefix}POWERNODE/resTop.cir.gen_gs PROPERTIES FIXTURES_REQUIRED resTop.cir)
  add_test(NAME ${TestNamePrefix}POWERNODE/resTop.cir.verify COMMAND ${XYCE_VERIFY} resTop.cir resTop.cir.prn.gs resTop.cir.prn )
  set_tests_properties(${TestNamePrefix}POWERNODE/resTop.cir.verify PROPERTIES FIXTURES_REQUIRED resTop.cir)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}POWERNODE/sixNode.cir.sh COMMAND perl -I${XyceRegressionTestScripts} sixNode.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} sixNode.cir ${OutputDataDir}/POWERNODE/sixNode.cir.prn )
  set_property(TEST ${TestNamePrefix}POWERNODE/sixNode.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;bjtlev1;homotopy;twolevel")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}POWERNODE/sixNode.cir.sh COMMAND perl -I${XyceRegressionTestScripts} sixNode.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} sixNode.cir ${OutputDataDir}/POWERNODE/sixNode.cir.prn )
  set_property(TEST ${TestNamePrefix}POWERNODE/sixNode.cir.sh PROPERTY LABELS "serial;nightly;parallel;analytic;bjtlev1;homotopy;twolevel")
endif()
