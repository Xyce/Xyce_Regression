# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/BinSizeTest.cir ${CMAKE_CURRENT_BINARY_DIR}/BinSizeTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/BinSizeTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/BinSizeTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/BinSizeTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/BinSizeTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/BinSizeTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DefaultValTest.cir ${CMAKE_CURRENT_BINARY_DIR}/DefaultValTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DefaultValTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/DefaultValTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/DefaultValTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/DefaultValTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/DefaultValTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ENOBTest.cir ${CMAKE_CURRENT_BINARY_DIR}/ENOBTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ENOBTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/ENOBTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/ENOBTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ENOBTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/ENOBTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/ENOBTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/ENOBTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindTest.cir ${CMAKE_CURRENT_BINARY_DIR}/FindTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/FindTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/FindTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/FindTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/FindTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MiscOps.cir ${CMAKE_CURRENT_BINARY_DIR}/MiscOps.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/MiscOps.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/MiscOps.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/MiscOps.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/multiterminal_devices.cir ${CMAKE_CURRENT_BINARY_DIR}/multiterminal_devices.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/multiterminal_devices.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/multiterminal_devices.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/multiterminal_devices.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/OutputTimePoints.cir ${CMAKE_CURRENT_BINARY_DIR}/OutputTimePoints.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/OutputTimePoints.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/OutputTimePoints.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/OutputTimePoints.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/OutputTimePointsGSfile ${CMAKE_CURRENT_BINARY_DIR}/OutputTimePointsGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SFDRTest.cir ${CMAKE_CURRENT_BINARY_DIR}/SFDRTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SFDRTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/SFDRTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/SFDRTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SFDRTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/SFDRTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SFDRTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/SFDRTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNDRTest.cir ${CMAKE_CURRENT_BINARY_DIR}/SNDRTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNDRTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/SNDRTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/SNDRTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNDRTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/SNDRTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNDRTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/SNDRTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNRTest.cir ${CMAKE_CURRENT_BINARY_DIR}/SNRTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNRTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/SNRTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/SNRTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNRTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/SNRTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/SNRTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/SNRTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/THDTest.cir ${CMAKE_CURRENT_BINARY_DIR}/THDTest.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/THDTest.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/THDTest.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/THDTest.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/THDTest.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/THDTest.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/THDTestGSfile ${CMAKE_CURRENT_BINARY_DIR}/THDTestGSfile ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line1.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line1.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line1.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line1.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line1.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line1.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line1.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line1.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line2.cir ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/bad_dot_measure_line2.cir.options ${CMAKE_CURRENT_BINARY_DIR}/bad_dot_measure_line2.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missing_fft_line.cir ${CMAKE_CURRENT_BINARY_DIR}/missing_fft_line.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missing_fft_line.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/missing_fft_line.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/missing_fft_line.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missing_fft_line.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/missing_fft_line.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/missing_fft_line.cir.options ${CMAKE_CURRENT_BINARY_DIR}/missing_fft_line.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/no_matching_fft_line.cir ${CMAKE_CURRENT_BINARY_DIR}/no_matching_fft_line.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/no_matching_fft_line.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/no_matching_fft_line.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/no_matching_fft_line.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/no_matching_fft_line.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/no_matching_fft_line.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/no_matching_fft_line.cir.options ${CMAKE_CURRENT_BINARY_DIR}/no_matching_fft_line.cir.options ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_fft_measure_types.cir ${CMAKE_CURRENT_BINARY_DIR}/unsupported_fft_measure_types.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_fft_measure_types.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/unsupported_fft_measure_types.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/unsupported_fft_measure_types.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_fft_measure_types.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/unsupported_fft_measure_types.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/unsupported_fft_measure_types.cir.options ${CMAKE_CURRENT_BINARY_DIR}/unsupported_fft_measure_types.cir.options ONLY_IF_DIFFERENT)
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/unsupported_fft_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_fft_measure_types.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_fft_measure_types.cir ${OutputDataDir}/MEASURE_FFT/unsupported_fft_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/unsupported_fft_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/unsupported_fft_measure_types.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/unsupported_fft_measure_types.cir.sh COMMAND perl -I${XyceRegressionTestScripts} unsupported_fft_measure_types.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} unsupported_fft_measure_types.cir ${OutputDataDir}/MEASURE_FFT/unsupported_fft_measure_types.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/unsupported_fft_measure_types.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/unsupported_fft_measure_types.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/FindTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} FindTest.cir ${OutputDataDir}/MEASURE_FFT/FindTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/FindTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/FindTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} FindTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} FindTest.cir ${OutputDataDir}/MEASURE_FFT/FindTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/FindTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/missing_fft_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} missing_fft_line.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} missing_fft_line.cir ${OutputDataDir}/MEASURE_FFT/missing_fft_line.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/missing_fft_line.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/missing_fft_line.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/missing_fft_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} missing_fft_line.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} missing_fft_line.cir ${OutputDataDir}/MEASURE_FFT/missing_fft_line.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/missing_fft_line.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/missing_fft_line.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/OutputTimePoints.cir.sh COMMAND perl -I${XyceRegressionTestScripts} OutputTimePoints.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} OutputTimePoints.cir ${OutputDataDir}/MEASURE_FFT/OutputTimePoints.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/OutputTimePoints.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/OutputTimePoints.cir.sh COMMAND perl -I${XyceRegressionTestScripts} OutputTimePoints.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} OutputTimePoints.cir ${OutputDataDir}/MEASURE_FFT/OutputTimePoints.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/OutputTimePoints.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/SFDRTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} SFDRTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} SFDRTest.cir ${OutputDataDir}/MEASURE_FFT/SFDRTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/SFDRTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/SFDRTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} SFDRTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} SFDRTest.cir ${OutputDataDir}/MEASURE_FFT/SFDRTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/SFDRTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/BinSizeTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} BinSizeTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} BinSizeTest.cir ${OutputDataDir}/MEASURE_FFT/BinSizeTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/BinSizeTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/BinSizeTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} BinSizeTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} BinSizeTest.cir ${OutputDataDir}/MEASURE_FFT/BinSizeTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/BinSizeTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_dot_measure_line1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_dot_measure_line1.cir ${OutputDataDir}/MEASURE_FFT/bad_dot_measure_line1.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line1.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line1.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line1.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_dot_measure_line1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_dot_measure_line1.cir ${OutputDataDir}/MEASURE_FFT/bad_dot_measure_line1.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line1.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line1.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/DefaultValTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DefaultValTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} DefaultValTest.cir ${OutputDataDir}/MEASURE_FFT/DefaultValTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/DefaultValTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/DefaultValTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} DefaultValTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} DefaultValTest.cir ${OutputDataDir}/MEASURE_FFT/DefaultValTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/DefaultValTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/SNDRTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} SNDRTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} SNDRTest.cir ${OutputDataDir}/MEASURE_FFT/SNDRTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/SNDRTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/SNDRTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} SNDRTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} SNDRTest.cir ${OutputDataDir}/MEASURE_FFT/SNDRTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/SNDRTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
add_subdirectory(STEP)
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/ENOBTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ENOBTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} ENOBTest.cir ${OutputDataDir}/MEASURE_FFT/ENOBTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/ENOBTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/ENOBTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} ENOBTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} ENOBTest.cir ${OutputDataDir}/MEASURE_FFT/ENOBTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/ENOBTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/multiterminal_devices.cir.sh COMMAND perl -I${XyceRegressionTestScripts} multiterminal_devices.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} multiterminal_devices.cir ${OutputDataDir}/MEASURE_FFT/multiterminal_devices.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/multiterminal_devices.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/multiterminal_devices.cir.sh COMMAND perl -I${XyceRegressionTestScripts} multiterminal_devices.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} multiterminal_devices.cir ${OutputDataDir}/MEASURE_FFT/multiterminal_devices.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/multiterminal_devices.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/MiscOps.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MiscOps.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} MiscOps.cir ${OutputDataDir}/MEASURE_FFT/MiscOps.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/MiscOps.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/MiscOps.cir.sh COMMAND perl -I${XyceRegressionTestScripts} MiscOps.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} MiscOps.cir ${OutputDataDir}/MEASURE_FFT/MiscOps.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/MiscOps.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_dot_measure_line2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} bad_dot_measure_line2.cir ${OutputDataDir}/MEASURE_FFT/bad_dot_measure_line2.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line2.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line2.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} bad_dot_measure_line2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} bad_dot_measure_line2.cir ${OutputDataDir}/MEASURE_FFT/bad_dot_measure_line2.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line2.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/bad_dot_measure_line2.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/THDTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} THDTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} THDTest.cir ${OutputDataDir}/MEASURE_FFT/THDTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/THDTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/THDTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} THDTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} THDTest.cir ${OutputDataDir}/MEASURE_FFT/THDTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/THDTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/no_matching_fft_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} no_matching_fft_line.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} no_matching_fft_line.cir ${OutputDataDir}/MEASURE_FFT/no_matching_fft_line.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/no_matching_fft_line.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/no_matching_fft_line.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/no_matching_fft_line.cir.sh COMMAND perl -I${XyceRegressionTestScripts} no_matching_fft_line.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} no_matching_fft_line.cir ${OutputDataDir}/MEASURE_FFT/no_matching_fft_line.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/no_matching_fft_line.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;errorexit;required:fft")
  set_tests_properties(${TestNamePrefix}MEASURE_FFT/no_matching_fft_line.cir.sh PROPERTIES TIMEOUT 30)
endif()
if( (NOT Xyce_PARALLEL_MPI) AND  Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/SNRTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} SNRTest.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} SNRTest.cir ${OutputDataDir}/MEASURE_FFT/SNRTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/SNRTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
if( Xyce_PARALLEL_MPI  AND Xyce_USE_FFT AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}MEASURE_FFT/SNRTest.cir.sh COMMAND perl -I${XyceRegressionTestScripts} SNRTest.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} SNRTest.cir ${OutputDataDir}/MEASURE_FFT/SNRTest.cir.prn )
  set_property(TEST ${TestNamePrefix}MEASURE_FFT/SNRTest.cir.sh PROPERTY LABELS "nightly;serial;parallel;measure;fft;valgrind;required:fft")
endif()
