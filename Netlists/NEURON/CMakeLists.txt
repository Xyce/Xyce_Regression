# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY  CG_Syn_TEST_1Pre_1Post_01.cir CG_Syn_TEST_1Pre_1Post_01.cir.tags CS_Cable.cir CS_Patch.cir Cable_HH_Membrane.cir Cable_Passive_Membrane.cir Cable_UserDefined.cir Default_Cable.cir HH_Cable.cir HH_Patch.cir HHgating-level1.cir HHgating-level1.cir.gs.pl HHgating-level1.cir.sh Neuron9.cir PointNeuron.cir README Synapse3Test.cir SynapseTest1.cir dlambda.cir exclude passivePatch-level1.cir passivePatch-level1.cir.sh passivePatch-level1.gs.pl passivePatch-level6.cir passivePatch-level6.cir.sh passivePatch-level6.gs.pl rallpack1-1000level1s.cir rallpack1-ud.cir rallpack1.cir rallpack2-level1neuron.cir rallpack2.cir rallpack2_ref_branch.0 rallpack2_ref_branch.x rallpack3-1000level1s.cir rallpack3-1000level1s.cir.tags rallpack3.cir rallpack3.cir.tags synapseDCOP-level4.cir synapticCurrent-level3.cir synapticCurrent-level3.cir.sh synapticCurrent-level3.gs.pl synapticCurrent-level4.cir synapticCurrent-level4.cir.sh synapticCurrent-level4.gs.pl tags DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/HHgating-level1.cir.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/HHgating-level1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/passivePatch-level1.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/passivePatch-level1.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/passivePatch-level6.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/passivePatch-level6.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/synapticCurrent-level3.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/synapticCurrent-level3.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/synapticCurrent-level4.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/synapticCurrent-level4.gs.pl PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir COMMAND $<TARGET_FILE:Xyce> CG_Syn_TEST_1Pre_1Post_01.cir )
  set_property(TEST ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir PROPERTY LABELS "serial;parallel;nightly;notmorethan4procs;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir PROPERTIES FIXTURES_SETUP CG_Syn_TEST_1Pre_1Post_01.cir)
  add_test(NAME ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.verify COMMAND ${XYCE_VERIFY} CG_Syn_TEST_1Pre_1Post_01.cir ${OutputDataDir}/NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.prn CG_Syn_TEST_1Pre_1Post_01.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.verify PROPERTIES FIXTURES_REQUIRED CG_Syn_TEST_1Pre_1Post_01.cir)
  set_property(TEST ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.verify PROPERTY LABELS "serial;parallel;nightly;notmorethan4procs;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> CG_Syn_TEST_1Pre_1Post_01.cir )
  set_property(TEST ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir PROPERTY LABELS "serial;parallel;nightly;notmorethan4procs;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir PROPERTIES FIXTURES_SETUP CG_Syn_TEST_1Pre_1Post_01.cir)
  add_test(NAME ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.verify COMMAND ${XYCE_VERIFY} CG_Syn_TEST_1Pre_1Post_01.cir ${OutputDataDir}/NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.prn CG_Syn_TEST_1Pre_1Post_01.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.verify PROPERTIES FIXTURES_REQUIRED CG_Syn_TEST_1Pre_1Post_01.cir)
  set_property(TEST ${TestNamePrefix}NEURON/CG_Syn_TEST_1Pre_1Post_01.cir.verify PROPERTY LABELS "serial;parallel;nightly;notmorethan4procs;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/CS_Cable.cir COMMAND $<TARGET_FILE:Xyce> CS_Cable.cir )
  set_property(TEST ${TestNamePrefix}NEURON/CS_Cable.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/CS_Cable.cir PROPERTIES FIXTURES_SETUP CS_Cable.cir)
  add_test(NAME ${TestNamePrefix}NEURON/CS_Cable.cir.verify COMMAND ${XYCE_VERIFY} CS_Cable.cir ${OutputDataDir}/NEURON/CS_Cable.cir.prn CS_Cable.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/CS_Cable.cir.verify PROPERTIES FIXTURES_REQUIRED CS_Cable.cir)
  set_property(TEST ${TestNamePrefix}NEURON/CS_Cable.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/CS_Cable.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> CS_Cable.cir )
  set_property(TEST ${TestNamePrefix}NEURON/CS_Cable.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/CS_Cable.cir PROPERTIES FIXTURES_SETUP CS_Cable.cir)
  add_test(NAME ${TestNamePrefix}NEURON/CS_Cable.cir.verify COMMAND ${XYCE_VERIFY} CS_Cable.cir ${OutputDataDir}/NEURON/CS_Cable.cir.prn CS_Cable.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/CS_Cable.cir.verify PROPERTIES FIXTURES_REQUIRED CS_Cable.cir)
  set_property(TEST ${TestNamePrefix}NEURON/CS_Cable.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/CS_Patch.cir COMMAND $<TARGET_FILE:Xyce> CS_Patch.cir )
  set_property(TEST ${TestNamePrefix}NEURON/CS_Patch.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/CS_Patch.cir PROPERTIES FIXTURES_SETUP CS_Patch.cir)
  add_test(NAME ${TestNamePrefix}NEURON/CS_Patch.cir.verify COMMAND ${XYCE_VERIFY} CS_Patch.cir ${OutputDataDir}/NEURON/CS_Patch.cir.prn CS_Patch.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/CS_Patch.cir.verify PROPERTIES FIXTURES_REQUIRED CS_Patch.cir)
  set_property(TEST ${TestNamePrefix}NEURON/CS_Patch.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/CS_Patch.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> CS_Patch.cir )
  set_property(TEST ${TestNamePrefix}NEURON/CS_Patch.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/CS_Patch.cir PROPERTIES FIXTURES_SETUP CS_Patch.cir)
  add_test(NAME ${TestNamePrefix}NEURON/CS_Patch.cir.verify COMMAND ${XYCE_VERIFY} CS_Patch.cir ${OutputDataDir}/NEURON/CS_Patch.cir.prn CS_Patch.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/CS_Patch.cir.verify PROPERTIES FIXTURES_REQUIRED CS_Patch.cir)
  set_property(TEST ${TestNamePrefix}NEURON/CS_Patch.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/Default_Cable.cir COMMAND $<TARGET_FILE:Xyce> Default_Cable.cir )
  set_property(TEST ${TestNamePrefix}NEURON/Default_Cable.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/Default_Cable.cir PROPERTIES FIXTURES_SETUP Default_Cable.cir)
  add_test(NAME ${TestNamePrefix}NEURON/Default_Cable.cir.verify COMMAND ${XYCE_VERIFY} Default_Cable.cir ${OutputDataDir}/NEURON/Default_Cable.cir.prn Default_Cable.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/Default_Cable.cir.verify PROPERTIES FIXTURES_REQUIRED Default_Cable.cir)
  set_property(TEST ${TestNamePrefix}NEURON/Default_Cable.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/Default_Cable.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> Default_Cable.cir )
  set_property(TEST ${TestNamePrefix}NEURON/Default_Cable.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/Default_Cable.cir PROPERTIES FIXTURES_SETUP Default_Cable.cir)
  add_test(NAME ${TestNamePrefix}NEURON/Default_Cable.cir.verify COMMAND ${XYCE_VERIFY} Default_Cable.cir ${OutputDataDir}/NEURON/Default_Cable.cir.prn Default_Cable.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/Default_Cable.cir.verify PROPERTIES FIXTURES_REQUIRED Default_Cable.cir)
  set_property(TEST ${TestNamePrefix}NEURON/Default_Cable.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/HH_Cable.cir COMMAND $<TARGET_FILE:Xyce> HH_Cable.cir )
  set_property(TEST ${TestNamePrefix}NEURON/HH_Cable.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/HH_Cable.cir PROPERTIES FIXTURES_SETUP HH_Cable.cir)
  add_test(NAME ${TestNamePrefix}NEURON/HH_Cable.cir.verify COMMAND ${XYCE_VERIFY} HH_Cable.cir ${OutputDataDir}/NEURON/HH_Cable.cir.prn HH_Cable.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/HH_Cable.cir.verify PROPERTIES FIXTURES_REQUIRED HH_Cable.cir)
  set_property(TEST ${TestNamePrefix}NEURON/HH_Cable.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/HH_Cable.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> HH_Cable.cir )
  set_property(TEST ${TestNamePrefix}NEURON/HH_Cable.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/HH_Cable.cir PROPERTIES FIXTURES_SETUP HH_Cable.cir)
  add_test(NAME ${TestNamePrefix}NEURON/HH_Cable.cir.verify COMMAND ${XYCE_VERIFY} HH_Cable.cir ${OutputDataDir}/NEURON/HH_Cable.cir.prn HH_Cable.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/HH_Cable.cir.verify PROPERTIES FIXTURES_REQUIRED HH_Cable.cir)
  set_property(TEST ${TestNamePrefix}NEURON/HH_Cable.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/HH_Patch.cir COMMAND $<TARGET_FILE:Xyce> HH_Patch.cir )
  set_property(TEST ${TestNamePrefix}NEURON/HH_Patch.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/HH_Patch.cir PROPERTIES FIXTURES_SETUP HH_Patch.cir)
  add_test(NAME ${TestNamePrefix}NEURON/HH_Patch.cir.verify COMMAND ${XYCE_VERIFY} HH_Patch.cir ${OutputDataDir}/NEURON/HH_Patch.cir.prn HH_Patch.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/HH_Patch.cir.verify PROPERTIES FIXTURES_REQUIRED HH_Patch.cir)
  set_property(TEST ${TestNamePrefix}NEURON/HH_Patch.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/HH_Patch.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> HH_Patch.cir )
  set_property(TEST ${TestNamePrefix}NEURON/HH_Patch.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/HH_Patch.cir PROPERTIES FIXTURES_SETUP HH_Patch.cir)
  add_test(NAME ${TestNamePrefix}NEURON/HH_Patch.cir.verify COMMAND ${XYCE_VERIFY} HH_Patch.cir ${OutputDataDir}/NEURON/HH_Patch.cir.prn HH_Patch.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/HH_Patch.cir.verify PROPERTIES FIXTURES_REQUIRED HH_Patch.cir)
  set_property(TEST ${TestNamePrefix}NEURON/HH_Patch.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/HHgating-level1.cir.sh COMMAND bash HHgating-level1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} HHgating-level1.cir ${OutputDataDir}/NEURON/HHgating-level1.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/HHgating-level1.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/HHgating-level1.cir.sh COMMAND bash HHgating-level1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} HHgating-level1.cir ${OutputDataDir}/NEURON/HHgating-level1.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/HHgating-level1.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/Neuron9.cir COMMAND $<TARGET_FILE:Xyce> Neuron9.cir )
  set_property(TEST ${TestNamePrefix}NEURON/Neuron9.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/Neuron9.cir PROPERTIES FIXTURES_SETUP Neuron9.cir)
  add_test(NAME ${TestNamePrefix}NEURON/Neuron9.cir.verify COMMAND ${XYCE_VERIFY} Neuron9.cir ${OutputDataDir}/NEURON/Neuron9.cir.prn Neuron9.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/Neuron9.cir.verify PROPERTIES FIXTURES_REQUIRED Neuron9.cir)
  set_property(TEST ${TestNamePrefix}NEURON/Neuron9.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/Neuron9.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> Neuron9.cir )
  set_property(TEST ${TestNamePrefix}NEURON/Neuron9.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/Neuron9.cir PROPERTIES FIXTURES_SETUP Neuron9.cir)
  add_test(NAME ${TestNamePrefix}NEURON/Neuron9.cir.verify COMMAND ${XYCE_VERIFY} Neuron9.cir ${OutputDataDir}/NEURON/Neuron9.cir.prn Neuron9.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/Neuron9.cir.verify PROPERTIES FIXTURES_REQUIRED Neuron9.cir)
  set_property(TEST ${TestNamePrefix}NEURON/Neuron9.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/dlambda.cir COMMAND $<TARGET_FILE:Xyce> dlambda.cir )
  set_property(TEST ${TestNamePrefix}NEURON/dlambda.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/dlambda.cir PROPERTIES FIXTURES_SETUP dlambda.cir)
  add_test(NAME ${TestNamePrefix}NEURON/dlambda.cir.verify COMMAND ${XYCE_VERIFY} dlambda.cir ${OutputDataDir}/NEURON/dlambda.cir.prn dlambda.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/dlambda.cir.verify PROPERTIES FIXTURES_REQUIRED dlambda.cir)
  set_property(TEST ${TestNamePrefix}NEURON/dlambda.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/dlambda.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> dlambda.cir )
  set_property(TEST ${TestNamePrefix}NEURON/dlambda.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/dlambda.cir PROPERTIES FIXTURES_SETUP dlambda.cir)
  add_test(NAME ${TestNamePrefix}NEURON/dlambda.cir.verify COMMAND ${XYCE_VERIFY} dlambda.cir ${OutputDataDir}/NEURON/dlambda.cir.prn dlambda.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/dlambda.cir.verify PROPERTIES FIXTURES_REQUIRED dlambda.cir)
  set_property(TEST ${TestNamePrefix}NEURON/dlambda.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/passivePatch-level1.cir.sh COMMAND bash passivePatch-level1.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} passivePatch-level1.cir ${OutputDataDir}/NEURON/passivePatch-level1.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/passivePatch-level1.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/passivePatch-level1.cir.sh COMMAND bash passivePatch-level1.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} passivePatch-level1.cir ${OutputDataDir}/NEURON/passivePatch-level1.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/passivePatch-level1.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/passivePatch-level6.cir.sh COMMAND bash passivePatch-level6.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} passivePatch-level6.cir ${OutputDataDir}/NEURON/passivePatch-level6.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/passivePatch-level6.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/passivePatch-level6.cir.sh COMMAND bash passivePatch-level6.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} passivePatch-level6.cir ${OutputDataDir}/NEURON/passivePatch-level6.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/passivePatch-level6.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir COMMAND $<TARGET_FILE:Xyce> rallpack1-1000level1s.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1-1000level1s.cir PROPERTIES FIXTURES_SETUP rallpack1-1000level1s.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir.verify COMMAND ${XYCE_VERIFY} rallpack1-1000level1s.cir ${OutputDataDir}/NEURON/rallpack1-1000level1s.cir.prn rallpack1-1000level1s.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1-1000level1s.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack1-1000level1s.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> rallpack1-1000level1s.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1-1000level1s.cir PROPERTIES FIXTURES_SETUP rallpack1-1000level1s.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir.verify COMMAND ${XYCE_VERIFY} rallpack1-1000level1s.cir ${OutputDataDir}/NEURON/rallpack1-1000level1s.cir.prn rallpack1-1000level1s.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1-1000level1s.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack1-1000level1s.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1-1000level1s.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1.cir COMMAND $<TARGET_FILE:Xyce> rallpack1.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1.cir PROPERTIES FIXTURES_SETUP rallpack1.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1.cir.verify COMMAND ${XYCE_VERIFY} rallpack1.cir ${OutputDataDir}/NEURON/rallpack1.cir.prn rallpack1.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack1.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> rallpack1.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1.cir PROPERTIES FIXTURES_SETUP rallpack1.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack1.cir.verify COMMAND ${XYCE_VERIFY} rallpack1.cir ${OutputDataDir}/NEURON/rallpack1.cir.prn rallpack1.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack1.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack1.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack1.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir COMMAND $<TARGET_FILE:Xyce> rallpack2-level1neuron.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2-level1neuron.cir PROPERTIES FIXTURES_SETUP rallpack2-level1neuron.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir.verify COMMAND ${XYCE_VERIFY} rallpack2-level1neuron.cir ${OutputDataDir}/NEURON/rallpack2-level1neuron.cir.prn rallpack2-level1neuron.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2-level1neuron.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack2-level1neuron.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> rallpack2-level1neuron.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2-level1neuron.cir PROPERTIES FIXTURES_SETUP rallpack2-level1neuron.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir.verify COMMAND ${XYCE_VERIFY} rallpack2-level1neuron.cir ${OutputDataDir}/NEURON/rallpack2-level1neuron.cir.prn rallpack2-level1neuron.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2-level1neuron.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack2-level1neuron.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2-level1neuron.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2.cir COMMAND $<TARGET_FILE:Xyce> rallpack2.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2.cir PROPERTIES FIXTURES_SETUP rallpack2.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2.cir.verify COMMAND ${XYCE_VERIFY} rallpack2.cir ${OutputDataDir}/NEURON/rallpack2.cir.prn rallpack2.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack2.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> rallpack2.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2.cir PROPERTIES FIXTURES_SETUP rallpack2.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack2.cir.verify COMMAND ${XYCE_VERIFY} rallpack2.cir ${OutputDataDir}/NEURON/rallpack2.cir.prn rallpack2.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack2.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack2.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack2.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack3-1000level1s.cir COMMAND $<TARGET_FILE:Xyce> rallpack3-1000level1s.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack3-1000level1s.cir PROPERTY LABELS "serial;weekly;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack3-1000level1s.cir PROPERTIES FIXTURES_SETUP rallpack3-1000level1s.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack3-1000level1s.cir.verify COMMAND ${XYCE_VERIFY} rallpack3-1000level1s.cir ${OutputDataDir}/NEURON/rallpack3-1000level1s.cir.prn rallpack3-1000level1s.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack3-1000level1s.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack3-1000level1s.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack3-1000level1s.cir.verify PROPERTY LABELS "serial;weekly;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/rallpack3.cir COMMAND $<TARGET_FILE:Xyce> rallpack3.cir )
  set_property(TEST ${TestNamePrefix}NEURON/rallpack3.cir PROPERTY LABELS "serial;weekly;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/rallpack3.cir PROPERTIES FIXTURES_SETUP rallpack3.cir)
  add_test(NAME ${TestNamePrefix}NEURON/rallpack3.cir.verify COMMAND ${XYCE_VERIFY} rallpack3.cir ${OutputDataDir}/NEURON/rallpack3.cir.prn rallpack3.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/rallpack3.cir.verify PROPERTIES FIXTURES_REQUIRED rallpack3.cir)
  set_property(TEST ${TestNamePrefix}NEURON/rallpack3.cir.verify PROPERTY LABELS "serial;weekly;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}NEURON/synapseDCOP-level4.cir COMMAND $<TARGET_FILE:Xyce> synapseDCOP-level4.cir )
  set_property(TEST ${TestNamePrefix}NEURON/synapseDCOP-level4.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/synapseDCOP-level4.cir PROPERTIES FIXTURES_SETUP synapseDCOP-level4.cir)
  add_test(NAME ${TestNamePrefix}NEURON/synapseDCOP-level4.cir.verify COMMAND ${XYCE_VERIFY} synapseDCOP-level4.cir ${OutputDataDir}/NEURON/synapseDCOP-level4.cir.prn synapseDCOP-level4.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/synapseDCOP-level4.cir.verify PROPERTIES FIXTURES_REQUIRED synapseDCOP-level4.cir)
  set_property(TEST ${TestNamePrefix}NEURON/synapseDCOP-level4.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  )
  add_test(NAME ${TestNamePrefix}NEURON/synapseDCOP-level4.cir COMMAND mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce> synapseDCOP-level4.cir )
  set_property(TEST ${TestNamePrefix}NEURON/synapseDCOP-level4.cir PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
  set_tests_properties(${TestNamePrefix}NEURON/synapseDCOP-level4.cir PROPERTIES FIXTURES_SETUP synapseDCOP-level4.cir)
  add_test(NAME ${TestNamePrefix}NEURON/synapseDCOP-level4.cir.verify COMMAND ${XYCE_VERIFY} synapseDCOP-level4.cir ${OutputDataDir}/NEURON/synapseDCOP-level4.cir.prn synapseDCOP-level4.cir.prn )
  set_tests_properties(${TestNamePrefix}NEURON/synapseDCOP-level4.cir.verify PROPERTIES FIXTURES_REQUIRED synapseDCOP-level4.cir)
  set_property(TEST ${TestNamePrefix}NEURON/synapseDCOP-level4.cir.verify PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/synapticCurrent-level3.cir.sh COMMAND bash synapticCurrent-level3.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} synapticCurrent-level3.cir ${OutputDataDir}/NEURON/synapticCurrent-level3.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/synapticCurrent-level3.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/synapticCurrent-level3.cir.sh COMMAND bash synapticCurrent-level3.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} synapticCurrent-level3.cir ${OutputDataDir}/NEURON/synapticCurrent-level3.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/synapticCurrent-level3.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/synapticCurrent-level4.cir.sh COMMAND bash synapticCurrent-level4.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} synapticCurrent-level4.cir ${OutputDataDir}/NEURON/synapticCurrent-level4.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/synapticCurrent-level4.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
if( Xyce_PARALLEL_MPI  AND BASH_FOUND )
  add_test(NAME ${TestNamePrefix}NEURON/synapticCurrent-level4.cir.sh COMMAND bash synapticCurrent-level4.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} synapticCurrent-level4.cir ${OutputDataDir}/NEURON/synapticCurrent-level4.cir.prn )
  set_property(TEST ${TestNamePrefix}NEURON/synapticCurrent-level4.cir.sh PROPERTY LABELS "serial;parallel;nightly;valgrind;neuron")
endif()
