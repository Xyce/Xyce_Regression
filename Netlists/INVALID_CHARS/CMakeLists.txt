# This file is generated by the script SetUpCtestFiles.py
# If possible, modify the script to fix any issues with the CMakeLists.txt files
# Or you can remove this header line to prevent this file from being overwritten

file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/tags ${CMAKE_CURRENT_BINARY_DIR}/tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_device_node_names.cir ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_device_node_names.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_device_node_names.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_device_node_names2.cir ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_device_node_names2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_device_node_names2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_device_node_names2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_ydevice_names.cir ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ydevice_names.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_ydevice_names.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ydevice_names.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ydevice_names.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_ydevice_names.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ydevice_names.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_expressions.cir ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_expressions.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_expressions.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_expressions.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_expressions.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_expressions.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_expressions.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_ac_expressions.cir ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ac_expressions.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_ac_expressions.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ac_expressions.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ac_expressions.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_ac_expressions.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_ac_expressions.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_noise_expressions.cir ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_noise_expressions.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_noise_expressions.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_noise_expressions.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_noise_expressions.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_noise_expressions.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_noise_expressions.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/valid_chars_func_names.cir ${CMAKE_CURRENT_BINARY_DIR}/valid_chars_func_names.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_in_node_name.cir ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_in_node_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_in_node_name.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_in_node_name2.cir ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_in_node_name2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_in_node_name2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/colon_in_node_name2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_fails_device_name.cir ${CMAKE_CURRENT_BINARY_DIR}/colon_fails_device_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/colon_fails_device_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/colon_fails_device_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/colon_fails_device_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/comma_fails_device_name.cir ${CMAKE_CURRENT_BINARY_DIR}/comma_fails_device_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/comma_fails_device_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/comma_fails_device_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/comma_fails_device_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/comma_fails_node_name.cir ${CMAKE_CURRENT_BINARY_DIR}/comma_fails_node_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/comma_fails_node_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/comma_fails_node_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/comma_fails_node_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/double_quote_fails_device_name.cir ${CMAKE_CURRENT_BINARY_DIR}/double_quote_fails_device_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/double_quote_fails_device_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/double_quote_fails_device_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/double_quote_fails_device_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/double_quote_fails_node_name.cir ${CMAKE_CURRENT_BINARY_DIR}/double_quote_fails_node_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/double_quote_fails_node_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/double_quote_fails_node_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/double_quote_fails_node_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/equal_fails_device_name.cir ${CMAKE_CURRENT_BINARY_DIR}/equal_fails_device_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/equal_fails_device_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/equal_fails_device_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/equal_fails_device_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/equal_fails_node_name.cir ${CMAKE_CURRENT_BINARY_DIR}/equal_fails_node_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/equal_fails_node_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/equal_fails_node_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/equal_fails_node_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/left_curly_fails_device_name.cir ${CMAKE_CURRENT_BINARY_DIR}/left_curly_fails_device_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/left_curly_fails_device_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/left_curly_fails_device_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/left_curly_fails_device_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/left_curly_fails_node_name.cir ${CMAKE_CURRENT_BINARY_DIR}/left_curly_fails_node_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/left_curly_fails_node_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/left_curly_fails_node_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/left_curly_fails_node_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/parens_fail_device_name.cir ${CMAKE_CURRENT_BINARY_DIR}/parens_fail_device_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/parens_fail_device_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/parens_fail_device_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/parens_fail_device_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/parens_fail_node_name.cir ${CMAKE_CURRENT_BINARY_DIR}/parens_fail_node_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/parens_fail_node_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/parens_fail_node_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/parens_fail_node_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_fails_device_name.cir ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_fails_device_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_fails_device_name.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_fails_device_name2.cir ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name2.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_fails_device_name2.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name2.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name2.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_fails_device_name2.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/period_fails_device_name2.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_in_node_name.cir ${CMAKE_CURRENT_BINARY_DIR}/period_in_node_name.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_in_node_name.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/period_in_node_name.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/period_in_node_name.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/period_in_node_name.cir.tags ${CMAKE_CURRENT_BINARY_DIR}/period_in_node_name.cir.tags ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/right_curly_fails.cir ${CMAKE_CURRENT_BINARY_DIR}/right_curly_fails.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/right_curly_fails.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/right_curly_fails.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/right_curly_fails.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semicolon_fails.cir ${CMAKE_CURRENT_BINARY_DIR}/semicolon_fails.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/semicolon_fails.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/semicolon_fails.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/semicolon_fails.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/single_quote_fails.cir ${CMAKE_CURRENT_BINARY_DIR}/single_quote_fails.cir ONLY_IF_DIFFERENT)
file(COPY_FILE ${CMAKE_CURRENT_SOURCE_DIR}/single_quote_fails.cir.sh ${CMAKE_CURRENT_BINARY_DIR}/single_quote_fails.cir.sh ONLY_IF_DIFFERENT)
file(CHMOD ${CMAKE_CURRENT_BINARY_DIR}/single_quote_fails.cir.sh PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/colon_fails_device_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} colon_fails_device_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} colon_fails_device_name.cir ${OutputDataDir}/INVALID_CHARS/colon_fails_device_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/colon_fails_device_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/colon_in_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} colon_in_node_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} colon_in_node_name.cir ${OutputDataDir}/INVALID_CHARS/colon_in_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/colon_in_node_name.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/colon_in_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} colon_in_node_name.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} colon_in_node_name.cir ${OutputDataDir}/INVALID_CHARS/colon_in_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/colon_in_node_name.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/colon_in_node_name2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} colon_in_node_name2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} colon_in_node_name2.cir ${OutputDataDir}/INVALID_CHARS/colon_in_node_name2.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/colon_in_node_name2.cir.sh PROPERTY LABELS "serial;parallel;nightly;hspice;issue223;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/colon_in_node_name2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} colon_in_node_name2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} colon_in_node_name2.cir ${OutputDataDir}/INVALID_CHARS/colon_in_node_name2.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/colon_in_node_name2.cir.sh PROPERTY LABELS "serial;parallel;nightly;hspice;issue223;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/comma_fails_device_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} comma_fails_device_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} comma_fails_device_name.cir ${OutputDataDir}/INVALID_CHARS/comma_fails_device_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/comma_fails_device_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/comma_fails_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} comma_fails_node_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} comma_fails_node_name.cir ${OutputDataDir}/INVALID_CHARS/comma_fails_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/comma_fails_node_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/double_quote_fails_device_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} double_quote_fails_device_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} double_quote_fails_device_name.cir ${OutputDataDir}/INVALID_CHARS/double_quote_fails_device_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/double_quote_fails_device_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/double_quote_fails_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} double_quote_fails_node_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} double_quote_fails_node_name.cir ${OutputDataDir}/INVALID_CHARS/double_quote_fails_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/double_quote_fails_node_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/equal_fails_device_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} equal_fails_device_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} equal_fails_device_name.cir ${OutputDataDir}/INVALID_CHARS/equal_fails_device_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/equal_fails_device_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/equal_fails_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} equal_fails_node_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} equal_fails_node_name.cir ${OutputDataDir}/INVALID_CHARS/equal_fails_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/equal_fails_node_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/left_curly_fails_device_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} left_curly_fails_device_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} left_curly_fails_device_name.cir ${OutputDataDir}/INVALID_CHARS/left_curly_fails_device_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/left_curly_fails_device_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/left_curly_fails_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} left_curly_fails_node_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} left_curly_fails_node_name.cir ${OutputDataDir}/INVALID_CHARS/left_curly_fails_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/left_curly_fails_node_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/parens_fail_device_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} parens_fail_device_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} parens_fail_device_name.cir ${OutputDataDir}/INVALID_CHARS/parens_fail_device_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/parens_fail_device_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/parens_fail_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} parens_fail_node_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} parens_fail_node_name.cir ${OutputDataDir}/INVALID_CHARS/parens_fail_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/parens_fail_node_name.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/period_fails_device_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} period_fails_device_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} period_fails_device_name.cir ${OutputDataDir}/INVALID_CHARS/period_fails_device_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/period_fails_device_name.cir.sh PROPERTY LABELS "serial;nightly;issue223;hspice;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/period_fails_device_name2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} period_fails_device_name2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} period_fails_device_name2.cir ${OutputDataDir}/INVALID_CHARS/period_fails_device_name2.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/period_fails_device_name2.cir.sh PROPERTY LABELS "serial;nightly;issue223;hspice;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/period_in_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} period_in_node_name.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} period_in_node_name.cir ${OutputDataDir}/INVALID_CHARS/period_in_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/period_in_node_name.cir.sh PROPERTY LABELS "serial;parallel;nightly;hspice;issue223;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/period_in_node_name.cir.sh COMMAND perl -I${XyceRegressionTestScripts} period_in_node_name.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} period_in_node_name.cir ${OutputDataDir}/INVALID_CHARS/period_in_node_name.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/period_in_node_name.cir.sh PROPERTY LABELS "serial;parallel;nightly;hspice;issue223;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/right_curly_fails.cir.sh COMMAND perl -I${XyceRegressionTestScripts} right_curly_fails.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} right_curly_fails.cir ${OutputDataDir}/INVALID_CHARS/right_curly_fails.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/right_curly_fails.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/semicolon_fails.cir.sh COMMAND perl -I${XyceRegressionTestScripts} semicolon_fails.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} semicolon_fails.cir ${OutputDataDir}/INVALID_CHARS/semicolon_fails.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/semicolon_fails.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/single_quote_fails.cir.sh COMMAND perl -I${XyceRegressionTestScripts} single_quote_fails.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} single_quote_fails.cir ${OutputDataDir}/INVALID_CHARS/single_quote_fails.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/single_quote_fails.cir.sh PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_ac_expressions.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_ac_expressions.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_ac_expressions.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_ac_expressions.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_ac_expressions.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_ac_expressions.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_ac_expressions.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_ac_expressions.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_ac_expressions.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_ac_expressions.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_device_node_names.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_device_node_names.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_device_node_names.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_device_node_names.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_device_node_names.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_device_node_names.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_device_node_names2.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_device_node_names2.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_device_node_names2.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names2.cir.sh PROPERTY LABELS "serial;parallel;nightly;hspice;issue223;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names2.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_device_node_names2.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_device_node_names2.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_device_node_names2.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_device_node_names2.cir.sh PROPERTY LABELS "serial;parallel;nightly;hspice;issue223;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_expressions.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_expressions.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_expressions.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_expressions.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_expressions.cir.sh PROPERTY LABELS "serial;parallel;nightly;expression;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_expressions.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_expressions.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_expressions.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_expressions.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_expressions.cir.sh PROPERTY LABELS "serial;parallel;nightly;expression;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_func_names.cir COMMAND $<TARGET_FILE:Xyce> valid_chars_func_names.cir )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_func_names.cir PROPERTY LABELS "serial;nightly;invalidchars")
  set_tests_properties(${TestNamePrefix}INVALID_CHARS/valid_chars_func_names.cir PROPERTIES FIXTURES_SETUP valid_chars_func_names.cir)
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_func_names.cir.verify COMMAND ${XYCE_VERIFY} valid_chars_func_names.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_func_names.cir.prn valid_chars_func_names.cir.prn )
  set_tests_properties(${TestNamePrefix}INVALID_CHARS/valid_chars_func_names.cir.verify PROPERTIES FIXTURES_REQUIRED valid_chars_func_names.cir)
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_func_names.cir.verify PROPERTY LABELS "serial;nightly;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_noise_expressions.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_noise_expressions.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_noise_expressions.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_noise_expressions.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_noise_expressions.cir.sh PROPERTY LABELS "serial;parallel;nightly;expression;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_noise_expressions.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_noise_expressions.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_noise_expressions.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_noise_expressions.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_noise_expressions.cir.sh PROPERTY LABELS "serial;parallel;nightly;expression;invalidchars")
endif()
if( (NOT Xyce_PARALLEL_MPI) AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_ydevice_names.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_ydevice_names.cir.sh $<TARGET_FILE:Xyce> ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_ydevice_names.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_ydevice_names.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_ydevice_names.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
if( Xyce_PARALLEL_MPI  AND PERL_FOUND )
  add_test(NAME ${TestNamePrefix}INVALID_CHARS/valid_chars_ydevice_names.cir.sh COMMAND perl -I${XyceRegressionTestScripts} valid_chars_ydevice_names.cir.sh "mpiexec -bind-to none -np 2 $<TARGET_FILE:Xyce>" ${XYCE_VERIFY} ${XYCE_VERIFY} valid_chars_ydevice_names.cir ${OutputDataDir}/INVALID_CHARS/valid_chars_ydevice_names.cir.prn )
  set_property(TEST ${TestNamePrefix}INVALID_CHARS/valid_chars_ydevice_names.cir.sh PROPERTY LABELS "serial;parallel;nightly;invalidchars")
endif()
